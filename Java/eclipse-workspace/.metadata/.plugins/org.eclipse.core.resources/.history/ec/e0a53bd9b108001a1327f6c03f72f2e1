package br.com.capivarawarsmongo.models;

public class JogadoresEmCampeonato {
	   

	    @Column(name = "DATAHORA_INICIO_PARTICIPACAO", columnDefinition = "DATETIME")
	    private LocalDateTime dataHoraInicioParticipacao;

	    @Column(name = "DATAHORA_FIM_PARTICIPACAO", columnDefinition = "DATETIME")
	    private LocalDateTime dataHoraFimParticipacao;

	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="constants attributes...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="static attributes...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="auxiliary attributes...">
	    //</editor-fold>
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="constructors...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="methods...">
	    //<editor-fold defaultstate="collapsed" desc="getter and setter methods...">
	    public IdJogadoresEmCampeonatoPK getIdJogadoresEmCampeonatoPK() {
	        return idJogadoresEmCampeonatoPK;
	    }

	    public JogadoresEmCampeonato setIdJogadoresEmCampeonatoPK(IdJogadoresEmCampeonatoPK idJogadoresEmCampeonatoPK) {
	        this.idJogadoresEmCampeonatoPK = idJogadoresEmCampeonatoPK;
	        return this;
	    }

	    public LocalDateTime getDataHoraInicioParticipacao() {
	        return dataHoraInicioParticipacao;
	    }

	    public JogadoresEmCampeonato setDataHoraInicioParticipacao(LocalDateTime dataHoraInicioParticipacao) {
	        if (dataHoraInicioParticipacao == null) {
	            this.dataHoraInicioParticipacao = LocalDateTime.now();
	        } else {
	            this.dataHoraInicioParticipacao = dataHoraInicioParticipacao;
	        }

	        return this;
	    }

	    public LocalDateTime getDataHoraFimParticipacao() {
	        return dataHoraFimParticipacao;
	    }

	    public JogadoresEmCampeonato setDataHoraFimParticipacao(LocalDateTime dataHoraFimParticipacao) {
	        if (dataHoraFimParticipacao == null) {
	            this.dataHoraFimParticipacao = LocalDateTime.now();
	        } else {
	            this.dataHoraFimParticipacao = dataHoraFimParticipacao;
	        }

	        return this;
	    }

	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="override methods...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="auxiliary methods...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="static methods...">
	    //</editor-fold>
	    //<editor-fold defaultstate="collapsed" desc="main methods...">
	    public boolean preencheuCamposObrigatorios() {
	        if (dataHoraInicioParticipacao == null) {
	            this.dataHoraInicioParticipacao = LocalDateTime.now();
	        }

	        return idJogadoresEmCampeonatoPK != null;
	    }
}
