{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7","program":"/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=d63afe12375e8aa4","-C","extra-filename=-d63afe12375e8aa4","--out-dir","/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps","-L","dependency=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps","--extern","futures_core=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libfutures_core-0a96d7cf85a3c2c3.rmeta","--extern","futures_io=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libfutures_io-fdb32c481a3a9f5e.rmeta","--extern","futures_macro=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libfutures_macro-480e616c75252b4f.so","--extern","futures_task=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libfutures_task-9d8dffa61b00bb53.rmeta","--extern","memchr=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libmemchr-b6da394695ec2edf.rmeta","--extern","pin_project=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libpin_project-46c1565e297b0eec.rmeta","--extern","pin_utils=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libpin_utils-aa8e27757ec3cf33.rmeta","--extern","proc_macro_hack=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libproc_macro_hack-31e6583f82098a11.so","--extern","proc_macro_nested=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libproc_macro_nested-405d975683d1d3c9.rmeta","--extern","slab=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libslab-560a8b8f37310699.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/web_crawler/target/rls/debug/deps/libfutures_util-d63afe12375e8aa4.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[6597826239804647976,8890625594438388223]},"crate_root":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src","external_crates":[{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":18,"id":{"name":"futures_core","disambiguator":[17846188185908526815,16527903141768937787]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[16305234420248669003,11139691240371298179]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/join_mod.rs","num":20,"id":{"name":"proc_macro_hack","disambiguator":[12593543899052955847,1180523326950044250]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","num":21,"id":{"name":"futures_task","disambiguator":[6893248445944973872,11231763692670652239]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","num":22,"id":{"name":"once_cell","disambiguator":[12313906990279471851,9875858460806381181]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project","disambiguator":[6140916935824243026,4730000263734689637]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":24,"id":{"name":"pin_project_internal","disambiguator":[7600462844724909781,18254996439070459179]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","num":25,"id":{"name":"slab","disambiguator":[10037718275070548263,9525692549315446920]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","num":26,"id":{"name":"futures_io","disambiguator":[9232900326019863265,568518148750711291]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/join_mod.rs","num":27,"id":{"name":"futures_macro","disambiguator":[15834809721383590422,17455444376934387723]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/join_mod.rs","num":28,"id":{"name":"proc_macro_nested","disambiguator":[9927960365951911918,9177758620767201015]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","num":29,"id":{"name":"memchr","disambiguator":[414713410056883325,7901337422415418704]}}],"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2035,"byte_end":2036,"line_start":49,"line_end":49,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2035,"byte_end":2036,"line_start":49,"line_end":49,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30245},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2183,"byte_end":2189,"line_start":57,"line_end":57,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30249},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2198,"byte_end":2202,"line_start":57,"line_end":57,"column_start":32,"column_end":36},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30250},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2198,"byte_end":2202,"line_start":57,"line_end":57,"column_start":32,"column_end":36},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":2,"index":30247},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2204,"byte_end":2208,"line_start":57,"line_end":57,"column_start":38,"column_end":42},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30248},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2204,"byte_end":2208,"line_start":57,"line_end":57,"column_start":38,"column_end":42},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":2,"index":30390},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2224,"byte_end":2227,"line_start":58,"line_end":58,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30410},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2254,"byte_end":2257,"line_start":59,"line_end":59,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30411},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2254,"byte_end":2257,"line_start":59,"line_end":59,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":2,"index":30407},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2259,"byte_end":2261,"line_start":59,"line_end":59,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":2,"index":30408},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2259,"byte_end":2261,"line_start":59,"line_end":59,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2035,"byte_end":2036,"line_start":49,"line_end":49,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":89}},{"kind":"Use","ref_id":{"krate":18,"index":11},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35155,"byte_end":35164,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":18,"index":14},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35166,"byte_end":35180,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":18,"index":17},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35214,"byte_end":35225,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":2,"index":8493},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35227,"byte_end":35233,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":18,"index":32},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35235,"byte_end":35244,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":21,"index":111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35270,"byte_end":35279,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":21,"index":77},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35281,"byte_end":35295,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":21,"index":132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35297,"byte_end":35312,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":40904,"byte_end":40915,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":111}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41431,"byte_end":41437,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":111}},{"kind":"Use","ref_id":{"krate":0,"index":4037},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35427,"byte_end":35434,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":3930},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35436,"byte_end":35440,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35442,"byte_end":35451,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4424},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35453,"byte_end":35460,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4215},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35462,"byte_end":35472,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4147},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35474,"byte_end":35477,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4492},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35479,"byte_end":35489,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4341},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35491,"byte_end":35495,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4546},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35497,"byte_end":35506,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4271},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35508,"byte_end":35515,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4091},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35611,"byte_end":35624,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35673,"byte_end":35684,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35883,"byte_end":35889,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5001},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35940,"byte_end":35947,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5168},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35949,"byte_end":35956,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5237},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35958,"byte_end":35964,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5375},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35966,"byte_end":35976,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5306},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35978,"byte_end":35987,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4643},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35989,"byte_end":35999,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5513},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36001,"byte_end":36007,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5444},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36009,"byte_end":36014,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5085},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36016,"byte_end":36022,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36024,"byte_end":36040,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36046,"byte_end":36058,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5666},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36060,"byte_end":36072,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36074,"byte_end":36085,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":4807},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36087,"byte_end":36097,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36269,"byte_end":36273,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5732},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36275,"byte_end":36279,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36320,"byte_end":36327,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36329,"byte_end":36336,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36383,"byte_end":36393,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5744},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36395,"byte_end":36404,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36459,"byte_end":36473,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5803},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36475,"byte_end":36487,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5862},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36525,"byte_end":36537,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36577,"byte_end":36584,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":651},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36586,"byte_end":36592,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36629,"byte_end":36632,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36634,"byte_end":36636,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36638,"byte_end":36643,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":5910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36645,"byte_end":36650,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36685,"byte_end":36689,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":721},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36691,"byte_end":36696,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36698,"byte_end":36703,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36705,"byte_end":36710,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6012},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36712,"byte_end":36716,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6065},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36718,"byte_end":36723,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36725,"byte_end":36730,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36732,"byte_end":36737,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":767},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36832,"byte_end":36840,"line_start":72,"line_end":72,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36842,"byte_end":36849,"line_start":72,"line_end":72,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36888,"byte_end":36894,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6308},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":36896,"byte_end":36902,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37001,"byte_end":37011,"line_start":80,"line_end":80,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6316},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37013,"byte_end":37022,"line_start":80,"line_end":80,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":850},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37070,"byte_end":37078,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37080,"byte_end":37089,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37091,"byte_end":37100,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37102,"byte_end":37111,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37113,"byte_end":37120,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6445},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37122,"byte_end":37130,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37132,"byte_end":37140,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6593},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37142,"byte_end":37150,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37255,"byte_end":37267,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37269,"byte_end":37279,"line_start":90,"line_end":90,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":938},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37326,"byte_end":37336,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37338,"byte_end":37347,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":963},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37444,"byte_end":37453,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6696},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37455,"byte_end":37463,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6702},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37501,"byte_end":37507,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6778},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37644,"byte_end":37653,"line_start":107,"line_end":107,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":11858},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37655,"byte_end":37664,"line_start":107,"line_end":107,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6799},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37666,"byte_end":37677,"line_start":107,"line_end":107,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37679,"byte_end":37696,"line_start":107,"line_end":107,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6810},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37698,"byte_end":37705,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":0,"index":6811},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":37698,"byte_end":37705,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":6794}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11873,"byte_end":11882,"line_start":311,"line_end":311,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11884,"byte_end":11896,"line_start":311,"line_end":311,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":62},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158647,"byte_end":158656,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":18,"index":65},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158658,"byte_end":158672,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":18,"index":82},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158706,"byte_end":158717,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158719,"byte_end":158725,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":18,"index":97},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158727,"byte_end":158736,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8281},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166026,"byte_end":166032,"line_start":149,"line_end":149,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1071}},{"kind":"Use","ref_id":{"krate":0,"index":8333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166209,"byte_end":166220,"line_start":155,"line_end":155,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1071}},{"kind":"Use","ref_id":{"krate":0,"index":8566},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167561,"byte_end":167572,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1071}},{"kind":"Use","ref_id":{"krate":0,"index":6823},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158852,"byte_end":158857,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":6880},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158859,"byte_end":158866,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":6936},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158868,"byte_end":158874,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":6981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158876,"byte_end":158885,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7030},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158887,"byte_end":158893,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7103},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158895,"byte_end":158904,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7632},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158906,"byte_end":158913,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7236},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158915,"byte_end":158922,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7295},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158924,"byte_end":158928,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7374},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158930,"byte_end":158937,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7440},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158939,"byte_end":158943,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158949,"byte_end":158956,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7572},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158958,"byte_end":158961,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7721},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158963,"byte_end":158967,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7786},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158969,"byte_end":158973,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7737},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158975,"byte_end":158983,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8385},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158985,"byte_end":158989,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7729},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158991,"byte_end":159005,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7835},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159007,"byte_end":159011,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159013,"byte_end":159022,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":1865},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159024,"byte_end":159033,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7489},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159039,"byte_end":159051,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":7960},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159053,"byte_end":159057,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8009},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159059,"byte_end":159068,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8085},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159070,"byte_end":159079,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8148},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159081,"byte_end":159085,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8218},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159087,"byte_end":159090,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8566},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159142,"byte_end":159153,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8281},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159204,"byte_end":159210,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159261,"byte_end":159272,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":11813},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159508,"byte_end":159523,"line_start":36,"line_end":36,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":11768},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159525,"byte_end":159533,"line_start":36,"line_end":36,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":11700},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159535,"byte_end":159552,"line_start":36,"line_end":36,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9919},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281270,"byte_end":281283,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1974}},{"kind":"Use","ref_id":{"krate":0,"index":2328},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159845,"byte_end":159855,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8615},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159857,"byte_end":159864,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159866,"byte_end":159873,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8842},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159875,"byte_end":159885,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8765},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159887,"byte_end":159896,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8916},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159898,"byte_end":159908,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9042},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159910,"byte_end":159916,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":8965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159918,"byte_end":159923,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9116},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159925,"byte_end":159931,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9453},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159937,"byte_end":159947,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9509},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159949,"byte_end":159958,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9260},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159960,"byte_end":159969,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159971,"byte_end":159983,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9403},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159985,"byte_end":159995,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9554},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":159997,"byte_end":160004,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9194},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160006,"byte_end":160016,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9186},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160018,"byte_end":160025,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9698},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160031,"byte_end":160043,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160045,"byte_end":160057,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9774},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160059,"byte_end":160071,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160073,"byte_end":160082,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9919},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160207,"byte_end":160220,"line_start":54,"line_end":54,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":11652},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160355,"byte_end":160373,"line_start":58,"line_end":58,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":11584},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160375,"byte_end":160395,"line_start":58,"line_end":58,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160452,"byte_end":160456,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9938},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160458,"byte_end":160462,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2559},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160501,"byte_end":160507,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160509,"byte_end":160515,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2583},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160552,"byte_end":160557,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9950},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160559,"byte_end":160564,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160599,"byte_end":160603,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9956},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160605,"byte_end":160609,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160650,"byte_end":160657,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":9998},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160659,"byte_end":160666,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2663},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160707,"byte_end":160714,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2655},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160716,"byte_end":160722,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2686},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160761,"byte_end":160767,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10004},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160769,"byte_end":160775,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2722},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160814,"byte_end":160820,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10064},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160822,"byte_end":160828,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10166},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160977,"byte_end":160991,"line_start":90,"line_end":90,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10516},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761701,"byte_end":8761705,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10204}},{"kind":"Use","ref_id":{"krate":0,"index":10517},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761701,"byte_end":8761705,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10285}},{"kind":"Use","ref_id":{"krate":0,"index":10496},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761707,"byte_end":8761714,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10204}},{"kind":"Use","ref_id":{"krate":0,"index":10497},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761707,"byte_end":8761714,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10286}},{"kind":"Use","ref_id":{"krate":0,"index":10486},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761716,"byte_end":8761726,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10204}},{"kind":"Use","ref_id":{"krate":0,"index":10505},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761728,"byte_end":8761738,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10204}},{"kind":"Use","ref_id":{"krate":0,"index":10370},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":161141,"byte_end":161157,"line_start":96,"line_end":96,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10473},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":161271,"byte_end":161281,"line_start":101,"line_end":101,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":10451},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":161283,"byte_end":161292,"line_start":101,"line_end":101,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":1865},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11955,"byte_end":11964,"line_start":314,"line_end":314,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11966,"byte_end":11978,"line_start":314,"line_end":314,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":260},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364735,"byte_end":364742,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":274},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364801,"byte_end":364806,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":305},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364866,"byte_end":364875,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":310},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364877,"byte_end":364885,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":18,"index":142},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364933,"byte_end":364944,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":0,"index":2769},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364982,"byte_end":364990,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":0,"index":2772},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364992,"byte_end":365005,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":2,"index":8659},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365038,"byte_end":365045,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":2,"index":32838},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365047,"byte_end":365051,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":2,"index":8669},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365053,"byte_end":365058,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":2,"index":32878},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365060,"byte_end":365068,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":2,"index":32887},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365070,"byte_end":365084,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":10},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365116,"byte_end":365121,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":13},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365123,"byte_end":365133,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":16},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365135,"byte_end":365145,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365151,"byte_end":365160,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":77},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365162,"byte_end":365176,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365178,"byte_end":365193,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365221,"byte_end":365231,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":21,"index":238},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":365279,"byte_end":365293,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":2754}},{"kind":"Use","ref_id":{"krate":26,"index":17},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372484,"byte_end":372493,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":26,"index":20},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372495,"byte_end":372505,"line_start":18,"line_end":18,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":26,"index":25},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372507,"byte_end":372516,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":26,"index":27},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372518,"byte_end":372530,"line_start":18,"line_end":18,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":2591},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372532,"byte_end":372537,"line_start":18,"line_end":18,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":6933},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372539,"byte_end":372548,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":6996},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372554,"byte_end":372561,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":3008},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372563,"byte_end":372573,"line_start":19,"line_end":19,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":2589},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372575,"byte_end":372581,"line_start":19,"line_end":19,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":1,"index":7010},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372583,"byte_end":372591,"line_start":19,"line_end":19,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10531},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373321,"byte_end":373331,"line_start":44,"line_end":44,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373376,"byte_end":373385,"line_start":47,"line_end":47,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10624},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373430,"byte_end":373439,"line_start":50,"line_end":50,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10677},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373474,"byte_end":373479,"line_start":53,"line_end":53,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10733},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373514,"byte_end":373519,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373553,"byte_end":373557,"line_start":59,"line_end":59,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10741},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373559,"byte_end":373563,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3055},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373606,"byte_end":373614,"line_start":62,"line_end":62,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10806},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373616,"byte_end":373623,"line_start":62,"line_end":62,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10877},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373661,"byte_end":373667,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373703,"byte_end":373708,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3115},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373710,"byte_end":373715,"line_start":68,"line_end":68,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10905},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373757,"byte_end":373764,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10913},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373799,"byte_end":373804,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10921},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374036,"byte_end":374041,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10972},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374074,"byte_end":374078,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374129,"byte_end":374141,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10990},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374186,"byte_end":374195,"line_start":93,"line_end":93,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":10999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374238,"byte_end":374246,"line_start":96,"line_end":96,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11010},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374293,"byte_end":374302,"line_start":99,"line_end":99,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11020},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374355,"byte_end":374367,"line_start":102,"line_end":102,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11031},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374412,"byte_end":374421,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3360},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374459,"byte_end":374465,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3358},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374467,"byte_end":374473,"line_start":108,"line_end":108,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11042},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374507,"byte_end":374511,"line_start":111,"line_end":111,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3402},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374545,"byte_end":374549,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3400},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374551,"byte_end":374555,"line_start":114,"line_end":114,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11051},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374592,"byte_end":374600,"line_start":117,"line_end":117,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11057},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374602,"byte_end":374611,"line_start":117,"line_end":117,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3457},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374613,"byte_end":374625,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3458},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374613,"byte_end":374625,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3473}},{"kind":"Use","ref_id":{"krate":0,"index":11063},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374659,"byte_end":374663,"line_start":120,"line_end":120,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11112},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374700,"byte_end":374706,"line_start":123,"line_end":123,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11119},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374741,"byte_end":374746,"line_start":126,"line_end":126,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11128},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374799,"byte_end":374812,"line_start":129,"line_end":129,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":11137},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374855,"byte_end":374863,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":2795}},{"kind":"Use","ref_id":{"krate":0,"index":3581},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12452,"byte_end":12464,"line_start":336,"line_end":336,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12466,"byte_end":12479,"line_start":336,"line_end":336,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12481,"byte_end":12493,"line_start":336,"line_end":336,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12495,"byte_end":12510,"line_start":336,"line_end":336,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11405},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8812065,"byte_end":8812081,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":11303}},{"kind":"Use","ref_id":{"krate":0,"index":11326},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8812083,"byte_end":8812088,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":11303}},{"kind":"Use","ref_id":{"krate":0,"index":11363},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8812090,"byte_end":8812105,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":11303}},{"kind":"Use","ref_id":{"krate":0,"index":11382},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8812107,"byte_end":8812117,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":11303}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":99},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":11303}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","byte_start":14593,"byte_end":14597,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","byte_start":14738,"byte_end":14746,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","byte_start":14672,"byte_end":14711,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/pending.rs","byte_start":15806,"byte_end":15818,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/pending.rs","byte_start":15943,"byte_end":15954,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/pending.rs","byte_start":15877,"byte_end":15916,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/random.rs","byte_start":33827,"byte_end":33834,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13801,"byte_end":13813,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13776,"byte_end":13793,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13875,"byte_end":13894,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13850,"byte_end":13867,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13971,"byte_end":13990,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/mod.rs","byte_start":13946,"byte_end":13963,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2113,"byte_end":2122,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":11970},{"krate":0,"index":84},{"krate":0,"index":11972},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":11976},{"krate":0,"index":88},{"krate":0,"index":11978},{"krate":0,"index":89}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2058,"byte_end":2089,"line_start":52,"line_end":52,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":2284,"byte_end":2295,"line_start":62,"line_end":62,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":99},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":1056},{"krate":0,"index":6760},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":12660},{"krate":0,"index":1057}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"/ Futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":34896,"byte_end":34907,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":34908,"byte_end":34911,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":34912,"byte_end":34986,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":34987,"byte_end":35065,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Future` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":35066,"byte_end":35096,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58094,"byte_end":58099,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3877},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58118,"byte_end":58124,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58143,"byte_end":58148,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3872},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58068,"byte_end":58075,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3877},{"krate":0,"index":3879}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58004,"byte_end":58041,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3901},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58068,"byte_end":58075,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58004,"byte_end":58041,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3930},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62507,"byte_end":62511,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62428,"byte_end":62495,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62396,"byte_end":62410,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3953},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62507,"byte_end":62511,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62396,"byte_end":62410,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64293,"byte_end":64303,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62671,"byte_end":62739,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62744,"byte_end":62747,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62752,"byte_end":62820,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62825,"byte_end":62870,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62875,"byte_end":62878,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62883,"byte_end":62897,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62902,"byte_end":62905,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62910,"byte_end":62917,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62922,"byte_end":62963,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62968,"byte_end":62999,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63004,"byte_end":63060,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63065,"byte_end":63089,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63094,"byte_end":63129,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63134,"byte_end":63159,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63164,"byte_end":63167,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63172,"byte_end":63221,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63226,"byte_end":63229,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63234,"byte_end":63276,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63281,"byte_end":63320,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63325,"byte_end":63364,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63369,"byte_end":63386,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63391,"byte_end":63394,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63399,"byte_end":63469,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63474,"byte_end":63513,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63518,"byte_end":63559,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63564,"byte_end":63590,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63595,"byte_end":63598,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63603,"byte_end":63613,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63618,"byte_end":63635,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63640,"byte_end":63674,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63679,"byte_end":63726,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63731,"byte_end":63780,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63785,"byte_end":63847,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63852,"byte_end":63876,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63881,"byte_end":63924,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63929,"byte_end":63986,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":63991,"byte_end":64066,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64071,"byte_end":64101,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64106,"byte_end":64123,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64128,"byte_end":64142,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64147,"byte_end":64231,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64236,"byte_end":64245,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64250,"byte_end":64255,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64260,"byte_end":64269,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64274,"byte_end":64281,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":3978},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65279,"byte_end":65289,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3980},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65353,"byte_end":65361,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3975},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65261,"byte_end":65264,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3980}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65184,"byte_end":65251,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65103,"byte_end":65166,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4007},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65261,"byte_end":65264,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4012}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65103,"byte_end":65166,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4039}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4057},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":4060},{"krate":0,"index":4061}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4091},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4093}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4114},{"krate":0,"index":4115}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4147},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4150}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4172},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4176},{"krate":0,"index":4177}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4215},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4217}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4235},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4271},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4274}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4296},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4300},{"krate":0,"index":4301}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4341},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4345}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4371},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4376},{"krate":0,"index":4377}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4424},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4427}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4449},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4492},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4494}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":4515},{"krate":0,"index":4516}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4546},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4548}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":4569},{"krate":0,"index":4570}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66904,"byte_end":66915,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66825,"byte_end":66892,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66793,"byte_end":66807,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4621},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66904,"byte_end":66915,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4624},{"krate":0,"index":4625}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66793,"byte_end":66807,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":67885,"byte_end":67891,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":67742,"byte_end":67805,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":67806,"byte_end":67873,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":70003,"byte_end":70007,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69734,"byte_end":69808,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69813,"byte_end":69886,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69891,"byte_end":69959,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69964,"byte_end":69991,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":329},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41591,"byte_end":41600,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41492,"byte_end":41566,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41567,"byte_end":41580,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42432,"byte_end":42435,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41615,"byte_end":41690,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41695,"byte_end":41718,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41723,"byte_end":41726,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41731,"byte_end":41805,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41810,"byte_end":41881,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41886,"byte_end":41948,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41953,"byte_end":41956,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41961,"byte_end":42032,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42037,"byte_end":42108,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42113,"byte_end":42134,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42139,"byte_end":42142,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42147,"byte_end":42161,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42166,"byte_end":42169,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42174,"byte_end":42181,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42186,"byte_end":42227,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42232,"byte_end":42267,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42272,"byte_end":42275,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42280,"byte_end":42309,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42314,"byte_end":42357,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42362,"byte_end":42398,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42403,"byte_end":42412,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42417,"byte_end":42424,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42832,"byte_end":42840,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42605,"byte_end":42680,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42685,"byte_end":42708,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42713,"byte_end":42716,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42721,"byte_end":42799,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42804,"byte_end":42824,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43852,"byte_end":43856,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":42999,"byte_end":43075,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43080,"byte_end":43123,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43128,"byte_end":43131,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43136,"byte_end":43207,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43212,"byte_end":43286,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43291,"byte_end":43307,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43312,"byte_end":43315,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43320,"byte_end":43395,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43400,"byte_end":43411,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43416,"byte_end":43419,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43424,"byte_end":43495,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43500,"byte_end":43526,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43531,"byte_end":43534,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43539,"byte_end":43553,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43558,"byte_end":43561,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43566,"byte_end":43573,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43578,"byte_end":43619,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43624,"byte_end":43659,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43664,"byte_end":43667,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43672,"byte_end":43706,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43711,"byte_end":43776,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43781,"byte_end":43818,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43823,"byte_end":43832,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":43837,"byte_end":43844,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44726,"byte_end":44737,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44068,"byte_end":44143,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44148,"byte_end":44169,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44174,"byte_end":44177,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44182,"byte_end":44262,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44267,"byte_end":44339,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44344,"byte_end":44347,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44352,"byte_end":44366,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44371,"byte_end":44374,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44379,"byte_end":44386,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44391,"byte_end":44432,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44437,"byte_end":44472,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44477,"byte_end":44480,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44485,"byte_end":44499,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44504,"byte_end":44532,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44537,"byte_end":44573,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44578,"byte_end":44590,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44595,"byte_end":44633,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44638,"byte_end":44644,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44649,"byte_end":44652,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44657,"byte_end":44692,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44697,"byte_end":44706,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44711,"byte_end":44718,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45576,"byte_end":45588,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44917,"byte_end":44993,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":44998,"byte_end":45019,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45024,"byte_end":45027,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45032,"byte_end":45111,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45116,"byte_end":45188,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45193,"byte_end":45196,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45201,"byte_end":45215,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45220,"byte_end":45223,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45228,"byte_end":45235,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45240,"byte_end":45281,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45286,"byte_end":45321,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45326,"byte_end":45329,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45334,"byte_end":45348,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45353,"byte_end":45381,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45386,"byte_end":45422,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45427,"byte_end":45439,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45444,"byte_end":45482,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45487,"byte_end":45493,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45498,"byte_end":45501,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45506,"byte_end":45542,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45547,"byte_end":45556,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45561,"byte_end":45568,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46367,"byte_end":46378,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45769,"byte_end":45822,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45827,"byte_end":45830,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45835,"byte_end":45909,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45914,"byte_end":45977,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45982,"byte_end":45985,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":45990,"byte_end":46004,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46009,"byte_end":46012,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46017,"byte_end":46024,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46029,"byte_end":46070,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46075,"byte_end":46110,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46115,"byte_end":46150,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46155,"byte_end":46158,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46163,"byte_end":46193,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46198,"byte_end":46236,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46241,"byte_end":46292,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46297,"byte_end":46333,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46338,"byte_end":46347,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46352,"byte_end":46359,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47243,"byte_end":47250,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46517,"byte_end":46581,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46586,"byte_end":46622,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46627,"byte_end":46630,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46635,"byte_end":46704,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46709,"byte_end":46746,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46751,"byte_end":46754,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46759,"byte_end":46819,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46824,"byte_end":46827,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46832,"byte_end":46903,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46908,"byte_end":46934,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46939,"byte_end":46942,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46947,"byte_end":46961,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46966,"byte_end":46969,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46974,"byte_end":46981,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":46986,"byte_end":47027,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47032,"byte_end":47067,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47072,"byte_end":47075,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47080,"byte_end":47126,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47131,"byte_end":47172,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47177,"byte_end":47209,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47214,"byte_end":47223,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47228,"byte_end":47235,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48355,"byte_end":48369,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47464,"byte_end":47539,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47544,"byte_end":47567,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47572,"byte_end":47575,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47580,"byte_end":47652,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47657,"byte_end":47730,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47735,"byte_end":47749,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47754,"byte_end":47757,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47762,"byte_end":47832,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47837,"byte_end":47855,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47860,"byte_end":47863,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47868,"byte_end":47882,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47887,"byte_end":47890,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47895,"byte_end":47902,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47907,"byte_end":47948,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47953,"byte_end":47988,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":47993,"byte_end":48036,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48041,"byte_end":48044,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48049,"byte_end":48089,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48094,"byte_end":48160,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48165,"byte_end":48168,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48173,"byte_end":48226,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48231,"byte_end":48277,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48282,"byte_end":48321,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48326,"byte_end":48335,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48340,"byte_end":48347,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49457,"byte_end":49461,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48562,"byte_end":48635,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48640,"byte_end":48706,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48711,"byte_end":48729,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48734,"byte_end":48737,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48742,"byte_end":48809,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48814,"byte_end":48879,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48884,"byte_end":48956,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":48961,"byte_end":49035,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49040,"byte_end":49066,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49071,"byte_end":49074,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49079,"byte_end":49150,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49155,"byte_end":49230,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49235,"byte_end":49289,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49294,"byte_end":49297,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49302,"byte_end":49376,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49381,"byte_end":49449,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50301,"byte_end":50308,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49607,"byte_end":49673,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49678,"byte_end":49681,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49686,"byte_end":49761,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49766,"byte_end":49839,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49844,"byte_end":49913,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49918,"byte_end":49968,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49973,"byte_end":49976,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":49981,"byte_end":49995,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50000,"byte_end":50003,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50008,"byte_end":50015,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50020,"byte_end":50061,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50066,"byte_end":50101,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50106,"byte_end":50109,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50114,"byte_end":50143,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50148,"byte_end":50226,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50231,"byte_end":50267,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50272,"byte_end":50281,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50286,"byte_end":50293,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51846,"byte_end":51858,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50490,"byte_end":50544,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50549,"byte_end":50552,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50557,"byte_end":50632,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50637,"byte_end":50711,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50716,"byte_end":50790,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50795,"byte_end":50846,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50851,"byte_end":50854,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50859,"byte_end":50934,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":50939,"byte_end":51009,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51014,"byte_end":51081,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51086,"byte_end":51161,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51166,"byte_end":51238,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51243,"byte_end":51246,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51251,"byte_end":51315,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51320,"byte_end":51377,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51382,"byte_end":51385,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51390,"byte_end":51404,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51409,"byte_end":51412,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51417,"byte_end":51424,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51429,"byte_end":51470,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51475,"byte_end":51525,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51530,"byte_end":51533,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51538,"byte_end":51572,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51577,"byte_end":51626,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51631,"byte_end":51634,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51639,"byte_end":51688,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51693,"byte_end":51717,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51722,"byte_end":51729,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51734,"byte_end":51784,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51789,"byte_end":51798,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51803,"byte_end":51810,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":51815,"byte_end":51838,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53610,"byte_end":53616,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52088,"byte_end":52163,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52168,"byte_end":52191,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52196,"byte_end":52199,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52204,"byte_end":52278,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52283,"byte_end":52356,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52361,"byte_end":52373,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52378,"byte_end":52381,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52386,"byte_end":52450,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52455,"byte_end":52512,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52517,"byte_end":52520,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52525,"byte_end":52539,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52544,"byte_end":52547,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52552,"byte_end":52559,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52564,"byte_end":52605,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52610,"byte_end":52645,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52650,"byte_end":52653,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52658,"byte_end":52687,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52692,"byte_end":52726,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52731,"byte_end":52765,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52770,"byte_end":52773,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52778,"byte_end":52811,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52816,"byte_end":52849,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52854,"byte_end":52863,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52868,"byte_end":52875,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52880,"byte_end":52883,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52888,"byte_end":52895,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52900,"byte_end":52969,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":52974,"byte_end":53049,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53054,"byte_end":53085,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53090,"byte_end":53093,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53098,"byte_end":53139,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53144,"byte_end":53179,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53184,"byte_end":53220,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53225,"byte_end":53245,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53250,"byte_end":53253,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53258,"byte_end":53287,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53292,"byte_end":53326,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53331,"byte_end":53365,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53370,"byte_end":53415,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53420,"byte_end":53461,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53466,"byte_end":53473,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53478,"byte_end":53511,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53516,"byte_end":53548,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53553,"byte_end":53562,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53567,"byte_end":53574,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":53579,"byte_end":53602,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54703,"byte_end":54708,"line_start":517,"line_end":517,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54474,"byte_end":54515,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54520,"byte_end":54523,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54528,"byte_end":54603,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54608,"byte_end":54665,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54670,"byte_end":54695,"line_start":516,"line_end":516,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55168,"byte_end":55179,"line_start":531,"line_end":531,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54867,"byte_end":54908,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54913,"byte_end":54916,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54921,"byte_end":54980,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54985,"byte_end":54988,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":54993,"byte_end":55068,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55073,"byte_end":55130,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55135,"byte_end":55160,"line_start":530,"line_end":530,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55469,"byte_end":55479,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55336,"byte_end":55385,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55390,"byte_end":55461,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55764,"byte_end":55775,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55628,"byte_end":55677,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55682,"byte_end":55756,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56006,"byte_end":56016,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":55929,"byte_end":55998,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57412,"byte_end":57424,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56152,"byte_end":56224,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56229,"byte_end":56292,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56297,"byte_end":56300,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56305,"byte_end":56371,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56376,"byte_end":56379,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56384,"byte_end":56457,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56462,"byte_end":56531,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56536,"byte_end":56606,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56611,"byte_end":56614,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56619,"byte_end":56633,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56638,"byte_end":56641,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56646,"byte_end":56653,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56658,"byte_end":56688,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56693,"byte_end":56743,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56748,"byte_end":56787,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56792,"byte_end":56843,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56848,"byte_end":56851,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56856,"byte_end":56916,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56921,"byte_end":56973,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56978,"byte_end":56985,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56990,"byte_end":56993,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":56998,"byte_end":57067,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57072,"byte_end":57145,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57150,"byte_end":57182,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57187,"byte_end":57190,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57195,"byte_end":57202,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57207,"byte_end":57254,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57259,"byte_end":57298,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57303,"byte_end":57306,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57311,"byte_end":57392,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":57397,"byte_end":57404,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4643},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98422,"byte_end":98432,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98343,"byte_end":98410,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98311,"byte_end":98325,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4666},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98422,"byte_end":98432,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4669},{"krate":0,"index":4670}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98311,"byte_end":98325,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4691},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99340,"byte_end":99345,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4693},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99364,"byte_end":99370,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4695},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99389,"byte_end":99394,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99311,"byte_end":99321,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4695}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99244,"byte_end":99284,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4717},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99311,"byte_end":99321,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99244,"byte_end":99284,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4749},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104487,"byte_end":104492,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":4746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4751},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104511,"byte_end":104517,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":4746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4753},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104536,"byte_end":104541,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4746},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104455,"byte_end":104468,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4753}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104385,"byte_end":104428,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4775},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104455,"byte_end":104468,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104385,"byte_end":104428,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4807},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4810}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4832},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4836},{"krate":0,"index":4837}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4876},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4901},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4905},{"krate":0,"index":4906}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4946}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4964},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4967},{"krate":0,"index":4968}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5001},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5005}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5031},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":5036},{"krate":0,"index":5037}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5085},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5089}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5115},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":5120},{"krate":0,"index":5121}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5168},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5171}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5193},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5197},{"krate":0,"index":5198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5237},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5240}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5262},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5306},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5309}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5331},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5375},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5378}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5400},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5447}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5469},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":5473},{"krate":0,"index":5474}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5513},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5516}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":5542},{"krate":0,"index":5543}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5583},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5587}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5618},{"krate":0,"index":5619}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5669}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5691},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5695},{"krate":0,"index":5696}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":476},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":81256,"byte_end":81268,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":81192,"byte_end":81245,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83978,"byte_end":83984,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82606,"byte_end":82664,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82669,"byte_end":82672,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82677,"byte_end":82752,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82757,"byte_end":82827,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82832,"byte_end":82905,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82910,"byte_end":82939,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82944,"byte_end":82947,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":82952,"byte_end":83027,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83032,"byte_end":83107,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83112,"byte_end":83159,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83164,"byte_end":83167,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83172,"byte_end":83247,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83252,"byte_end":83278,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83283,"byte_end":83286,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83291,"byte_end":83305,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83310,"byte_end":83313,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83318,"byte_end":83325,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83330,"byte_end":83368,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83373,"byte_end":83376,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83381,"byte_end":83422,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83427,"byte_end":83472,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83477,"byte_end":83519,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83524,"byte_end":83560,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83565,"byte_end":83574,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83579,"byte_end":83586,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83591,"byte_end":83594,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83599,"byte_end":83671,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83676,"byte_end":83687,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83692,"byte_end":83695,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83700,"byte_end":83707,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83712,"byte_end":83750,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83755,"byte_end":83758,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83763,"byte_end":83804,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83809,"byte_end":83855,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83860,"byte_end":83902,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83907,"byte_end":83944,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83949,"byte_end":83958,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":83963,"byte_end":83970,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85543,"byte_end":85557,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84175,"byte_end":84292,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84297,"byte_end":84300,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84305,"byte_end":84427,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84432,"byte_end":84482,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84487,"byte_end":84490,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84495,"byte_end":84570,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84575,"byte_end":84650,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84655,"byte_end":84702,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84707,"byte_end":84710,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84715,"byte_end":84790,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84795,"byte_end":84870,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84875,"byte_end":84922,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84927,"byte_end":84930,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":84935,"byte_end":85010,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85015,"byte_end":85041,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85046,"byte_end":85049,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85054,"byte_end":85068,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85073,"byte_end":85076,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85081,"byte_end":85088,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85093,"byte_end":85131,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85136,"byte_end":85139,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85144,"byte_end":85185,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85190,"byte_end":85235,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85240,"byte_end":85301,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85306,"byte_end":85338,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85343,"byte_end":85346,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85351,"byte_end":85397,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85402,"byte_end":85463,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85468,"byte_end":85501,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85506,"byte_end":85515,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85520,"byte_end":85527,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85532,"byte_end":85535,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87240,"byte_end":87247,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85791,"byte_end":85847,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85852,"byte_end":85855,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85860,"byte_end":85934,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":85939,"byte_end":86000,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86005,"byte_end":86075,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86080,"byte_end":86155,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86160,"byte_end":86195,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86200,"byte_end":86203,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86208,"byte_end":86283,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86288,"byte_end":86363,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86368,"byte_end":86415,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86420,"byte_end":86423,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86428,"byte_end":86503,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86508,"byte_end":86534,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86539,"byte_end":86542,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86547,"byte_end":86561,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86566,"byte_end":86569,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86574,"byte_end":86581,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86586,"byte_end":86624,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86629,"byte_end":86632,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86637,"byte_end":86678,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86683,"byte_end":86729,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86734,"byte_end":86777,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86782,"byte_end":86819,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86824,"byte_end":86833,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86838,"byte_end":86845,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86850,"byte_end":86853,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86858,"byte_end":86931,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86936,"byte_end":86950,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86955,"byte_end":86958,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86963,"byte_end":86970,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":86975,"byte_end":87013,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87018,"byte_end":87021,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87026,"byte_end":87067,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87072,"byte_end":87117,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87122,"byte_end":87165,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87170,"byte_end":87206,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87211,"byte_end":87220,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87225,"byte_end":87232,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88337,"byte_end":88345,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87440,"byte_end":87510,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87515,"byte_end":87564,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87569,"byte_end":87572,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87577,"byte_end":87640,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87645,"byte_end":87713,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87718,"byte_end":87791,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87796,"byte_end":87872,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87877,"byte_end":87922,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87927,"byte_end":87930,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":87935,"byte_end":88010,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88015,"byte_end":88041,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88046,"byte_end":88049,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88054,"byte_end":88068,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88073,"byte_end":88076,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88081,"byte_end":88088,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88093,"byte_end":88131,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88136,"byte_end":88139,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88144,"byte_end":88185,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88190,"byte_end":88241,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88246,"byte_end":88303,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88308,"byte_end":88317,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88322,"byte_end":88329,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88641,"byte_end":88648,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88521,"byte_end":88579,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88584,"byte_end":88633,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90203,"byte_end":90211,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88822,"byte_end":88891,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88896,"byte_end":88970,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88975,"byte_end":88978,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":88983,"byte_end":89058,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89063,"byte_end":89133,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89138,"byte_end":89203,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89208,"byte_end":89274,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89279,"byte_end":89313,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89318,"byte_end":89321,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89326,"byte_end":89401,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89406,"byte_end":89432,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89437,"byte_end":89440,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89445,"byte_end":89459,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89464,"byte_end":89467,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89472,"byte_end":89479,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89484,"byte_end":89522,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89527,"byte_end":89530,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89535,"byte_end":89576,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89581,"byte_end":89626,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89631,"byte_end":89706,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89711,"byte_end":89747,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89752,"byte_end":89761,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89766,"byte_end":89773,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89778,"byte_end":89781,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89786,"byte_end":89862,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89867,"byte_end":89878,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89883,"byte_end":89886,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89891,"byte_end":89898,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89903,"byte_end":89941,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89946,"byte_end":89949,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":89954,"byte_end":89995,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90000,"byte_end":90046,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90051,"byte_end":90127,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90132,"byte_end":90169,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90174,"byte_end":90183,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90188,"byte_end":90195,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91832,"byte_end":91839,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90465,"byte_end":90530,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90535,"byte_end":90607,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90612,"byte_end":90615,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90620,"byte_end":90695,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90700,"byte_end":90770,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90775,"byte_end":90840,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90845,"byte_end":90921,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90926,"byte_end":90944,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90949,"byte_end":90952,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":90957,"byte_end":91032,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91037,"byte_end":91063,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91068,"byte_end":91071,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91076,"byte_end":91090,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91095,"byte_end":91098,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91103,"byte_end":91110,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91115,"byte_end":91153,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91158,"byte_end":91161,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91166,"byte_end":91207,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91212,"byte_end":91258,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91263,"byte_end":91338,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91343,"byte_end":91380,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91385,"byte_end":91394,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91399,"byte_end":91406,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91411,"byte_end":91414,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91419,"byte_end":91492,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91497,"byte_end":91511,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91516,"byte_end":91519,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91524,"byte_end":91531,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91536,"byte_end":91574,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91579,"byte_end":91582,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91587,"byte_end":91628,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91633,"byte_end":91678,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91683,"byte_end":91757,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91762,"byte_end":91798,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91803,"byte_end":91812,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":91817,"byte_end":91824,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92815,"byte_end":92825,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92088,"byte_end":92161,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92166,"byte_end":92169,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92174,"byte_end":92249,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92254,"byte_end":92327,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92332,"byte_end":92401,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92406,"byte_end":92459,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92464,"byte_end":92467,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92472,"byte_end":92486,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92491,"byte_end":92494,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92499,"byte_end":92506,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92511,"byte_end":92552,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92557,"byte_end":92595,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92600,"byte_end":92603,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92608,"byte_end":92650,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92655,"byte_end":92736,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92741,"byte_end":92781,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92786,"byte_end":92795,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":92800,"byte_end":92807,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93751,"byte_end":93762,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93024,"byte_end":93095,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93100,"byte_end":93103,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93108,"byte_end":93183,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93188,"byte_end":93261,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93266,"byte_end":93335,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93340,"byte_end":93394,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93399,"byte_end":93402,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93407,"byte_end":93421,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93426,"byte_end":93429,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93434,"byte_end":93441,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93446,"byte_end":93487,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93492,"byte_end":93530,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93535,"byte_end":93538,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93543,"byte_end":93586,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93591,"byte_end":93671,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93676,"byte_end":93717,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93722,"byte_end":93731,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93736,"byte_end":93743,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94147,"byte_end":94158,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":93966,"byte_end":94041,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94046,"byte_end":94075,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94080,"byte_end":94083,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94088,"byte_end":94139,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95267,"byte_end":95285,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94323,"byte_end":94398,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94403,"byte_end":94426,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94431,"byte_end":94434,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94439,"byte_end":94511,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94516,"byte_end":94589,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94594,"byte_end":94608,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94613,"byte_end":94616,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94621,"byte_end":94691,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94696,"byte_end":94714,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94719,"byte_end":94722,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94727,"byte_end":94741,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94746,"byte_end":94749,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94754,"byte_end":94761,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94766,"byte_end":94807,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94812,"byte_end":94850,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94855,"byte_end":94901,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94906,"byte_end":94909,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94914,"byte_end":94974,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":94979,"byte_end":95058,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95063,"byte_end":95066,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95071,"byte_end":95128,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95133,"byte_end":95185,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95190,"byte_end":95233,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95238,"byte_end":95247,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95252,"byte_end":95259,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96375,"byte_end":96389,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95545,"byte_end":95615,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95620,"byte_end":95657,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95662,"byte_end":95711,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95716,"byte_end":95719,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95724,"byte_end":95793,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95798,"byte_end":95871,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95876,"byte_end":95946,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95951,"byte_end":95969,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95974,"byte_end":95977,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":95982,"byte_end":96050,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96055,"byte_end":96058,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96063,"byte_end":96077,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96082,"byte_end":96085,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96090,"byte_end":96097,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96102,"byte_end":96140,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96145,"byte_end":96148,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96153,"byte_end":96194,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96199,"byte_end":96251,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96256,"byte_end":96303,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96308,"byte_end":96341,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96346,"byte_end":96355,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96360,"byte_end":96367,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97643,"byte_end":97654,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":96942,"byte_end":96995,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97000,"byte_end":97036,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97041,"byte_end":97044,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97049,"byte_end":97098,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97103,"byte_end":97170,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97175,"byte_end":97188,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97193,"byte_end":97196,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97201,"byte_end":97215,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97220,"byte_end":97223,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97228,"byte_end":97235,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97240,"byte_end":97299,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97304,"byte_end":97307,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97312,"byte_end":97331,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97336,"byte_end":97354,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97359,"byte_end":97431,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97436,"byte_end":97468,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97473,"byte_end":97480,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97485,"byte_end":97561,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97566,"byte_end":97569,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97574,"byte_end":97623,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97628,"byte_end":97635,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97913,"byte_end":97927,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97810,"byte_end":97883,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":97888,"byte_end":97905,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5732},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106264,"byte_end":106268,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5734}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106130,"byte_end":106167,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106185,"byte_end":106252,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106809,"byte_end":106813,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106372,"byte_end":106440,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106441,"byte_end":106444,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106445,"byte_end":106508,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106509,"byte_end":106512,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106513,"byte_end":106527,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106528,"byte_end":106531,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106532,"byte_end":106539,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106540,"byte_end":106581,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106582,"byte_end":106606,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106607,"byte_end":106610,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106611,"byte_end":106643,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106644,"byte_end":106671,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106672,"byte_end":106675,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106676,"byte_end":106713,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106714,"byte_end":106738,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106739,"byte_end":106746,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106747,"byte_end":106783,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106784,"byte_end":106793,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106794,"byte_end":106801,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107579,"byte_end":107586,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5740}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107440,"byte_end":107482,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107500,"byte_end":107567,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108105,"byte_end":108112,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107727,"byte_end":107807,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107808,"byte_end":107821,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107822,"byte_end":107825,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107826,"byte_end":107888,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107889,"byte_end":107892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107893,"byte_end":107907,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107908,"byte_end":107911,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107912,"byte_end":107925,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107926,"byte_end":107967,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107968,"byte_end":107992,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107993,"byte_end":107996,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107997,"byte_end":108032,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108033,"byte_end":108059,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108060,"byte_end":108079,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108080,"byte_end":108089,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108090,"byte_end":108097,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5746},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108915,"byte_end":108921,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5744},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108880,"byte_end":108910,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5748},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108982,"byte_end":108986,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5744},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108939,"byte_end":108977,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5751},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109148,"byte_end":109152,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5744},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109005,"byte_end":109071,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109076,"byte_end":109143,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5744},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108851,"byte_end":108860,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5746},{"krate":0,"index":5748},{"krate":0,"index":5751}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108749,"byte_end":108824,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108851,"byte_end":108860,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":5784},{"krate":0,"index":5785}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":108749,"byte_end":108824,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109618,"byte_end":109628,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109157,"byte_end":109194,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109195,"byte_end":109198,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109199,"byte_end":109213,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109214,"byte_end":109217,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109218,"byte_end":109225,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109226,"byte_end":109267,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109268,"byte_end":109292,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109293,"byte_end":109318,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109319,"byte_end":109322,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109323,"byte_end":109372,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109373,"byte_end":109394,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109395,"byte_end":109447,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109448,"byte_end":109483,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109484,"byte_end":109539,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109540,"byte_end":109592,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109593,"byte_end":109602,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109603,"byte_end":109610,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110045,"byte_end":110055,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109747,"byte_end":109832,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109837,"byte_end":109908,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109913,"byte_end":109986,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109991,"byte_end":110019,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110024,"byte_end":110033,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110354,"byte_end":110365,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110234,"byte_end":110300,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110305,"byte_end":110328,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110333,"byte_end":110342,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5805},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111945,"byte_end":111951,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5803},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111910,"byte_end":111940,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5807},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112012,"byte_end":112016,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5803},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111969,"byte_end":112007,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5810},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112224,"byte_end":112228,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5803},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112031,"byte_end":112100,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112105,"byte_end":112175,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112180,"byte_end":112219,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5803},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111875,"byte_end":111887,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5805},{"krate":0,"index":5807},{"krate":0,"index":5810}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111767,"byte_end":111848,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":5840},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111875,"byte_end":111887,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":5843},{"krate":0,"index":5844}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":111767,"byte_end":111848,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112281,"byte_end":112295,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112233,"byte_end":112273,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112738,"byte_end":112748,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112429,"byte_end":112514,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112519,"byte_end":112590,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112595,"byte_end":112679,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112684,"byte_end":112712,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112717,"byte_end":112726,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113049,"byte_end":113060,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112926,"byte_end":112995,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113000,"byte_end":113023,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113028,"byte_end":113037,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5862},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115172,"byte_end":115184,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115093,"byte_end":115160,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115054,"byte_end":115068,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5885},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115172,"byte_end":115184,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5888},{"krate":0,"index":5889}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115054,"byte_end":115068,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116154,"byte_end":116160,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":653}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116034,"byte_end":116074,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116075,"byte_end":116142,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116747,"byte_end":116754,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116211,"byte_end":116282,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116283,"byte_end":116286,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116287,"byte_end":116353,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116354,"byte_end":116357,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116358,"byte_end":116372,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116373,"byte_end":116376,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116377,"byte_end":116384,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116385,"byte_end":116426,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116427,"byte_end":116460,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116461,"byte_end":116500,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116501,"byte_end":116504,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116505,"byte_end":116562,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116563,"byte_end":116606,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116607,"byte_end":116612,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116613,"byte_end":116616,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116617,"byte_end":116658,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116659,"byte_end":116721,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116722,"byte_end":116731,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116732,"byte_end":116739,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117474,"byte_end":117479,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117323,"byte_end":117370,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117395,"byte_end":117462,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117602,"byte_end":117612,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117519,"byte_end":117576,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117581,"byte_end":117590,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":690},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118278,"byte_end":118283,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118032,"byte_end":118092,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118093,"byte_end":118096,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118097,"byte_end":118111,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118112,"byte_end":118115,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118116,"byte_end":118123,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118124,"byte_end":118165,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118166,"byte_end":118190,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118191,"byte_end":118194,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118195,"byte_end":118224,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118225,"byte_end":118252,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118253,"byte_end":118262,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118263,"byte_end":118270,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":692},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118595,"byte_end":118597,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118329,"byte_end":118396,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118397,"byte_end":118400,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118401,"byte_end":118415,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118416,"byte_end":118419,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118420,"byte_end":118427,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118428,"byte_end":118469,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118470,"byte_end":118494,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118495,"byte_end":118498,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118499,"byte_end":118537,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118538,"byte_end":118569,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118570,"byte_end":118579,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118580,"byte_end":118587,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":695},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118928,"byte_end":118931,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118661,"byte_end":118727,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118728,"byte_end":118731,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118732,"byte_end":118746,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118747,"byte_end":118750,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118751,"byte_end":118758,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118759,"byte_end":118800,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118801,"byte_end":118825,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118826,"byte_end":118829,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118830,"byte_end":118869,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118870,"byte_end":118902,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118903,"byte_end":118912,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":118913,"byte_end":118920,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121196,"byte_end":121200,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6015},{"krate":0,"index":6016}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119419,"byte_end":119486,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6040},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6065},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121266,"byte_end":121271,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119419,"byte_end":119486,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6101},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121343,"byte_end":121348,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6137},{"krate":0,"index":6138},{"krate":0,"index":6139},{"krate":0,"index":6140}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119419,"byte_end":119486,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6176},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121426,"byte_end":121431,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119419,"byte_end":119486,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6265},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6277}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":119396,"byte_end":119410,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122046,"byte_end":122050,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121469,"byte_end":121540,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121541,"byte_end":121544,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121545,"byte_end":121616,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121617,"byte_end":121692,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121693,"byte_end":121696,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121697,"byte_end":121766,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121767,"byte_end":121793,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121794,"byte_end":121797,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121798,"byte_end":121812,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121813,"byte_end":121816,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121817,"byte_end":121824,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121825,"byte_end":121866,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121867,"byte_end":121891,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121892,"byte_end":121895,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121896,"byte_end":121920,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121921,"byte_end":121945,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121946,"byte_end":121980,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121981,"byte_end":121984,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":121985,"byte_end":122020,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122021,"byte_end":122030,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122031,"byte_end":122038,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":721},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122596,"byte_end":122601,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122257,"byte_end":122309,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122310,"byte_end":122313,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122314,"byte_end":122328,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122329,"byte_end":122332,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122333,"byte_end":122340,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122341,"byte_end":122382,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122383,"byte_end":122407,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122408,"byte_end":122411,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122412,"byte_end":122436,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122437,"byte_end":122461,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122462,"byte_end":122486,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122487,"byte_end":122526,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122527,"byte_end":122530,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122531,"byte_end":122570,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122571,"byte_end":122580,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122581,"byte_end":122588,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":725},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123184,"byte_end":123189,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122814,"byte_end":122866,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122867,"byte_end":122870,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122871,"byte_end":122885,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122886,"byte_end":122889,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122890,"byte_end":122897,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122898,"byte_end":122939,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122940,"byte_end":122964,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122965,"byte_end":122968,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122969,"byte_end":122993,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":122994,"byte_end":123018,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123019,"byte_end":123043,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123044,"byte_end":123068,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123069,"byte_end":123111,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123112,"byte_end":123115,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123116,"byte_end":123158,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123159,"byte_end":123168,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123169,"byte_end":123176,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":730},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123861,"byte_end":123866,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123460,"byte_end":123512,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123513,"byte_end":123516,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123517,"byte_end":123531,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123532,"byte_end":123535,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123536,"byte_end":123543,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123544,"byte_end":123585,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123586,"byte_end":123610,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123611,"byte_end":123614,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123615,"byte_end":123639,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123640,"byte_end":123664,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123665,"byte_end":123689,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123690,"byte_end":123714,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123715,"byte_end":123739,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123740,"byte_end":123785,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123786,"byte_end":123789,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123790,"byte_end":123835,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123836,"byte_end":123845,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":123846,"byte_end":123853,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125027,"byte_end":125034,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":763}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":124906,"byte_end":124947,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":124948,"byte_end":125015,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126674,"byte_end":126682,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125367,"byte_end":125447,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125448,"byte_end":125458,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125459,"byte_end":125462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125463,"byte_end":125542,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125543,"byte_end":125623,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125624,"byte_end":125642,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125643,"byte_end":125646,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125647,"byte_end":125724,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125725,"byte_end":125782,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125783,"byte_end":125786,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125787,"byte_end":125801,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125802,"byte_end":125805,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125806,"byte_end":125881,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125882,"byte_end":125930,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125931,"byte_end":126008,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126009,"byte_end":126079,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126080,"byte_end":126083,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126084,"byte_end":126153,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126154,"byte_end":126157,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126158,"byte_end":126226,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126227,"byte_end":126230,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126231,"byte_end":126308,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126309,"byte_end":126390,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126391,"byte_end":126394,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126395,"byte_end":126409,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126410,"byte_end":126413,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126414,"byte_end":126421,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126422,"byte_end":126463,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126464,"byte_end":126498,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126499,"byte_end":126502,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126503,"byte_end":126540,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126541,"byte_end":126544,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126545,"byte_end":126592,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126593,"byte_end":126596,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126597,"byte_end":126648,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126649,"byte_end":126658,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126659,"byte_end":126666,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6308},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":127995,"byte_end":128001,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6311}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":127857,"byte_end":127898,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":127899,"byte_end":127966,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130149,"byte_end":130155,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128092,"byte_end":128162,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128163,"byte_end":128166,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128167,"byte_end":128245,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128246,"byte_end":128322,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128323,"byte_end":128395,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128396,"byte_end":128399,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128400,"byte_end":128472,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128473,"byte_end":128501,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128502,"byte_end":128505,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128506,"byte_end":128573,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128574,"byte_end":128638,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128639,"byte_end":128689,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128690,"byte_end":128693,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128694,"byte_end":128708,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128709,"byte_end":128712,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128713,"byte_end":128733,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128734,"byte_end":128737,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128738,"byte_end":128745,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128746,"byte_end":128787,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128788,"byte_end":128828,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128829,"byte_end":128854,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128855,"byte_end":128858,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128859,"byte_end":128949,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128950,"byte_end":128980,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128981,"byte_end":129011,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129012,"byte_end":129015,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129016,"byte_end":129062,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129063,"byte_end":129085,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129086,"byte_end":129108,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129109,"byte_end":129112,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129113,"byte_end":129175,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129176,"byte_end":129259,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129260,"byte_end":129332,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129333,"byte_end":129417,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129418,"byte_end":129491,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129492,"byte_end":129498,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129499,"byte_end":129502,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129503,"byte_end":129541,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129542,"byte_end":129551,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129552,"byte_end":129559,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129560,"byte_end":129563,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129564,"byte_end":129590,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129591,"byte_end":129594,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129595,"byte_end":129602,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129603,"byte_end":129662,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129663,"byte_end":129666,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129667,"byte_end":129720,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129721,"byte_end":129724,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129725,"byte_end":129800,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129801,"byte_end":129833,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129834,"byte_end":129866,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129867,"byte_end":129872,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129873,"byte_end":129917,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129918,"byte_end":129944,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":129945,"byte_end":130022,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130023,"byte_end":130102,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130103,"byte_end":130116,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130117,"byte_end":130127,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130128,"byte_end":130133,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130134,"byte_end":130141,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6316},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131507,"byte_end":131516,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6318}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131367,"byte_end":131410,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131428,"byte_end":131495,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":822},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132296,"byte_end":132306,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131594,"byte_end":131660,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131661,"byte_end":131664,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131665,"byte_end":131745,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131746,"byte_end":131824,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131825,"byte_end":131893,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131894,"byte_end":131897,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131898,"byte_end":131978,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131979,"byte_end":132053,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132054,"byte_end":132057,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132058,"byte_end":132135,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132136,"byte_end":132193,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132194,"byte_end":132197,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132198,"byte_end":132210,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132211,"byte_end":132214,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132215,"byte_end":132288,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136240,"byte_end":136247,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133798,"byte_end":133865,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6420},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6425},{"krate":0,"index":6426}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6445},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136317,"byte_end":136325,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6449},{"krate":0,"index":6450},{"krate":0,"index":6451}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133798,"byte_end":133865,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6481},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136401,"byte_end":136409,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6520}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133798,"byte_end":133865,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6593},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136491,"byte_end":136499,"line_start":102,"line_end":102,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133798,"byte_end":133865,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6645},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6657}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":133775,"byte_end":133789,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":850},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137771,"byte_end":137779,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136537,"byte_end":136610,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136611,"byte_end":136643,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136644,"byte_end":136647,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136648,"byte_end":136719,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136720,"byte_end":136796,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136797,"byte_end":136868,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136869,"byte_end":136885,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136886,"byte_end":136889,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136890,"byte_end":136959,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136960,"byte_end":136986,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136987,"byte_end":136990,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":136991,"byte_end":137005,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137006,"byte_end":137009,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137010,"byte_end":137086,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137087,"byte_end":137123,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137124,"byte_end":137127,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137128,"byte_end":137135,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137136,"byte_end":137177,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137178,"byte_end":137202,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137203,"byte_end":137206,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137207,"byte_end":137252,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137253,"byte_end":137298,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137299,"byte_end":137337,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137338,"byte_end":137341,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137342,"byte_end":137381,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137382,"byte_end":137391,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137392,"byte_end":137399,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137400,"byte_end":137403,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137404,"byte_end":137474,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137475,"byte_end":137490,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137491,"byte_end":137494,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137495,"byte_end":137502,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137503,"byte_end":137544,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137545,"byte_end":137569,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137570,"byte_end":137573,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137574,"byte_end":137619,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137620,"byte_end":137666,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137667,"byte_end":137705,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137706,"byte_end":137709,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137710,"byte_end":137745,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137746,"byte_end":137755,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137756,"byte_end":137763,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":853},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138372,"byte_end":138381,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":137954,"byte_end":138014,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138015,"byte_end":138018,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138019,"byte_end":138033,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138034,"byte_end":138037,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138038,"byte_end":138045,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138046,"byte_end":138087,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138088,"byte_end":138112,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138113,"byte_end":138116,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138117,"byte_end":138162,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138163,"byte_end":138208,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138209,"byte_end":138254,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138255,"byte_end":138298,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138299,"byte_end":138302,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138303,"byte_end":138346,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138347,"byte_end":138356,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138357,"byte_end":138364,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139121,"byte_end":139130,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138651,"byte_end":138711,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138712,"byte_end":138715,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138716,"byte_end":138730,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138731,"byte_end":138734,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138735,"byte_end":138742,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138743,"byte_end":138784,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138785,"byte_end":138809,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138810,"byte_end":138813,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138814,"byte_end":138859,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138860,"byte_end":138905,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138906,"byte_end":138951,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138952,"byte_end":138997,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":138998,"byte_end":139044,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139045,"byte_end":139048,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139049,"byte_end":139095,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139096,"byte_end":139105,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139106,"byte_end":139113,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":140004,"byte_end":140013,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139482,"byte_end":139542,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139543,"byte_end":139546,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139547,"byte_end":139561,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139562,"byte_end":139565,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139566,"byte_end":139573,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139574,"byte_end":139615,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139616,"byte_end":139640,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139641,"byte_end":139644,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139645,"byte_end":139690,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139691,"byte_end":139736,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139737,"byte_end":139782,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139783,"byte_end":139828,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139829,"byte_end":139874,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139875,"byte_end":139924,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139925,"byte_end":139928,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139929,"byte_end":139978,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139979,"byte_end":139988,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":139989,"byte_end":139996,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":904},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141399,"byte_end":141409,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":906}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141274,"byte_end":141319,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141320,"byte_end":141387,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":143028,"byte_end":143040,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141779,"byte_end":141858,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141859,"byte_end":141889,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141890,"byte_end":141893,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141894,"byte_end":141973,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141974,"byte_end":142054,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142055,"byte_end":142073,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142074,"byte_end":142077,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142078,"byte_end":142156,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142157,"byte_end":142237,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142238,"byte_end":142312,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142313,"byte_end":142336,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142337,"byte_end":142340,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142341,"byte_end":142418,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142419,"byte_end":142476,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142477,"byte_end":142480,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142481,"byte_end":142495,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142496,"byte_end":142499,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142500,"byte_end":142507,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142508,"byte_end":142549,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142550,"byte_end":142596,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142597,"byte_end":142600,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142601,"byte_end":142624,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142625,"byte_end":142659,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142660,"byte_end":142694,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142695,"byte_end":142729,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142730,"byte_end":142736,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142737,"byte_end":142740,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142741,"byte_end":142804,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142805,"byte_end":142808,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142809,"byte_end":142832,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142833,"byte_end":142867,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142868,"byte_end":142903,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142904,"byte_end":142938,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142939,"byte_end":142945,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142946,"byte_end":142949,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":142950,"byte_end":143002,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":143003,"byte_end":143012,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":143013,"byte_end":143020,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144869,"byte_end":144878,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6691}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144727,"byte_end":144772,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144773,"byte_end":144840,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146463,"byte_end":146473,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144972,"byte_end":145042,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145043,"byte_end":145046,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145047,"byte_end":145125,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145126,"byte_end":145202,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145203,"byte_end":145275,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145276,"byte_end":145279,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145280,"byte_end":145352,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145353,"byte_end":145381,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145382,"byte_end":145385,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145386,"byte_end":145453,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145454,"byte_end":145525,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145526,"byte_end":145576,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145577,"byte_end":145580,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145581,"byte_end":145595,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145596,"byte_end":145599,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145600,"byte_end":145607,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145608,"byte_end":145692,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145693,"byte_end":145696,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145697,"byte_end":145754,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145755,"byte_end":145758,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145759,"byte_end":145841,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145842,"byte_end":145899,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145900,"byte_end":145957,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145958,"byte_end":145984,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145985,"byte_end":145990,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":145991,"byte_end":146086,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146087,"byte_end":146110,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146111,"byte_end":146191,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146192,"byte_end":146273,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146274,"byte_end":146344,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146345,"byte_end":146416,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146417,"byte_end":146430,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146431,"byte_end":146441,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146442,"byte_end":146447,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146448,"byte_end":146455,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6696},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":147962,"byte_end":147970,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6698}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":147823,"byte_end":147865,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":147883,"byte_end":147950,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":963},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148692,"byte_end":148701,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148047,"byte_end":148141,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148142,"byte_end":148145,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148146,"byte_end":148235,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148236,"byte_end":148320,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148321,"byte_end":148402,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148403,"byte_end":148448,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148449,"byte_end":148452,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148453,"byte_end":148531,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148532,"byte_end":148589,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148590,"byte_end":148593,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148594,"byte_end":148606,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148607,"byte_end":148610,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148611,"byte_end":148684,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6705},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151037,"byte_end":151041,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6702},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151004,"byte_end":151032,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6707},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151091,"byte_end":151096,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6702},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151057,"byte_end":151086,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6702},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":150985,"byte_end":150991,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":6705},{"krate":0,"index":6707}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":150915,"byte_end":150951,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6727},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":150985,"byte_end":150991,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6733}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":150915,"byte_end":150951,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151302,"byte_end":151314,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151154,"byte_end":151212,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151217,"byte_end":151220,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151225,"byte_end":151290,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151694,"byte_end":151707,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151545,"byte_end":151603,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151608,"byte_end":151611,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151616,"byte_end":151682,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151995,"byte_end":152005,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151922,"byte_end":151983,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11858},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703273,"byte_end":8703282,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11861},{"krate":0,"index":11860}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703194,"byte_end":8703261,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703155,"byte_end":8703169,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11881},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703273,"byte_end":8703282,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":11884},{"krate":0,"index":11885}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703155,"byte_end":8703169,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704165,"byte_end":8704168,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703398,"byte_end":8703473,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703478,"byte_end":8703546,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703551,"byte_end":8703554,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703559,"byte_end":8703631,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703636,"byte_end":8703712,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703717,"byte_end":8703742,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703747,"byte_end":8703750,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703755,"byte_end":8703767,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703772,"byte_end":8703775,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703780,"byte_end":8703787,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703792,"byte_end":8703833,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703838,"byte_end":8703897,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703902,"byte_end":8703905,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703910,"byte_end":8703979,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703984,"byte_end":8704049,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704054,"byte_end":8704079,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704084,"byte_end":8704127,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704132,"byte_end":8704141,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704146,"byte_end":8704153,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704496,"byte_end":8704513,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6796}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704305,"byte_end":8704356,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704357,"byte_end":8704433,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704434,"byte_end":8704467,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6799},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704620,"byte_end":8704631,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6800}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704547,"byte_end":8704584,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6777},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705301,"byte_end":8705309,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704688,"byte_end":8704762,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704767,"byte_end":8704797,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704802,"byte_end":8704805,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704810,"byte_end":8704878,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704883,"byte_end":8704886,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704891,"byte_end":8704903,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704908,"byte_end":8704911,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704916,"byte_end":8704923,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704928,"byte_end":8704969,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704974,"byte_end":8705033,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705038,"byte_end":8705041,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705046,"byte_end":8705115,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705120,"byte_end":8705185,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705190,"byte_end":8705215,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705220,"byte_end":8705263,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705268,"byte_end":8705277,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705282,"byte_end":8705289,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6778},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706212,"byte_end":8706221,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705843,"byte_end":8705929,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705930,"byte_end":8705933,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8705934,"byte_end":8706010,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706011,"byte_end":8706064,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706065,"byte_end":8706068,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706069,"byte_end":8706146,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706147,"byte_end":8706204,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6810},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706525,"byte_end":8706532,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706414,"byte_end":8706468,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6788},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8708145,"byte_end":8708150,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707781,"byte_end":8707842,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707847,"byte_end":8707850,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707855,"byte_end":8707924,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707929,"byte_end":8707999,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8708004,"byte_end":8708078,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8708083,"byte_end":8708133,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1063},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":10129},{"krate":0,"index":10203},{"krate":0,"index":10204},{"krate":0,"index":10434},{"krate":0,"index":10435},{"krate":0,"index":10483},{"krate":0,"index":10484},{"krate":0,"index":10485},{"krate":0,"index":2748}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"/ Streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158389,"byte_end":158400,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158401,"byte_end":158404,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158405,"byte_end":158479,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158480,"byte_end":158558,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Stream` types","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":158559,"byte_end":158588,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6823},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209455,"byte_end":209460,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6827}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209395,"byte_end":209443,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209363,"byte_end":209377,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6851},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209455,"byte_end":209460,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6857}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209363,"byte_end":209377,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6880},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211573,"byte_end":211580,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6884},{"krate":0,"index":6883}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211494,"byte_end":211561,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211462,"byte_end":211476,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6908},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211573,"byte_end":211580,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":6912},{"krate":0,"index":6913}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211462,"byte_end":211476,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6936},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":212979,"byte_end":212985,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6938}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":212900,"byte_end":212967,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":212868,"byte_end":212882,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6959},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":212979,"byte_end":212985,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":6962},{"krate":0,"index":6963}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":212868,"byte_end":212882,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214724,"byte_end":214733,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6984},{"krate":0,"index":6983}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214664,"byte_end":214712,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214632,"byte_end":214646,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7004},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214724,"byte_end":214733,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":7007},{"krate":0,"index":7008}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214632,"byte_end":214646,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7030},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216375,"byte_end":216381,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7034},{"krate":0,"index":7037},{"krate":0,"index":7035}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216315,"byte_end":216363,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216300,"byte_end":216314,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216375,"byte_end":216381,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7076}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216300,"byte_end":216314,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7103},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219823,"byte_end":219832,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7108},{"krate":0,"index":7107},{"krate":0,"index":7109}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219763,"byte_end":219811,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219748,"byte_end":219762,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7139},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219823,"byte_end":219832,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":7144},{"krate":0,"index":7145},{"krate":0,"index":7146}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219748,"byte_end":219762,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7173},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222853,"byte_end":222860,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7176},{"krate":0,"index":7177}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222793,"byte_end":222841,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222761,"byte_end":222775,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222853,"byte_end":222860,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222761,"byte_end":222775,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7236},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7238}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7256},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7259},{"krate":0,"index":7260}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7295},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224613,"byte_end":224617,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":7303}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224534,"byte_end":224601,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224519,"byte_end":224533,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7339},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224613,"byte_end":224617,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224519,"byte_end":224533,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7374},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227123,"byte_end":227130,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7378},{"krate":0,"index":7380}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227044,"byte_end":227111,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227029,"byte_end":227043,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7410},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227123,"byte_end":227130,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":7415},{"krate":0,"index":7416},{"krate":0,"index":7417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227029,"byte_end":227043,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7440},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229102,"byte_end":229106,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7443},{"krate":0,"index":7442}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229042,"byte_end":229090,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229010,"byte_end":229024,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7463},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229102,"byte_end":229106,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":7466},{"krate":0,"index":7467}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229010,"byte_end":229024,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229544,"byte_end":229551,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229275,"byte_end":229337,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229342,"byte_end":229345,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229350,"byte_end":229418,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229423,"byte_end":229489,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229494,"byte_end":229532,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7489},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":230908,"byte_end":230920,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7491}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":230738,"byte_end":230811,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":230829,"byte_end":230896,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231503,"byte_end":231510,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231111,"byte_end":231184,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231189,"byte_end":231206,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231211,"byte_end":231214,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231219,"byte_end":231300,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231305,"byte_end":231387,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231392,"byte_end":231471,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231476,"byte_end":231491,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232121,"byte_end":232128,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231575,"byte_end":231642,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231647,"byte_end":231678,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231683,"byte_end":231686,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231691,"byte_end":231764,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231769,"byte_end":231824,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231829,"byte_end":231832,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231837,"byte_end":231918,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":231923,"byte_end":232005,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232010,"byte_end":232089,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232094,"byte_end":232109,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232754,"byte_end":232765,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232201,"byte_end":232275,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232280,"byte_end":232311,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232316,"byte_end":232319,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232324,"byte_end":232397,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232402,"byte_end":232457,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232462,"byte_end":232465,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232470,"byte_end":232551,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232556,"byte_end":232638,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232643,"byte_end":232722,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232727,"byte_end":232742,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233398,"byte_end":233408,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232878,"byte_end":232940,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232945,"byte_end":232948,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":232953,"byte_end":233025,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233030,"byte_end":233101,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233106,"byte_end":233109,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233114,"byte_end":233195,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233200,"byte_end":233282,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233287,"byte_end":233366,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233371,"byte_end":233386,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7501}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":7527},{"krate":0,"index":7528}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7572},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234413,"byte_end":234416,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7576},{"krate":0,"index":7575}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234353,"byte_end":234401,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234338,"byte_end":234352,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7600},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234413,"byte_end":234416,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":7604},{"krate":0,"index":7605}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234338,"byte_end":234352,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7632},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7636}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7662},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":7667},{"krate":0,"index":7668}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7721},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236130,"byte_end":236134,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7724}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":235974,"byte_end":236033,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236051,"byte_end":236118,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237140,"byte_end":237154,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7732}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":236956,"byte_end":237031,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237032,"byte_end":237043,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237061,"byte_end":237128,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7737},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238637,"byte_end":238645,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7740},{"krate":0,"index":7739}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238577,"byte_end":238625,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238545,"byte_end":238559,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7760},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238637,"byte_end":238645,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":7763},{"krate":0,"index":7764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238545,"byte_end":238559,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239112,"byte_end":239116,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238957,"byte_end":239030,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239035,"byte_end":239100,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239441,"byte_end":239450,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239203,"byte_end":239265,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239270,"byte_end":239273,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239278,"byte_end":239351,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239356,"byte_end":239429,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7786},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241160,"byte_end":241164,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7789}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241100,"byte_end":241148,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241085,"byte_end":241099,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7811},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241160,"byte_end":241164,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":7815},{"krate":0,"index":7816}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241085,"byte_end":241099,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7835},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242416,"byte_end":242420,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7838},{"krate":0,"index":7837}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242356,"byte_end":242404,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242324,"byte_end":242338,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7858},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242416,"byte_end":242420,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":7862}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242324,"byte_end":242338,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244266,"byte_end":244275,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7891},{"krate":0,"index":7888},{"krate":0,"index":7892},{"krate":0,"index":7889},{"krate":0,"index":7890}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244206,"byte_end":244254,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244191,"byte_end":244205,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7926},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244266,"byte_end":244275,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7933}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244191,"byte_end":244205,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7960},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247861,"byte_end":247865,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7963},{"krate":0,"index":7962}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247801,"byte_end":247849,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247769,"byte_end":247783,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7983},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247861,"byte_end":247865,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":7986},{"krate":0,"index":7987}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247769,"byte_end":247783,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8009},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":249900,"byte_end":249909,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8016},{"krate":0,"index":8013},{"krate":0,"index":8017},{"krate":0,"index":8014},{"krate":0,"index":8015}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":249840,"byte_end":249888,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":249825,"byte_end":249839,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8051},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":249900,"byte_end":249909,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8056},{"krate":0,"index":8057},{"krate":0,"index":8058}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":249825,"byte_end":249839,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8085},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253463,"byte_end":253472,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8090},{"krate":0,"index":8091},{"krate":0,"index":8088},{"krate":0,"index":8089}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253403,"byte_end":253451,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253388,"byte_end":253402,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8119},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253463,"byte_end":253472,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8125}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253388,"byte_end":253402,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254829,"byte_end":254840,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254529,"byte_end":254583,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254588,"byte_end":254682,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254687,"byte_end":254750,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254755,"byte_end":254817,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256124,"byte_end":256135,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254977,"byte_end":255042,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255047,"byte_end":255104,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255109,"byte_end":255112,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255117,"byte_end":255182,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255187,"byte_end":255247,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255252,"byte_end":255255,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255260,"byte_end":255328,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255333,"byte_end":255376,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255381,"byte_end":255384,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255389,"byte_end":255403,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255408,"byte_end":255411,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255416,"byte_end":255423,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255428,"byte_end":255469,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255474,"byte_end":255498,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255503,"byte_end":255546,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255551,"byte_end":255579,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255584,"byte_end":255587,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255592,"byte_end":255630,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255635,"byte_end":255638,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255643,"byte_end":255661,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255666,"byte_end":255708,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255713,"byte_end":255728,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255733,"byte_end":255752,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255757,"byte_end":255782,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255787,"byte_end":255803,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255808,"byte_end":255841,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255846,"byte_end":255855,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255860,"byte_end":255867,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255872,"byte_end":255875,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255880,"byte_end":255929,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255934,"byte_end":255988,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":255993,"byte_end":255996,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256001,"byte_end":256048,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256053,"byte_end":256086,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256091,"byte_end":256100,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256105,"byte_end":256112,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256311,"byte_end":256321,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256214,"byte_end":256275,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256280,"byte_end":256299,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8148},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258211,"byte_end":258215,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8152}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258151,"byte_end":258199,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258136,"byte_end":258150,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8184},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258211,"byte_end":258215,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":8189},{"krate":0,"index":8190},{"krate":0,"index":8191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258136,"byte_end":258150,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8218},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":260857,"byte_end":260860,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8223},{"krate":0,"index":8224},{"krate":0,"index":8221},{"krate":0,"index":8222}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":260797,"byte_end":260845,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":260765,"byte_end":260779,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8252},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":260857,"byte_end":260860,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":260765,"byte_end":260779,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261413,"byte_end":261420,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261305,"byte_end":261379,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261384,"byte_end":261401,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261776,"byte_end":261783,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261514,"byte_end":261582,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261587,"byte_end":261618,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261623,"byte_end":261626,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261631,"byte_end":261704,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261709,"byte_end":261764,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262158,"byte_end":262169,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261889,"byte_end":261964,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261969,"byte_end":262000,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262005,"byte_end":262008,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262013,"byte_end":262086,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262091,"byte_end":262146,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262575,"byte_end":262585,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262339,"byte_end":262402,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262407,"byte_end":262410,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262415,"byte_end":262487,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262492,"byte_end":262563,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8281},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265381,"byte_end":265387,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8285},{"krate":0,"index":8283},{"krate":0,"index":8284}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265321,"byte_end":265369,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265289,"byte_end":265303,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8307},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265381,"byte_end":265387,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":8310},{"krate":0,"index":8311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265289,"byte_end":265303,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268472,"byte_end":268483,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8337},{"krate":0,"index":8335},{"krate":0,"index":8336}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268412,"byte_end":268460,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268380,"byte_end":268394,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8359},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268472,"byte_end":268483,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8362},{"krate":0,"index":8363}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268380,"byte_end":268394,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8385},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":271917,"byte_end":271921,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8390},{"krate":0,"index":8392}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":271857,"byte_end":271905,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":271842,"byte_end":271856,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8426},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":271917,"byte_end":271921,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":8432},{"krate":0,"index":8433},{"krate":0,"index":8434}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":271842,"byte_end":271856,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11813},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724277,"byte_end":8724292,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11817},{"krate":0,"index":11815},{"krate":0,"index":11816}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724217,"byte_end":8724265,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724202,"byte_end":8724216,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11839},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724277,"byte_end":8724292,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11842},{"krate":0,"index":11843}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724202,"byte_end":8724216,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11768},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727576,"byte_end":8727584,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11772},{"krate":0,"index":11770},{"krate":0,"index":11771}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727516,"byte_end":8727564,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727501,"byte_end":8727515,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11794},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727576,"byte_end":8727584,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":11797},{"krate":0,"index":11798}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727501,"byte_end":8727515,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11700},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730599,"byte_end":8730616,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11707},{"krate":0,"index":11704},{"krate":0,"index":11705},{"krate":0,"index":11706}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730520,"byte_end":8730587,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730505,"byte_end":8730519,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11739},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730599,"byte_end":8730616,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11744},{"krate":0,"index":11745}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730505,"byte_end":8730519,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8566},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275327,"byte_end":275338,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8569},{"krate":0,"index":8568}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275267,"byte_end":275315,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275235,"byte_end":275249,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8589},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275327,"byte_end":275338,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8592},{"krate":0,"index":8593}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275235,"byte_end":275249,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1865},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167772,"byte_end":167781,"line_start":202,"line_end":202,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1938}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167661,"byte_end":167735,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167736,"byte_end":167761,"line_start":201,"line_end":201,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168691,"byte_end":168695,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167796,"byte_end":167862,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167867,"byte_end":167870,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167875,"byte_end":167943,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167948,"byte_end":168023,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168028,"byte_end":168103,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168108,"byte_end":168162,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168167,"byte_end":168242,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168247,"byte_end":168257,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168262,"byte_end":168265,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168270,"byte_end":168284,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168289,"byte_end":168292,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168297,"byte_end":168304,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168309,"byte_end":168350,"line_start":215,"line_end":215,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168355,"byte_end":168398,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168403,"byte_end":168406,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168411,"byte_end":168452,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168457,"byte_end":168460,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168465,"byte_end":168510,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168515,"byte_end":168560,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168565,"byte_end":168610,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168615,"byte_end":168657,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168662,"byte_end":168671,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168676,"byte_end":168683,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169934,"byte_end":169945,"line_start":261,"line_end":261,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168837,"byte_end":168909,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168914,"byte_end":168975,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168980,"byte_end":168983,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168988,"byte_end":169063,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169068,"byte_end":169122,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169127,"byte_end":169130,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169135,"byte_end":169208,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169213,"byte_end":169275,"line_start":240,"line_end":240,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169280,"byte_end":169355,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169360,"byte_end":169414,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169419,"byte_end":169494,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169499,"byte_end":169509,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169514,"byte_end":169517,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169522,"byte_end":169536,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169541,"byte_end":169544,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169549,"byte_end":169556,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169561,"byte_end":169602,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169607,"byte_end":169650,"line_start":250,"line_end":250,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169655,"byte_end":169658,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169663,"byte_end":169700,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169705,"byte_end":169708,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169713,"byte_end":169765,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169770,"byte_end":169800,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169805,"byte_end":169808,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169813,"byte_end":169865,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169870,"byte_end":169900,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169905,"byte_end":169914,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169919,"byte_end":169926,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170946,"byte_end":170949,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170110,"byte_end":170185,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170190,"byte_end":170213,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170218,"byte_end":170221,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170226,"byte_end":170298,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170303,"byte_end":170367,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170372,"byte_end":170409,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170414,"byte_end":170417,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170422,"byte_end":170498,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170503,"byte_end":170574,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170579,"byte_end":170600,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170605,"byte_end":170608,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170613,"byte_end":170627,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170632,"byte_end":170635,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170640,"byte_end":170647,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170652,"byte_end":170693,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170698,"byte_end":170741,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170746,"byte_end":170749,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170754,"byte_end":170791,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170796,"byte_end":170835,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170840,"byte_end":170843,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170848,"byte_end":170912,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170917,"byte_end":170926,"line_start":289,"line_end":289,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170931,"byte_end":170938,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172509,"byte_end":172518,"line_start":337,"line_end":337,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171116,"byte_end":171187,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171192,"byte_end":171211,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171216,"byte_end":171219,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171224,"byte_end":171289,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171294,"byte_end":171363,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171368,"byte_end":171379,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171384,"byte_end":171387,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171392,"byte_end":171467,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171472,"byte_end":171554,"line_start":307,"line_end":307,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171559,"byte_end":171577,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171582,"byte_end":171585,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171590,"byte_end":171613,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171618,"byte_end":171621,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171626,"byte_end":171701,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171706,"byte_end":171793,"line_start":313,"line_end":313,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171798,"byte_end":171854,"line_start":314,"line_end":314,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171859,"byte_end":171862,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171867,"byte_end":171879,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171884,"byte_end":171887,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171892,"byte_end":171961,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171966,"byte_end":171991,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171996,"byte_end":171999,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172004,"byte_end":172018,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172023,"byte_end":172026,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172031,"byte_end":172038,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172043,"byte_end":172084,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172089,"byte_end":172132,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172137,"byte_end":172140,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172145,"byte_end":172196,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172201,"byte_end":172204,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172209,"byte_end":172249,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172254,"byte_end":172257,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172262,"byte_end":172314,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172319,"byte_end":172371,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172376,"byte_end":172428,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172433,"byte_end":172475,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172480,"byte_end":172489,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172494,"byte_end":172501,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173747,"byte_end":173753,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172662,"byte_end":172734,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172739,"byte_end":172766,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172771,"byte_end":172774,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172779,"byte_end":172854,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172859,"byte_end":172930,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172935,"byte_end":173007,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173012,"byte_end":173086,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173091,"byte_end":173149,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173154,"byte_end":173157,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173162,"byte_end":173238,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173243,"byte_end":173317,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173322,"byte_end":173343,"line_start":355,"line_end":355,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173348,"byte_end":173351,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173356,"byte_end":173370,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173375,"byte_end":173378,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173383,"byte_end":173390,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173395,"byte_end":173436,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173441,"byte_end":173465,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173470,"byte_end":173513,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173518,"byte_end":173521,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173526,"byte_end":173564,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173569,"byte_end":173630,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173635,"byte_end":173638,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173643,"byte_end":173713,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173718,"byte_end":173727,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173732,"byte_end":173739,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175078,"byte_end":175088,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173981,"byte_end":174056,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174061,"byte_end":174137,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174142,"byte_end":174145,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174150,"byte_end":174225,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174230,"byte_end":174305,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174310,"byte_end":174386,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174391,"byte_end":174456,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174461,"byte_end":174464,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174469,"byte_end":174545,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174550,"byte_end":174624,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174629,"byte_end":174654,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174659,"byte_end":174662,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174667,"byte_end":174681,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174686,"byte_end":174693,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174698,"byte_end":174739,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174744,"byte_end":174787,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174792,"byte_end":174795,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174800,"byte_end":174838,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174843,"byte_end":174893,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174898,"byte_end":174949,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174954,"byte_end":174961,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174966,"byte_end":174969,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174974,"byte_end":175044,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175049,"byte_end":175058,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175063,"byte_end":175070,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176117,"byte_end":176121,"line_start":435,"line_end":435,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175320,"byte_end":175393,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175398,"byte_end":175426,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175431,"byte_end":175434,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175439,"byte_end":175513,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175518,"byte_end":175585,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175590,"byte_end":175635,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175640,"byte_end":175643,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175648,"byte_end":175724,"line_start":420,"line_end":420,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175729,"byte_end":175755,"line_start":421,"line_end":421,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175760,"byte_end":175763,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175768,"byte_end":175782,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175787,"byte_end":175790,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175795,"byte_end":175802,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175807,"byte_end":175848,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175853,"byte_end":175896,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175901,"byte_end":175904,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175909,"byte_end":175946,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175951,"byte_end":176006,"line_start":430,"line_end":430,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176011,"byte_end":176014,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176019,"byte_end":176083,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176088,"byte_end":176097,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176102,"byte_end":176109,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177055,"byte_end":177062,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176330,"byte_end":176384,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176389,"byte_end":176444,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176449,"byte_end":176452,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176457,"byte_end":176525,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176530,"byte_end":176533,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176538,"byte_end":176552,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176557,"byte_end":176560,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176565,"byte_end":176572,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176577,"byte_end":176618,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176623,"byte_end":176654,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176659,"byte_end":176694,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176699,"byte_end":176719,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176724,"byte_end":176727,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176732,"byte_end":176769,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176774,"byte_end":176777,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176782,"byte_end":176809,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176814,"byte_end":176838,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176843,"byte_end":176885,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176890,"byte_end":176899,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176904,"byte_end":176911,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176916,"byte_end":176919,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176924,"byte_end":176972,"line_start":465,"line_end":465,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176977,"byte_end":177021,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177026,"byte_end":177035,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177040,"byte_end":177047,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178255,"byte_end":178261,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177220,"byte_end":177282,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177287,"byte_end":177351,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177356,"byte_end":177359,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177364,"byte_end":177428,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177433,"byte_end":177498,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177503,"byte_end":177549,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177554,"byte_end":177557,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177562,"byte_end":177611,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177616,"byte_end":177656,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177661,"byte_end":177664,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177669,"byte_end":177683,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177688,"byte_end":177691,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177696,"byte_end":177703,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177708,"byte_end":177749,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177754,"byte_end":177785,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177790,"byte_end":177825,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177830,"byte_end":177850,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177855,"byte_end":177858,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177863,"byte_end":177900,"line_start":494,"line_end":494,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177905,"byte_end":177908,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177913,"byte_end":177940,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177945,"byte_end":177976,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177981,"byte_end":178007,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178012,"byte_end":178078,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178083,"byte_end":178092,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178097,"byte_end":178104,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178109,"byte_end":178112,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178117,"byte_end":178152,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178157,"byte_end":178160,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178165,"byte_end":178221,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178226,"byte_end":178235,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178240,"byte_end":178247,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179306,"byte_end":179310,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178491,"byte_end":178558,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178563,"byte_end":178615,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178620,"byte_end":178623,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178628,"byte_end":178698,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178703,"byte_end":178779,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178784,"byte_end":178860,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178865,"byte_end":178935,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178940,"byte_end":178966,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178971,"byte_end":178974,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178979,"byte_end":178993,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178998,"byte_end":179001,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179006,"byte_end":179013,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179018,"byte_end":179059,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179064,"byte_end":179107,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179112,"byte_end":179115,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179120,"byte_end":179163,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179168,"byte_end":179237,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179242,"byte_end":179272,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179277,"byte_end":179286,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179291,"byte_end":179298,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180504,"byte_end":180511,"line_start":576,"line_end":576,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179545,"byte_end":179610,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179615,"byte_end":179618,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179623,"byte_end":179637,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179642,"byte_end":179645,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179650,"byte_end":179657,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179662,"byte_end":179703,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179708,"byte_end":179739,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179744,"byte_end":179779,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179784,"byte_end":179804,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179809,"byte_end":179812,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179817,"byte_end":179856,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179861,"byte_end":179900,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179905,"byte_end":179944,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179949,"byte_end":179952,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179957,"byte_end":179984,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179989,"byte_end":180028,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180033,"byte_end":180072,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180077,"byte_end":180084,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180089,"byte_end":180116,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180121,"byte_end":180160,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180165,"byte_end":180204,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180209,"byte_end":180216,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180221,"byte_end":180248,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180253,"byte_end":180294,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180299,"byte_end":180340,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180345,"byte_end":180352,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180357,"byte_end":180360,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180365,"byte_end":180424,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180429,"byte_end":180470,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180475,"byte_end":180484,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180489,"byte_end":180496,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181773,"byte_end":181781,"line_start":609,"line_end":609,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180688,"byte_end":180760,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180765,"byte_end":180768,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180773,"byte_end":180850,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180855,"byte_end":180930,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180935,"byte_end":181011,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181016,"byte_end":181019,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181024,"byte_end":181106,"line_start":590,"line_end":590,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181111,"byte_end":181194,"line_start":591,"line_end":591,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181199,"byte_end":181202,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181207,"byte_end":181283,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181288,"byte_end":181364,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181369,"byte_end":181390,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181395,"byte_end":181398,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181403,"byte_end":181417,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181422,"byte_end":181425,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181430,"byte_end":181437,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181442,"byte_end":181483,"line_start":600,"line_end":600,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181488,"byte_end":181531,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181536,"byte_end":181539,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181544,"byte_end":181581,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181586,"byte_end":181653,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181658,"byte_end":181661,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181666,"byte_end":181739,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181744,"byte_end":181753,"line_start":607,"line_end":607,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181758,"byte_end":181765,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182764,"byte_end":182768,"line_start":642,"line_end":642,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181955,"byte_end":182026,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182031,"byte_end":182061,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182066,"byte_end":182069,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182074,"byte_end":182149,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182154,"byte_end":182225,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182230,"byte_end":182270,"line_start":623,"line_end":623,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182275,"byte_end":182278,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182283,"byte_end":182297,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182302,"byte_end":182305,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182310,"byte_end":182317,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182322,"byte_end":182363,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182368,"byte_end":182392,"line_start":629,"line_end":629,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182397,"byte_end":182440,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182445,"byte_end":182448,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182453,"byte_end":182491,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182496,"byte_end":182499,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182504,"byte_end":182548,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182553,"byte_end":182573,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182578,"byte_end":182641,"line_start":636,"line_end":636,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182646,"byte_end":182653,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182658,"byte_end":182661,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182666,"byte_end":182730,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182735,"byte_end":182744,"line_start":640,"line_end":640,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":182749,"byte_end":182756,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183792,"byte_end":183802,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183014,"byte_end":183088,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183093,"byte_end":183116,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183121,"byte_end":183124,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183129,"byte_end":183202,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183207,"byte_end":183279,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183284,"byte_end":183361,"line_start":656,"line_end":656,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183366,"byte_end":183377,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183382,"byte_end":183385,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183390,"byte_end":183404,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183409,"byte_end":183412,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183417,"byte_end":183424,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183429,"byte_end":183470,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183475,"byte_end":183499,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183504,"byte_end":183547,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183552,"byte_end":183555,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183560,"byte_end":183598,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183603,"byte_end":183606,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183611,"byte_end":183674,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183679,"byte_end":183682,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183687,"byte_end":183758,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183763,"byte_end":183772,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183777,"byte_end":183784,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184791,"byte_end":184801,"line_start":703,"line_end":703,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184036,"byte_end":184112,"line_start":682,"line_end":682,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184117,"byte_end":184140,"line_start":683,"line_end":683,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184145,"byte_end":184148,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184153,"byte_end":184228,"line_start":685,"line_end":685,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184233,"byte_end":184305,"line_start":686,"line_end":686,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184310,"byte_end":184377,"line_start":687,"line_end":687,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184382,"byte_end":184385,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184390,"byte_end":184404,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184409,"byte_end":184412,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184417,"byte_end":184424,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184429,"byte_end":184470,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184475,"byte_end":184499,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184504,"byte_end":184547,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184552,"byte_end":184555,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184560,"byte_end":184598,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184603,"byte_end":184606,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184611,"byte_end":184674,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184679,"byte_end":184682,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184687,"byte_end":184757,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184762,"byte_end":184771,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184776,"byte_end":184783,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186317,"byte_end":186327,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185035,"byte_end":185105,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185110,"byte_end":185113,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185118,"byte_end":185189,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185194,"byte_end":185266,"line_start":715,"line_end":715,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185271,"byte_end":185341,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185346,"byte_end":185349,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185354,"byte_end":185425,"line_start":718,"line_end":718,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185430,"byte_end":185516,"line_start":719,"line_end":719,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185521,"byte_end":185588,"line_start":720,"line_end":720,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185593,"byte_end":185657,"line_start":721,"line_end":721,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185662,"byte_end":185665,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185670,"byte_end":185684,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185689,"byte_end":185692,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185697,"byte_end":185704,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185709,"byte_end":185750,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185755,"byte_end":185779,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185784,"byte_end":185827,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185832,"byte_end":185860,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185865,"byte_end":185868,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185873,"byte_end":185911,"line_start":731,"line_end":731,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185916,"byte_end":185919,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185924,"byte_end":185942,"line_start":733,"line_end":733,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185947,"byte_end":185989,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185994,"byte_end":186009,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186014,"byte_end":186033,"line_start":736,"line_end":736,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186038,"byte_end":186063,"line_start":737,"line_end":737,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186068,"byte_end":186084,"line_start":738,"line_end":738,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186089,"byte_end":186116,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186121,"byte_end":186130,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186135,"byte_end":186142,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186147,"byte_end":186150,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186155,"byte_end":186200,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186205,"byte_end":186208,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186213,"byte_end":186283,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186288,"byte_end":186297,"line_start":746,"line_end":746,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186302,"byte_end":186309,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187534,"byte_end":187542,"line_start":789,"line_end":789,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186476,"byte_end":186547,"line_start":756,"line_end":756,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186552,"byte_end":186595,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186600,"byte_end":186603,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186608,"byte_end":186683,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186688,"byte_end":186758,"line_start":760,"line_end":760,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186763,"byte_end":186801,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186806,"byte_end":186809,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186814,"byte_end":186889,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186894,"byte_end":186937,"line_start":764,"line_end":764,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186942,"byte_end":186945,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186950,"byte_end":187023,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187028,"byte_end":187071,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187076,"byte_end":187079,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187084,"byte_end":187098,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187103,"byte_end":187106,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187111,"byte_end":187118,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187123,"byte_end":187164,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187169,"byte_end":187193,"line_start":773,"line_end":773,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187198,"byte_end":187241,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187246,"byte_end":187249,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187254,"byte_end":187272,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187277,"byte_end":187280,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187285,"byte_end":187290,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187295,"byte_end":187356,"line_start":779,"line_end":779,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187361,"byte_end":187383,"line_start":780,"line_end":780,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187388,"byte_end":187417,"line_start":781,"line_end":781,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187422,"byte_end":187433,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187438,"byte_end":187456,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187461,"byte_end":187466,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187471,"byte_end":187474,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187479,"byte_end":187500,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187505,"byte_end":187514,"line_start":787,"line_end":787,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187519,"byte_end":187526,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189748,"byte_end":189767,"line_start":845,"line_end":845,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187761,"byte_end":187832,"line_start":798,"line_end":798,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187837,"byte_end":187911,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187916,"byte_end":187930,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187935,"byte_end":187938,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":187943,"byte_end":188006,"line_start":802,"line_end":802,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188011,"byte_end":188082,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188087,"byte_end":188139,"line_start":804,"line_end":804,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188144,"byte_end":188147,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188152,"byte_end":188227,"line_start":806,"line_end":806,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188232,"byte_end":188302,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188307,"byte_end":188371,"line_start":808,"line_end":808,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188376,"byte_end":188379,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188384,"byte_end":188455,"line_start":810,"line_end":810,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188460,"byte_end":188530,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188535,"byte_end":188596,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188601,"byte_end":188668,"line_start":813,"line_end":813,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188673,"byte_end":188742,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188747,"byte_end":188819,"line_start":815,"line_end":815,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188824,"byte_end":188827,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188832,"byte_end":188907,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188912,"byte_end":188969,"line_start":818,"line_end":818,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188974,"byte_end":188977,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":188982,"byte_end":188996,"line_start":820,"line_end":820,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189001,"byte_end":189004,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189009,"byte_end":189016,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189021,"byte_end":189062,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189067,"byte_end":189101,"line_start":824,"line_end":824,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189106,"byte_end":189149,"line_start":825,"line_end":825,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189154,"byte_end":189157,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189162,"byte_end":189202,"line_start":827,"line_end":827,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189207,"byte_end":189247,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189252,"byte_end":189292,"line_start":829,"line_end":829,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189297,"byte_end":189300,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189305,"byte_end":189373,"line_start":831,"line_end":831,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189378,"byte_end":189400,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189405,"byte_end":189430,"line_start":833,"line_end":833,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189435,"byte_end":189465,"line_start":834,"line_end":834,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189470,"byte_end":189479,"line_start":835,"line_end":835,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189484,"byte_end":189490,"line_start":836,"line_end":836,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189495,"byte_end":189521,"line_start":837,"line_end":837,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189526,"byte_end":189552,"line_start":838,"line_end":838,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189557,"byte_end":189583,"line_start":839,"line_end":839,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189588,"byte_end":189602,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189607,"byte_end":189615,"line_start":841,"line_end":841,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189620,"byte_end":189627,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":189715,"byte_end":189740,"line_start":844,"line_end":844,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190592,"byte_end":190596,"line_start":874,"line_end":874,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190084,"byte_end":190155,"line_start":858,"line_end":858,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190160,"byte_end":190163,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190168,"byte_end":190241,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190246,"byte_end":190281,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190286,"byte_end":190289,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190294,"byte_end":190308,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190313,"byte_end":190316,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190321,"byte_end":190328,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190333,"byte_end":190374,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190379,"byte_end":190422,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190427,"byte_end":190430,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190435,"byte_end":190481,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190486,"byte_end":190489,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190494,"byte_end":190558,"line_start":871,"line_end":871,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190563,"byte_end":190572,"line_start":872,"line_end":872,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190577,"byte_end":190584,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191261,"byte_end":191265,"line_start":897,"line_end":897,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190734,"byte_end":190806,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190811,"byte_end":190814,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190819,"byte_end":190892,"line_start":883,"line_end":883,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190897,"byte_end":190943,"line_start":884,"line_end":884,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190948,"byte_end":190951,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190956,"byte_end":190970,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190975,"byte_end":190978,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190983,"byte_end":190990,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":190995,"byte_end":191036,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191041,"byte_end":191084,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191089,"byte_end":191092,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191097,"byte_end":191143,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191148,"byte_end":191151,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191156,"byte_end":191227,"line_start":894,"line_end":894,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191232,"byte_end":191241,"line_start":895,"line_end":895,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191246,"byte_end":191253,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192886,"byte_end":192890,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191403,"byte_end":191474,"line_start":904,"line_end":904,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191479,"byte_end":191552,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191557,"byte_end":191595,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191600,"byte_end":191603,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191608,"byte_end":191662,"line_start":908,"line_end":908,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191667,"byte_end":191739,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191744,"byte_end":191820,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191825,"byte_end":191893,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191898,"byte_end":191974,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":191979,"byte_end":192001,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192006,"byte_end":192009,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192014,"byte_end":192081,"line_start":915,"line_end":915,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192086,"byte_end":192154,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192159,"byte_end":192172,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192177,"byte_end":192180,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192185,"byte_end":192199,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192204,"byte_end":192207,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192212,"byte_end":192219,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192224,"byte_end":192267,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192272,"byte_end":192315,"line_start":923,"line_end":923,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192320,"byte_end":192348,"line_start":924,"line_end":924,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192353,"byte_end":192356,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192361,"byte_end":192379,"line_start":926,"line_end":926,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192384,"byte_end":192422,"line_start":927,"line_end":927,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192427,"byte_end":192442,"line_start":928,"line_end":928,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192447,"byte_end":192464,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192469,"byte_end":192511,"line_start":930,"line_end":930,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192516,"byte_end":192551,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192556,"byte_end":192600,"line_start":932,"line_end":932,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192605,"byte_end":192614,"line_start":933,"line_end":933,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192619,"byte_end":192633,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192638,"byte_end":192641,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192646,"byte_end":192689,"line_start":936,"line_end":936,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192694,"byte_end":192731,"line_start":937,"line_end":937,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192736,"byte_end":192773,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192778,"byte_end":192812,"line_start":939,"line_end":939,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192817,"byte_end":192851,"line_start":940,"line_end":940,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192856,"byte_end":192866,"line_start":941,"line_end":941,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":192871,"byte_end":192878,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193819,"byte_end":193825,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193015,"byte_end":193062,"line_start":950,"line_end":950,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193067,"byte_end":193070,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193075,"byte_end":193149,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193154,"byte_end":193191,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193196,"byte_end":193199,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193204,"byte_end":193218,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193223,"byte_end":193226,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193231,"byte_end":193238,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193243,"byte_end":193284,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193289,"byte_end":193332,"line_start":959,"line_end":959,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193337,"byte_end":193340,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193345,"byte_end":193385,"line_start":961,"line_end":961,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193390,"byte_end":193393,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193398,"byte_end":193427,"line_start":963,"line_end":963,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193432,"byte_end":193460,"line_start":964,"line_end":964,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193465,"byte_end":193522,"line_start":965,"line_end":965,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193527,"byte_end":193554,"line_start":966,"line_end":966,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193559,"byte_end":193582,"line_start":967,"line_end":967,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193587,"byte_end":193590,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193595,"byte_end":193630,"line_start":969,"line_end":969,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193635,"byte_end":193663,"line_start":970,"line_end":970,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193668,"byte_end":193725,"line_start":971,"line_end":971,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193730,"byte_end":193757,"line_start":972,"line_end":972,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193762,"byte_end":193785,"line_start":973,"line_end":973,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193790,"byte_end":193799,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193804,"byte_end":193811,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195584,"byte_end":195596,"line_start":1021,"line_end":1021,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193876,"byte_end":193930,"line_start":980,"line_end":980,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193935,"byte_end":193938,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":193943,"byte_end":194018,"line_start":982,"line_end":982,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194023,"byte_end":194026,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194031,"byte_end":194106,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194111,"byte_end":194185,"line_start":985,"line_end":985,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194190,"byte_end":194264,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194269,"byte_end":194318,"line_start":987,"line_end":987,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194323,"byte_end":194326,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194331,"byte_end":194406,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194411,"byte_end":194481,"line_start":990,"line_end":990,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194486,"byte_end":194553,"line_start":991,"line_end":991,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194558,"byte_end":194630,"line_start":992,"line_end":992,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194635,"byte_end":194704,"line_start":993,"line_end":993,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194709,"byte_end":194724,"line_start":994,"line_end":994,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194729,"byte_end":194732,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194737,"byte_end":194801,"line_start":996,"line_end":996,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194806,"byte_end":194863,"line_start":997,"line_end":997,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194868,"byte_end":194871,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194876,"byte_end":194890,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194895,"byte_end":194898,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194903,"byte_end":194910,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194915,"byte_end":194956,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":194961,"byte_end":195004,"line_start":1003,"line_end":1003,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195009,"byte_end":195012,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195017,"byte_end":195079,"line_start":1005,"line_end":1005,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195084,"byte_end":195114,"line_start":1006,"line_end":1006,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195119,"byte_end":195173,"line_start":1007,"line_end":1007,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195178,"byte_end":195208,"line_start":1008,"line_end":1008,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195213,"byte_end":195262,"line_start":1009,"line_end":1009,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195267,"byte_end":195270,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195275,"byte_end":195337,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195342,"byte_end":195364,"line_start":1012,"line_end":1012,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195369,"byte_end":195389,"line_start":1013,"line_end":1013,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195394,"byte_end":195436,"line_start":1014,"line_end":1014,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195441,"byte_end":195446,"line_start":1015,"line_end":1015,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195451,"byte_end":195484,"line_start":1016,"line_end":1016,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195489,"byte_end":195522,"line_start":1017,"line_end":1017,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195527,"byte_end":195536,"line_start":1018,"line_end":1018,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195541,"byte_end":195548,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195553,"byte_end":195576,"line_start":1020,"line_end":1020,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195972,"byte_end":195977,"line_start":1033,"line_end":1033,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195743,"byte_end":195784,"line_start":1028,"line_end":1028,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195789,"byte_end":195792,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195797,"byte_end":195872,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195877,"byte_end":195934,"line_start":1031,"line_end":1031,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":195939,"byte_end":195964,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196433,"byte_end":196444,"line_start":1047,"line_end":1047,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196132,"byte_end":196173,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196178,"byte_end":196181,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196186,"byte_end":196245,"line_start":1042,"line_end":1042,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196250,"byte_end":196253,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196258,"byte_end":196333,"line_start":1044,"line_end":1044,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196338,"byte_end":196395,"line_start":1045,"line_end":1045,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196400,"byte_end":196425,"line_start":1046,"line_end":1046,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197381,"byte_end":197389,"line_start":1068,"line_end":1068,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196597,"byte_end":196660,"line_start":1054,"line_end":1054,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196665,"byte_end":196668,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196673,"byte_end":196748,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196753,"byte_end":196829,"line_start":1057,"line_end":1057,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196834,"byte_end":196907,"line_start":1058,"line_end":1058,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196912,"byte_end":196985,"line_start":1059,"line_end":1059,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":196990,"byte_end":197032,"line_start":1060,"line_end":1060,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197037,"byte_end":197040,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197045,"byte_end":197110,"line_start":1062,"line_end":1062,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197115,"byte_end":197118,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197123,"byte_end":197198,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197203,"byte_end":197260,"line_start":1065,"line_end":1065,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197348,"byte_end":197373,"line_start":1067,"line_end":1067,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199113,"byte_end":199129,"line_start":1113,"line_end":1113,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197583,"byte_end":197658,"line_start":1076,"line_end":1076,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197663,"byte_end":197666,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197671,"byte_end":197746,"line_start":1078,"line_end":1078,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197751,"byte_end":197825,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197830,"byte_end":197902,"line_start":1080,"line_end":1080,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197907,"byte_end":197981,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":197986,"byte_end":198015,"line_start":1082,"line_end":1082,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198020,"byte_end":198023,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198028,"byte_end":198093,"line_start":1084,"line_end":1084,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198098,"byte_end":198101,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198106,"byte_end":198181,"line_start":1086,"line_end":1086,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198186,"byte_end":198243,"line_start":1087,"line_end":1087,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198248,"byte_end":198251,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198256,"byte_end":198270,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198275,"byte_end":198278,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198283,"byte_end":198290,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198295,"byte_end":198336,"line_start":1092,"line_end":1092,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198341,"byte_end":198375,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198380,"byte_end":198423,"line_start":1094,"line_end":1094,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198428,"byte_end":198431,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198436,"byte_end":198486,"line_start":1096,"line_end":1096,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198491,"byte_end":198541,"line_start":1097,"line_end":1097,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198546,"byte_end":198549,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198554,"byte_end":198621,"line_start":1099,"line_end":1099,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198626,"byte_end":198688,"line_start":1100,"line_end":1100,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198693,"byte_end":198696,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198701,"byte_end":198726,"line_start":1102,"line_end":1102,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198731,"byte_end":198785,"line_start":1103,"line_end":1103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198790,"byte_end":198793,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198798,"byte_end":198823,"line_start":1105,"line_end":1105,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198828,"byte_end":198882,"line_start":1106,"line_end":1106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198887,"byte_end":198890,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198895,"byte_end":198939,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198944,"byte_end":198980,"line_start":1109,"line_end":1109,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":198985,"byte_end":198992,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199080,"byte_end":199105,"line_start":1112,"line_end":1112,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200025,"byte_end":200028,"line_start":1143,"line_end":1143,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199337,"byte_end":199385,"line_start":1121,"line_end":1121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199390,"byte_end":199393,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199398,"byte_end":199471,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199476,"byte_end":199548,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199553,"byte_end":199566,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199571,"byte_end":199574,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199579,"byte_end":199593,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199598,"byte_end":199601,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199606,"byte_end":199613,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199618,"byte_end":199659,"line_start":1130,"line_end":1130,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199664,"byte_end":199707,"line_start":1131,"line_end":1131,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199712,"byte_end":199715,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199720,"byte_end":199758,"line_start":1133,"line_end":1133,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199763,"byte_end":199802,"line_start":1134,"line_end":1134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199807,"byte_end":199810,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199815,"byte_end":199849,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199854,"byte_end":199895,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199900,"byte_end":199928,"line_start":1138,"line_end":1138,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199933,"byte_end":199983,"line_start":1139,"line_end":1139,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":199988,"byte_end":199997,"line_start":1140,"line_end":1140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200002,"byte_end":200009,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200014,"byte_end":200017,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200936,"byte_end":200941,"line_start":1174,"line_end":1174,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200209,"byte_end":200246,"line_start":1151,"line_end":1151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200251,"byte_end":200254,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200259,"byte_end":200330,"line_start":1153,"line_end":1153,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200335,"byte_end":200411,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200416,"byte_end":200419,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200424,"byte_end":200431,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200436,"byte_end":200477,"line_start":1157,"line_end":1157,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200482,"byte_end":200525,"line_start":1158,"line_end":1158,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200530,"byte_end":200533,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200538,"byte_end":200595,"line_start":1160,"line_end":1160,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200600,"byte_end":200656,"line_start":1161,"line_end":1161,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200661,"byte_end":200664,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200669,"byte_end":200709,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200714,"byte_end":200717,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200722,"byte_end":200770,"line_start":1165,"line_end":1165,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200775,"byte_end":200803,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200808,"byte_end":200823,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200828,"byte_end":200847,"line_start":1168,"line_end":1168,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200852,"byte_end":200870,"line_start":1169,"line_end":1169,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200875,"byte_end":200890,"line_start":1170,"line_end":1170,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200895,"byte_end":200902,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200907,"byte_end":200916,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":200921,"byte_end":200928,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201279,"byte_end":201287,"line_start":1185,"line_end":1185,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201133,"byte_end":201188,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201193,"byte_end":201196,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201201,"byte_end":201271,"line_start":1184,"line_end":1184,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202322,"byte_end":202328,"line_start":1211,"line_end":1211,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201420,"byte_end":201487,"line_start":1192,"line_end":1192,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201492,"byte_end":201495,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201500,"byte_end":201574,"line_start":1194,"line_end":1194,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201579,"byte_end":201651,"line_start":1195,"line_end":1195,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201656,"byte_end":201708,"line_start":1196,"line_end":1196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201713,"byte_end":201716,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201721,"byte_end":201794,"line_start":1198,"line_end":1198,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201799,"byte_end":201873,"line_start":1199,"line_end":1199,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201878,"byte_end":201953,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":201958,"byte_end":202030,"line_start":1201,"line_end":1201,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202035,"byte_end":202047,"line_start":1202,"line_end":1202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202052,"byte_end":202055,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202060,"byte_end":202135,"line_start":1204,"line_end":1204,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202140,"byte_end":202197,"line_start":1205,"line_end":1205,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202202,"byte_end":202205,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202210,"byte_end":202222,"line_start":1207,"line_end":1207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202227,"byte_end":202230,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202235,"byte_end":202284,"line_start":1209,"line_end":1209,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202289,"byte_end":202314,"line_start":1210,"line_end":1210,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203437,"byte_end":203449,"line_start":1237,"line_end":1237,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202501,"byte_end":202574,"line_start":1218,"line_end":1218,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202579,"byte_end":202582,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202587,"byte_end":202660,"line_start":1220,"line_end":1220,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202665,"byte_end":202735,"line_start":1221,"line_end":1221,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202740,"byte_end":202815,"line_start":1222,"line_end":1222,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202820,"byte_end":202897,"line_start":1223,"line_end":1223,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202902,"byte_end":202930,"line_start":1224,"line_end":1224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202935,"byte_end":202938,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":202943,"byte_end":203016,"line_start":1226,"line_end":1226,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203021,"byte_end":203096,"line_start":1227,"line_end":1227,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203101,"byte_end":203162,"line_start":1228,"line_end":1228,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203167,"byte_end":203170,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203175,"byte_end":203250,"line_start":1230,"line_end":1230,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203255,"byte_end":203312,"line_start":1231,"line_end":1231,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203317,"byte_end":203320,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203325,"byte_end":203337,"line_start":1233,"line_end":1233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203342,"byte_end":203345,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203350,"byte_end":203399,"line_start":1235,"line_end":1235,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":203404,"byte_end":203429,"line_start":1236,"line_end":1236,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205679,"byte_end":205686,"line_start":1290,"line_end":1290,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205376,"byte_end":205449,"line_start":1285,"line_end":1285,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205454,"byte_end":205457,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205462,"byte_end":205531,"line_start":1287,"line_end":1287,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205536,"byte_end":205605,"line_start":1288,"line_end":1288,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205610,"byte_end":205671,"line_start":1289,"line_end":1289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206142,"byte_end":206153,"line_start":1303,"line_end":1303,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205863,"byte_end":205938,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205943,"byte_end":205964,"line_start":1299,"line_end":1299,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205969,"byte_end":205972,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":205977,"byte_end":206057,"line_start":1301,"line_end":1301,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206062,"byte_end":206134,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206606,"byte_end":206618,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206327,"byte_end":206403,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206408,"byte_end":206429,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206434,"byte_end":206437,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206442,"byte_end":206521,"line_start":1314,"line_end":1314,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206526,"byte_end":206598,"line_start":1315,"line_end":1315,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206894,"byte_end":206909,"line_start":1326,"line_end":1326,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206793,"byte_end":206864,"line_start":1324,"line_end":1324,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":206869,"byte_end":206886,"line_start":1325,"line_end":1325,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":209010,"byte_end":209026,"line_start":1381,"line_end":1381,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1865},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207056,"byte_end":207131,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207136,"byte_end":207146,"line_start":1334,"line_end":1334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207151,"byte_end":207154,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207159,"byte_end":207232,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207237,"byte_end":207305,"line_start":1337,"line_end":1337,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207310,"byte_end":207358,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207363,"byte_end":207438,"line_start":1339,"line_end":1339,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207443,"byte_end":207519,"line_start":1340,"line_end":1340,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207524,"byte_end":207550,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207555,"byte_end":207558,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207563,"byte_end":207636,"line_start":1343,"line_end":1343,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207641,"byte_end":207711,"line_start":1344,"line_end":1344,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207716,"byte_end":207756,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207761,"byte_end":207764,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207769,"byte_end":207823,"line_start":1347,"line_end":1347,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207828,"byte_end":207912,"line_start":1348,"line_end":1348,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207917,"byte_end":207920,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207925,"byte_end":207939,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207944,"byte_end":207947,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207952,"byte_end":207959,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":207964,"byte_end":208005,"line_start":1353,"line_end":1353,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208010,"byte_end":208044,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208049,"byte_end":208104,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208109,"byte_end":208112,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208117,"byte_end":208152,"line_start":1357,"line_end":1357,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208157,"byte_end":208207,"line_start":1358,"line_end":1358,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208212,"byte_end":208234,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208239,"byte_end":208249,"line_start":1360,"line_end":1360,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208254,"byte_end":208271,"line_start":1361,"line_end":1361,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208276,"byte_end":208302,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208307,"byte_end":208362,"line_start":1363,"line_end":1363,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208367,"byte_end":208396,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208401,"byte_end":208464,"line_start":1365,"line_end":1365,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208469,"byte_end":208515,"line_start":1366,"line_end":1366,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208520,"byte_end":208534,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208539,"byte_end":208608,"line_start":1368,"line_end":1368,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208613,"byte_end":208638,"line_start":1369,"line_end":1369,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208643,"byte_end":208696,"line_start":1370,"line_end":1370,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208701,"byte_end":208730,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208735,"byte_end":208748,"line_start":1372,"line_end":1372,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208753,"byte_end":208823,"line_start":1373,"line_end":1373,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208828,"byte_end":208887,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208892,"byte_end":208922,"line_start":1375,"line_end":1375,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208927,"byte_end":208936,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208941,"byte_end":208946,"line_start":1377,"line_end":1377,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208951,"byte_end":208976,"line_start":1378,"line_end":1378,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208981,"byte_end":208990,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":208995,"byte_end":209002,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8615},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310063,"byte_end":310070,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8619}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310003,"byte_end":310051,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":309988,"byte_end":310002,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8651},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310063,"byte_end":310070,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":309988,"byte_end":310002,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8691}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8713},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8765},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8768}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8790},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8842},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8845}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8867},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":8871},{"krate":0,"index":8872}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8916},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312824,"byte_end":312834,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8918}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312764,"byte_end":312812,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312732,"byte_end":312746,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8936},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312824,"byte_end":312834,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":8939},{"krate":0,"index":8940}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312732,"byte_end":312746,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8968}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8990},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":8994},{"krate":0,"index":8995}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9042},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9045}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9067},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":9071},{"krate":0,"index":9072}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9116},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314155,"byte_end":314161,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9120}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314095,"byte_end":314143,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314080,"byte_end":314094,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9152},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314155,"byte_end":314161,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314080,"byte_end":314094,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9186},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317031,"byte_end":317038,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9189}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":316864,"byte_end":316934,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":316952,"byte_end":317019,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9194},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318107,"byte_end":318117,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9199},{"krate":0,"index":9198},{"krate":0,"index":9200}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318028,"byte_end":318095,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318013,"byte_end":318027,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9230},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318107,"byte_end":318117,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318013,"byte_end":318027,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9260},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320012,"byte_end":320021,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9266},{"krate":0,"index":9264},{"krate":0,"index":9267},{"krate":0,"index":9265}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":319952,"byte_end":320000,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":319937,"byte_end":319951,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9299},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320012,"byte_end":320021,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":9304},{"krate":0,"index":9305},{"krate":0,"index":9306}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":319937,"byte_end":319951,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323182,"byte_end":323194,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9338},{"krate":0,"index":9337},{"krate":0,"index":9339}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323122,"byte_end":323170,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323107,"byte_end":323121,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9369},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323182,"byte_end":323194,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9374},{"krate":0,"index":9375},{"krate":0,"index":9376}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323107,"byte_end":323121,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9403},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326151,"byte_end":326161,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9405},{"krate":0,"index":9406}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326091,"byte_end":326139,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326059,"byte_end":326073,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9426},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326151,"byte_end":326161,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9429},{"krate":0,"index":9430},{"krate":0,"index":9431}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326059,"byte_end":326073,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9453},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328259,"byte_end":328269,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9457},{"krate":0,"index":9456}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328180,"byte_end":328247,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328148,"byte_end":328162,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9481},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328259,"byte_end":328269,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":9485},{"krate":0,"index":9486}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328148,"byte_end":328162,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9509},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329629,"byte_end":329638,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9512},{"krate":0,"index":9511}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329550,"byte_end":329617,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329518,"byte_end":329532,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329629,"byte_end":329638,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":9535},{"krate":0,"index":9536}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329518,"byte_end":329532,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9554},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331039,"byte_end":331046,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9561},{"krate":0,"index":9559},{"krate":0,"index":9560},{"krate":0,"index":9562}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":330960,"byte_end":331027,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":330945,"byte_end":330959,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331039,"byte_end":331046,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":9604},{"krate":0,"index":9605},{"krate":0,"index":9606}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":330945,"byte_end":330959,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2328},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335510,"byte_end":335520,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333653,"byte_end":333729,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333730,"byte_end":333733,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333734,"byte_end":333810,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333811,"byte_end":333881,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333882,"byte_end":333941,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333942,"byte_end":333945,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":333946,"byte_end":334024,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334025,"byte_end":334102,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334103,"byte_end":334167,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334168,"byte_end":334171,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334172,"byte_end":334244,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334245,"byte_end":334323,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334324,"byte_end":334353,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334354,"byte_end":334357,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334358,"byte_end":334435,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334436,"byte_end":334500,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334501,"byte_end":334553,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334554,"byte_end":334557,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334558,"byte_end":334635,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334636,"byte_end":334708,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334709,"byte_end":334778,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334779,"byte_end":334857,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334858,"byte_end":334861,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334862,"byte_end":334875,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334876,"byte_end":334879,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334880,"byte_end":334887,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334888,"byte_end":334921,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334922,"byte_end":334945,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334946,"byte_end":334987,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":334988,"byte_end":335034,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335035,"byte_end":335038,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335039,"byte_end":335098,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335099,"byte_end":335121,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335122,"byte_end":335156,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335157,"byte_end":335166,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335167,"byte_end":335170,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335171,"byte_end":335194,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335195,"byte_end":335234,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335235,"byte_end":335271,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335272,"byte_end":335315,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335316,"byte_end":335332,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335333,"byte_end":335353,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335354,"byte_end":335363,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335364,"byte_end":335371,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335372,"byte_end":335375,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335376,"byte_end":335441,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335442,"byte_end":335484,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335485,"byte_end":335494,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335495,"byte_end":335502,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335854,"byte_end":335863,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9637},{"krate":0,"index":9638},{"krate":0,"index":9639}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335794,"byte_end":335842,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335779,"byte_end":335793,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9669},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335854,"byte_end":335863,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9674},{"krate":0,"index":9675}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335779,"byte_end":335793,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9698},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337765,"byte_end":337777,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9705},{"krate":0,"index":9702},{"krate":0,"index":9706},{"krate":0,"index":9703},{"krate":0,"index":9704}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337705,"byte_end":337753,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337690,"byte_end":337704,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9740},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337765,"byte_end":337777,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9745},{"krate":0,"index":9746},{"krate":0,"index":9747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337690,"byte_end":337704,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9774},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341366,"byte_end":341378,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9781},{"krate":0,"index":9778},{"krate":0,"index":9782},{"krate":0,"index":9779},{"krate":0,"index":9780}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341306,"byte_end":341354,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341291,"byte_end":341305,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9816},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341366,"byte_end":341378,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9821},{"krate":0,"index":9822},{"krate":0,"index":9823}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341291,"byte_end":341305,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11652},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745590,"byte_end":8745608,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11656},{"krate":0,"index":11654},{"krate":0,"index":11655}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745530,"byte_end":8745578,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745498,"byte_end":8745512,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11678},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745590,"byte_end":8745608,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11681},{"krate":0,"index":11682}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745498,"byte_end":8745512,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11584},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748133,"byte_end":8748153,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11591},{"krate":0,"index":11588},{"krate":0,"index":11589},{"krate":0,"index":11590}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748054,"byte_end":8748121,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748039,"byte_end":8748053,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11623},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748133,"byte_end":8748153,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11628},{"krate":0,"index":11629}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748039,"byte_end":8748053,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9919},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345057,"byte_end":345070,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":9921},{"krate":0,"index":9922}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":344849,"byte_end":344933,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":344951,"byte_end":344999,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2455},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281467,"byte_end":281479,"line_start":138,"line_end":138,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2479},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2494},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281405,"byte_end":281456,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282021,"byte_end":282029,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281497,"byte_end":281571,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281576,"byte_end":281602,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281607,"byte_end":281610,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281615,"byte_end":281629,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281634,"byte_end":281637,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281642,"byte_end":281649,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281654,"byte_end":281695,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281700,"byte_end":281746,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281751,"byte_end":281754,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281759,"byte_end":281779,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281784,"byte_end":281829,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281834,"byte_end":281865,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281870,"byte_end":281873,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281878,"byte_end":281932,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281937,"byte_end":281988,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281993,"byte_end":282001,"line_start":154,"line_end":154,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282006,"byte_end":282013,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282725,"byte_end":282731,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282205,"byte_end":282278,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282283,"byte_end":282314,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282319,"byte_end":282322,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282327,"byte_end":282341,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282346,"byte_end":282349,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282354,"byte_end":282361,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282366,"byte_end":282407,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282412,"byte_end":282458,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282463,"byte_end":282466,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282471,"byte_end":282491,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282496,"byte_end":282537,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282542,"byte_end":282573,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282578,"byte_end":282581,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282586,"byte_end":282639,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282644,"byte_end":282692,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282697,"byte_end":282705,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282710,"byte_end":282717,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283440,"byte_end":283447,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282921,"byte_end":282992,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282997,"byte_end":283028,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283033,"byte_end":283036,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283041,"byte_end":283055,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283060,"byte_end":283063,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283068,"byte_end":283075,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283080,"byte_end":283121,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283126,"byte_end":283172,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283177,"byte_end":283180,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283185,"byte_end":283205,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283210,"byte_end":283251,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283256,"byte_end":283288,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283293,"byte_end":283296,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283301,"byte_end":283354,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283359,"byte_end":283407,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283412,"byte_end":283420,"line_start":204,"line_end":204,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283425,"byte_end":283432,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285052,"byte_end":285060,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283639,"byte_end":283715,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283720,"byte_end":283760,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283765,"byte_end":283768,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283773,"byte_end":283849,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283854,"byte_end":283930,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283935,"byte_end":284008,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284013,"byte_end":284055,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284060,"byte_end":284063,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284068,"byte_end":284141,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284146,"byte_end":284177,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284182,"byte_end":284185,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284190,"byte_end":284264,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284269,"byte_end":284343,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284348,"byte_end":284364,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284369,"byte_end":284372,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284377,"byte_end":284448,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284453,"byte_end":284479,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284484,"byte_end":284487,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284492,"byte_end":284564,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284569,"byte_end":284618,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284623,"byte_end":284626,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284631,"byte_end":284645,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284650,"byte_end":284653,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284658,"byte_end":284665,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284670,"byte_end":284701,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284706,"byte_end":284730,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284735,"byte_end":284773,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284778,"byte_end":284781,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284786,"byte_end":284842,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284847,"byte_end":284850,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284855,"byte_end":284890,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284895,"byte_end":284934,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284939,"byte_end":284963,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284968,"byte_end":284984,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284989,"byte_end":285005,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285010,"byte_end":285020,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285025,"byte_end":285032,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285037,"byte_end":285044,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286212,"byte_end":286219,"line_start":278,"line_end":278,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285313,"byte_end":285378,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285383,"byte_end":285432,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285437,"byte_end":285440,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285445,"byte_end":285524,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285529,"byte_end":285603,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285608,"byte_end":285684,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285689,"byte_end":285734,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285739,"byte_end":285742,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285747,"byte_end":285822,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285827,"byte_end":285867,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285872,"byte_end":285875,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285880,"byte_end":285989,"line_start":272,"line_end":272,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285994,"byte_end":286068,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286073,"byte_end":286089,"line_start":274,"line_end":274,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286094,"byte_end":286097,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286102,"byte_end":286173,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286178,"byte_end":286204,"line_start":277,"line_end":277,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286771,"byte_end":286781,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286468,"byte_end":286542,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286547,"byte_end":286557,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286562,"byte_end":286565,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286570,"byte_end":286640,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286645,"byte_end":286721,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286726,"byte_end":286763,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287270,"byte_end":287281,"line_start":306,"line_end":306,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286979,"byte_end":287058,"line_start":301,"line_end":301,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287063,"byte_end":287066,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287071,"byte_end":287141,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287146,"byte_end":287220,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287225,"byte_end":287262,"line_start":305,"line_end":305,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288202,"byte_end":288213,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287484,"byte_end":287537,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287542,"byte_end":287586,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287591,"byte_end":287594,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287599,"byte_end":287648,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287653,"byte_end":287726,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287731,"byte_end":287751,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287756,"byte_end":287759,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287764,"byte_end":287778,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287783,"byte_end":287786,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287791,"byte_end":287798,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287803,"byte_end":287862,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287867,"byte_end":287870,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287875,"byte_end":287894,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287899,"byte_end":287917,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287922,"byte_end":287994,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287999,"byte_end":288029,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288034,"byte_end":288041,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288046,"byte_end":288120,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288125,"byte_end":288128,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288133,"byte_end":288182,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288187,"byte_end":288194,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289108,"byte_end":289116,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288369,"byte_end":288443,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288448,"byte_end":288522,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288527,"byte_end":288539,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288544,"byte_end":288547,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288552,"byte_end":288619,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288624,"byte_end":288696,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288701,"byte_end":288740,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288745,"byte_end":288748,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288753,"byte_end":288767,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288772,"byte_end":288775,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288780,"byte_end":288787,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288792,"byte_end":288833,"line_start":353,"line_end":353,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288838,"byte_end":288884,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288889,"byte_end":288892,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288897,"byte_end":288954,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288959,"byte_end":288962,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":288967,"byte_end":289021,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289026,"byte_end":289075,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289080,"byte_end":289088,"line_start":360,"line_end":360,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289093,"byte_end":289100,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290468,"byte_end":290480,"line_start":402,"line_end":402,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289283,"byte_end":289352,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289357,"byte_end":289413,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289418,"byte_end":289421,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289426,"byte_end":289501,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289506,"byte_end":289576,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289581,"byte_end":289619,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289624,"byte_end":289627,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289632,"byte_end":289710,"line_start":376,"line_end":376,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289715,"byte_end":289775,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289780,"byte_end":289837,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289842,"byte_end":289909,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289914,"byte_end":289944,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289949,"byte_end":289952,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289957,"byte_end":289971,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289976,"byte_end":289979,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289984,"byte_end":289991,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":289996,"byte_end":290037,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290042,"byte_end":290066,"line_start":386,"line_end":386,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290071,"byte_end":290117,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290122,"byte_end":290125,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290130,"byte_end":290151,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290156,"byte_end":290159,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290164,"byte_end":290169,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290174,"byte_end":290235,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290240,"byte_end":290262,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290267,"byte_end":290331,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290336,"byte_end":290347,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290352,"byte_end":290391,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290396,"byte_end":290401,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290406,"byte_end":290409,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290414,"byte_end":290435,"line_start":399,"line_end":399,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290440,"byte_end":290448,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290453,"byte_end":290460,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291493,"byte_end":291507,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290744,"byte_end":290818,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290823,"byte_end":290846,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290851,"byte_end":290854,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290859,"byte_end":290890,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290895,"byte_end":290972,"line_start":415,"line_end":415,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":290977,"byte_end":291006,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291011,"byte_end":291014,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291019,"byte_end":291033,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291038,"byte_end":291041,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291046,"byte_end":291053,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291058,"byte_end":291099,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291104,"byte_end":291128,"line_start":422,"line_end":422,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291133,"byte_end":291179,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291184,"byte_end":291187,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291192,"byte_end":291261,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291266,"byte_end":291336,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291341,"byte_end":291344,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291349,"byte_end":291416,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291421,"byte_end":291460,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291465,"byte_end":291473,"line_start":430,"line_end":430,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291478,"byte_end":291485,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292540,"byte_end":292554,"line_start":462,"line_end":462,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291784,"byte_end":291858,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291863,"byte_end":291886,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291891,"byte_end":291894,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291899,"byte_end":291930,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":291935,"byte_end":292012,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292017,"byte_end":292046,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292051,"byte_end":292054,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292059,"byte_end":292073,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292078,"byte_end":292081,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292086,"byte_end":292093,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292098,"byte_end":292139,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292144,"byte_end":292168,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292173,"byte_end":292219,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292224,"byte_end":292227,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292232,"byte_end":292308,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292313,"byte_end":292383,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292388,"byte_end":292391,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292396,"byte_end":292463,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292468,"byte_end":292507,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292512,"byte_end":292520,"line_start":460,"line_end":460,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292525,"byte_end":292532,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294462,"byte_end":294485,"line_start":514,"line_end":514,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292780,"byte_end":292862,"line_start":471,"line_end":471,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292867,"byte_end":292941,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":292946,"byte_end":292996,"line_start":473,"line_end":473,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293001,"byte_end":293004,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293009,"byte_end":293031,"line_start":475,"line_end":475,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293036,"byte_end":293122,"line_start":476,"line_end":476,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293127,"byte_end":293212,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293217,"byte_end":293245,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293250,"byte_end":293253,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293258,"byte_end":293333,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293338,"byte_end":293395,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293400,"byte_end":293403,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293408,"byte_end":293422,"line_start":483,"line_end":483,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293427,"byte_end":293430,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293435,"byte_end":293442,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293447,"byte_end":293488,"line_start":486,"line_end":486,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293493,"byte_end":293527,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293532,"byte_end":293589,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293594,"byte_end":293597,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293602,"byte_end":293642,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293647,"byte_end":293687,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293692,"byte_end":293733,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293738,"byte_end":293741,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293746,"byte_end":293797,"line_start":494,"line_end":494,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293802,"byte_end":293855,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293860,"byte_end":293882,"line_start":496,"line_end":496,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293887,"byte_end":293912,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293917,"byte_end":293979,"line_start":498,"line_end":498,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":293984,"byte_end":293999,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294004,"byte_end":294013,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294018,"byte_end":294024,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294029,"byte_end":294032,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294037,"byte_end":294063,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294068,"byte_end":294135,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294140,"byte_end":294154,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294159,"byte_end":294162,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294167,"byte_end":294228,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294233,"byte_end":294261,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294266,"byte_end":294316,"line_start":509,"line_end":509,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294321,"byte_end":294329,"line_start":510,"line_end":510,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294334,"byte_end":294341,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294429,"byte_end":294454,"line_start":513,"line_end":513,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295934,"byte_end":295945,"line_start":561,"line_end":561,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294895,"byte_end":294947,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":294952,"byte_end":295019,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295024,"byte_end":295027,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295032,"byte_end":295106,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295111,"byte_end":295192,"line_start":535,"line_end":535,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295197,"byte_end":295267,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295272,"byte_end":295275,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295280,"byte_end":295348,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295353,"byte_end":295356,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295361,"byte_end":295375,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295380,"byte_end":295383,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295388,"byte_end":295395,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295400,"byte_end":295441,"line_start":543,"line_end":543,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295446,"byte_end":295477,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295482,"byte_end":295520,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295525,"byte_end":295545,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295550,"byte_end":295553,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295558,"byte_end":295595,"line_start":548,"line_end":548,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295600,"byte_end":295603,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295608,"byte_end":295635,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295640,"byte_end":295664,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295669,"byte_end":295715,"line_start":552,"line_end":552,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295720,"byte_end":295729,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295734,"byte_end":295777,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295782,"byte_end":295789,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295794,"byte_end":295797,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295802,"byte_end":295865,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295870,"byte_end":295901,"line_start":558,"line_end":558,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295906,"byte_end":295914,"line_start":559,"line_end":559,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":295919,"byte_end":295926,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297416,"byte_end":297426,"line_start":598,"line_end":598,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296128,"byte_end":296201,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296206,"byte_end":296240,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296245,"byte_end":296248,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296253,"byte_end":296328,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296333,"byte_end":296408,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296413,"byte_end":296486,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296491,"byte_end":296562,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296567,"byte_end":296617,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296622,"byte_end":296625,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296630,"byte_end":296701,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296706,"byte_end":296709,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296714,"byte_end":296790,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296795,"byte_end":296865,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296870,"byte_end":296895,"line_start":581,"line_end":581,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296900,"byte_end":296903,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296908,"byte_end":296922,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296927,"byte_end":296934,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296939,"byte_end":296980,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":296985,"byte_end":297009,"line_start":586,"line_end":586,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297014,"byte_end":297071,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297076,"byte_end":297079,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297084,"byte_end":297164,"line_start":589,"line_end":589,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297169,"byte_end":297212,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297217,"byte_end":297250,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297255,"byte_end":297262,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297267,"byte_end":297270,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297275,"byte_end":297323,"line_start":594,"line_end":594,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297328,"byte_end":297383,"line_start":595,"line_end":595,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297388,"byte_end":297396,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297401,"byte_end":297408,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299053,"byte_end":299067,"line_start":639,"line_end":639,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297677,"byte_end":297739,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297744,"byte_end":297812,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297817,"byte_end":297851,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297856,"byte_end":297859,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297864,"byte_end":297939,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":297944,"byte_end":298019,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298024,"byte_end":298100,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298105,"byte_end":298170,"line_start":614,"line_end":614,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298175,"byte_end":298178,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298183,"byte_end":298254,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298259,"byte_end":298262,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298267,"byte_end":298343,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298348,"byte_end":298422,"line_start":619,"line_end":619,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298427,"byte_end":298452,"line_start":620,"line_end":620,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298457,"byte_end":298460,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298465,"byte_end":298479,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298484,"byte_end":298491,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298496,"byte_end":298537,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298542,"byte_end":298599,"line_start":625,"line_end":625,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298604,"byte_end":298629,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298634,"byte_end":298637,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298642,"byte_end":298712,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298717,"byte_end":298772,"line_start":629,"line_end":629,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298777,"byte_end":298839,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298844,"byte_end":298859,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298864,"byte_end":298871,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298876,"byte_end":298879,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298884,"byte_end":298905,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298910,"byte_end":298959,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":298964,"byte_end":299020,"line_start":636,"line_end":636,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299025,"byte_end":299033,"line_start":637,"line_end":637,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299038,"byte_end":299045,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300759,"byte_end":300770,"line_start":686,"line_end":686,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299344,"byte_end":299409,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299414,"byte_end":299417,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299422,"byte_end":299495,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299500,"byte_end":299573,"line_start":651,"line_end":651,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299578,"byte_end":299651,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299656,"byte_end":299726,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299731,"byte_end":299734,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299739,"byte_end":299753,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299758,"byte_end":299761,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299766,"byte_end":299773,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299778,"byte_end":299819,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299824,"byte_end":299855,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299860,"byte_end":299911,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299916,"byte_end":299936,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299941,"byte_end":299944,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299949,"byte_end":299988,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":299993,"byte_end":300032,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300037,"byte_end":300076,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300081,"byte_end":300084,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300089,"byte_end":300116,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300121,"byte_end":300164,"line_start":668,"line_end":668,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300169,"byte_end":300176,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300181,"byte_end":300208,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300213,"byte_end":300256,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300261,"byte_end":300305,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300310,"byte_end":300317,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300322,"byte_end":300349,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300354,"byte_end":300399,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300404,"byte_end":300449,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300454,"byte_end":300498,"line_start":677,"line_end":677,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300503,"byte_end":300510,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300515,"byte_end":300518,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300523,"byte_end":300562,"line_start":680,"line_end":680,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300567,"byte_end":300616,"line_start":681,"line_end":681,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300621,"byte_end":300670,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300675,"byte_end":300725,"line_start":683,"line_end":683,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300730,"byte_end":300739,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":300744,"byte_end":300751,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302362,"byte_end":302370,"line_start":725,"line_end":725,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301075,"byte_end":301145,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301150,"byte_end":301210,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301215,"byte_end":301218,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301223,"byte_end":301293,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301298,"byte_end":301374,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301379,"byte_end":301455,"line_start":702,"line_end":702,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301460,"byte_end":301530,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301535,"byte_end":301561,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301566,"byte_end":301569,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301574,"byte_end":301654,"line_start":706,"line_end":706,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301659,"byte_end":301728,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301733,"byte_end":301754,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301759,"byte_end":301762,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301767,"byte_end":301781,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301786,"byte_end":301789,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301794,"byte_end":301801,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301806,"byte_end":301847,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301852,"byte_end":301898,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301903,"byte_end":301906,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301911,"byte_end":301980,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":301985,"byte_end":302062,"line_start":717,"line_end":717,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302067,"byte_end":302100,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302105,"byte_end":302108,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302113,"byte_end":302199,"line_start":720,"line_end":720,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302204,"byte_end":302290,"line_start":721,"line_end":721,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302295,"byte_end":302329,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302334,"byte_end":302342,"line_start":723,"line_end":723,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302347,"byte_end":302354,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303896,"byte_end":303906,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302650,"byte_end":302712,"line_start":734,"line_end":734,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302717,"byte_end":302792,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302797,"byte_end":302800,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302805,"byte_end":302876,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302881,"byte_end":302957,"line_start":738,"line_end":738,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":302962,"byte_end":303001,"line_start":739,"line_end":739,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303006,"byte_end":303009,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303014,"byte_end":303100,"line_start":741,"line_end":741,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303105,"byte_end":303108,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303113,"byte_end":303197,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303202,"byte_end":303258,"line_start":744,"line_end":744,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303263,"byte_end":303266,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303271,"byte_end":303285,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303290,"byte_end":303293,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303298,"byte_end":303305,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303310,"byte_end":303351,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303356,"byte_end":303387,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303392,"byte_end":303430,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303435,"byte_end":303455,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303460,"byte_end":303463,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303468,"byte_end":303529,"line_start":754,"line_end":754,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303534,"byte_end":303537,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303542,"byte_end":303569,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303574,"byte_end":303605,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303610,"byte_end":303636,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303641,"byte_end":303711,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303716,"byte_end":303725,"line_start":760,"line_end":760,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303730,"byte_end":303737,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303742,"byte_end":303745,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303750,"byte_end":303789,"line_start":763,"line_end":763,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303794,"byte_end":303797,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303802,"byte_end":303862,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303867,"byte_end":303876,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":303881,"byte_end":303888,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306660,"byte_end":306680,"line_start":835,"line_end":835,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304160,"byte_end":304226,"line_start":776,"line_end":776,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304231,"byte_end":304234,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304239,"byte_end":304344,"line_start":778,"line_end":778,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304349,"byte_end":304392,"line_start":779,"line_end":779,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304397,"byte_end":304400,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304405,"byte_end":304473,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304478,"byte_end":304551,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304556,"byte_end":304612,"line_start":783,"line_end":783,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304617,"byte_end":304620,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304625,"byte_end":304700,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304705,"byte_end":304778,"line_start":786,"line_end":786,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304783,"byte_end":304848,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304853,"byte_end":304856,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304861,"byte_end":304936,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":304941,"byte_end":304998,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305003,"byte_end":305006,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305011,"byte_end":305025,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305030,"byte_end":305033,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305038,"byte_end":305090,"line_start":794,"line_end":794,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305095,"byte_end":305102,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305107,"byte_end":305148,"line_start":796,"line_end":796,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305153,"byte_end":305187,"line_start":797,"line_end":797,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305192,"byte_end":305249,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305254,"byte_end":305257,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305262,"byte_end":305312,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305317,"byte_end":305367,"line_start":801,"line_end":801,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305372,"byte_end":305375,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305380,"byte_end":305455,"line_start":803,"line_end":803,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305460,"byte_end":305463,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305468,"byte_end":305534,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305539,"byte_end":305542,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305547,"byte_end":305572,"line_start":807,"line_end":807,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305577,"byte_end":305631,"line_start":808,"line_end":808,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305636,"byte_end":305639,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305644,"byte_end":305669,"line_start":810,"line_end":810,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305674,"byte_end":305728,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305733,"byte_end":305736,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305741,"byte_end":305785,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305790,"byte_end":305826,"line_start":814,"line_end":814,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305831,"byte_end":305838,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305843,"byte_end":305846,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305851,"byte_end":305911,"line_start":817,"line_end":817,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305916,"byte_end":305923,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305928,"byte_end":305969,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":305974,"byte_end":306005,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306010,"byte_end":306061,"line_start":821,"line_end":821,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306066,"byte_end":306069,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306074,"byte_end":306128,"line_start":823,"line_end":823,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306133,"byte_end":306199,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306204,"byte_end":306207,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306212,"byte_end":306261,"line_start":826,"line_end":826,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306266,"byte_end":306320,"line_start":827,"line_end":827,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306325,"byte_end":306328,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306333,"byte_end":306386,"line_start":829,"line_end":829,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306391,"byte_end":306463,"line_start":830,"line_end":830,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306468,"byte_end":306527,"line_start":831,"line_end":831,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306532,"byte_end":306539,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":306627,"byte_end":306652,"line_start":834,"line_end":834,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":307149,"byte_end":307168,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":307041,"byte_end":307119,"line_start":847,"line_end":847,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":307124,"byte_end":307141,"line_start":848,"line_end":848,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309462,"byte_end":309477,"line_start":915,"line_end":915,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308240,"byte_end":308322,"line_start":887,"line_end":887,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308327,"byte_end":308330,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308335,"byte_end":308450,"line_start":889,"line_end":889,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308455,"byte_end":308546,"line_start":890,"line_end":890,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308551,"byte_end":308641,"line_start":891,"line_end":891,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308646,"byte_end":308731,"line_start":892,"line_end":892,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308736,"byte_end":308739,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308744,"byte_end":308808,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308813,"byte_end":308870,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308875,"byte_end":308878,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308883,"byte_end":308897,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308902,"byte_end":308905,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308910,"byte_end":308917,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308922,"byte_end":308963,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":308968,"byte_end":309014,"line_start":901,"line_end":901,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309019,"byte_end":309053,"line_start":902,"line_end":902,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309058,"byte_end":309061,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309066,"byte_end":309127,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309132,"byte_end":309178,"line_start":905,"line_end":905,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309183,"byte_end":309212,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309217,"byte_end":309220,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309225,"byte_end":309281,"line_start":908,"line_end":908,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309286,"byte_end":309324,"line_start":909,"line_end":909,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309329,"byte_end":309337,"line_start":910,"line_end":910,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309342,"byte_end":309349,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309354,"byte_end":309376,"line_start":912,"line_end":912,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":309431,"byte_end":309454,"line_start":914,"line_end":914,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9938},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350349,"byte_end":350353,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9940}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350234,"byte_end":350271,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350289,"byte_end":350337,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350871,"byte_end":350875,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350405,"byte_end":350469,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350470,"byte_end":350498,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350499,"byte_end":350502,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350503,"byte_end":350576,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350577,"byte_end":350632,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350633,"byte_end":350636,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350637,"byte_end":350644,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350645,"byte_end":350686,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350687,"byte_end":350730,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350731,"byte_end":350734,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350735,"byte_end":350779,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350780,"byte_end":350845,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350846,"byte_end":350855,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350856,"byte_end":350863,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351517,"byte_end":351523,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9946}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351400,"byte_end":351439,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351457,"byte_end":351505,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2559},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352047,"byte_end":352053,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351545,"byte_end":351605,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351606,"byte_end":351609,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351610,"byte_end":351677,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351678,"byte_end":351750,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351751,"byte_end":351808,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351809,"byte_end":351812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351813,"byte_end":351820,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351821,"byte_end":351862,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351863,"byte_end":351906,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351907,"byte_end":351910,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351911,"byte_end":351946,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":351947,"byte_end":352021,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352022,"byte_end":352031,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352032,"byte_end":352039,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9950},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352838,"byte_end":352843,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9952}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352722,"byte_end":352760,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352778,"byte_end":352826,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2583},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353011,"byte_end":353016,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352881,"byte_end":352929,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352930,"byte_end":352933,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":352934,"byte_end":353003,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353950,"byte_end":353954,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353643,"byte_end":353684,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353685,"byte_end":353688,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353689,"byte_end":353696,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353697,"byte_end":353738,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353739,"byte_end":353782,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353783,"byte_end":353786,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353787,"byte_end":353831,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353832,"byte_end":353887,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353888,"byte_end":353924,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353925,"byte_end":353934,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":353935,"byte_end":353942,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9956},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354167,"byte_end":354171,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9958}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354107,"byte_end":354155,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354075,"byte_end":354089,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9976},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354167,"byte_end":354171,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":9979},{"krate":0,"index":9980}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354075,"byte_end":354089,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9998},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355307,"byte_end":355314,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10000}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355187,"byte_end":355229,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355247,"byte_end":355295,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355490,"byte_end":355497,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355358,"byte_end":355412,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355413,"byte_end":355416,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355417,"byte_end":355482,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356203,"byte_end":356209,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2657}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356102,"byte_end":356142,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356143,"byte_end":356191,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2663},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356897,"byte_end":356904,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356409,"byte_end":356482,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356483,"byte_end":356486,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356487,"byte_end":356546,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356547,"byte_end":356550,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356551,"byte_end":356565,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356566,"byte_end":356569,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356570,"byte_end":356577,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356578,"byte_end":356611,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356612,"byte_end":356640,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356641,"byte_end":356644,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356645,"byte_end":356674,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356675,"byte_end":356678,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356679,"byte_end":356743,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356744,"byte_end":356797,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356798,"byte_end":356819,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356820,"byte_end":356873,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356874,"byte_end":356881,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356882,"byte_end":356889,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10004},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357554,"byte_end":357560,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009},{"krate":0,"index":10007}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357494,"byte_end":357542,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357462,"byte_end":357476,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10035},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357554,"byte_end":357560,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":10039},{"krate":0,"index":10040},{"krate":0,"index":10041}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357462,"byte_end":357476,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2686},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358138,"byte_end":358144,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357662,"byte_end":357730,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357731,"byte_end":357807,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357808,"byte_end":357856,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357857,"byte_end":357860,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357861,"byte_end":357935,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":357936,"byte_end":358005,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358006,"byte_end":358033,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358034,"byte_end":358037,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358038,"byte_end":358109,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358110,"byte_end":358130,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358523,"byte_end":358530,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358415,"byte_end":358489,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358494,"byte_end":358511,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358886,"byte_end":358893,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358624,"byte_end":358692,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358697,"byte_end":358728,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358733,"byte_end":358736,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358741,"byte_end":358814,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358819,"byte_end":358874,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359268,"byte_end":359279,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358999,"byte_end":359074,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359079,"byte_end":359110,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359115,"byte_end":359118,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359123,"byte_end":359196,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359201,"byte_end":359256,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359685,"byte_end":359695,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359449,"byte_end":359512,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359517,"byte_end":359520,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359525,"byte_end":359597,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359602,"byte_end":359673,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2722},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362868,"byte_end":362874,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361426,"byte_end":361496,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361497,"byte_end":361500,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361501,"byte_end":361570,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361571,"byte_end":361652,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361653,"byte_end":361684,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361685,"byte_end":361688,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361689,"byte_end":361768,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361769,"byte_end":361848,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361849,"byte_end":361903,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361904,"byte_end":361907,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361908,"byte_end":361988,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":361989,"byte_end":362059,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362060,"byte_end":362082,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362083,"byte_end":362086,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362087,"byte_end":362164,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362165,"byte_end":362237,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362238,"byte_end":362315,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362316,"byte_end":362376,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362377,"byte_end":362380,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362381,"byte_end":362394,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362395,"byte_end":362398,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362399,"byte_end":362406,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362407,"byte_end":362448,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362449,"byte_end":362492,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362493,"byte_end":362496,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362497,"byte_end":362552,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362553,"byte_end":362576,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362577,"byte_end":362616,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362617,"byte_end":362654,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362655,"byte_end":362694,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362695,"byte_end":362711,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362712,"byte_end":362728,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362729,"byte_end":362738,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362739,"byte_end":362746,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362747,"byte_end":362750,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362751,"byte_end":362803,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362804,"byte_end":362842,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362843,"byte_end":362852,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":362853,"byte_end":362860,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10064},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363205,"byte_end":363211,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10068},{"krate":0,"index":10069},{"krate":0,"index":10070}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363145,"byte_end":363193,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363130,"byte_end":363144,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10100},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363205,"byte_end":363211,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":10105},{"krate":0,"index":10106}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363130,"byte_end":363144,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10166},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756847,"byte_end":8756861,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":10168},{"krate":0,"index":10169},{"krate":0,"index":10170},{"krate":0,"index":10171}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754781,"byte_end":8754815,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754816,"byte_end":8754819,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754820,"byte_end":8754899,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754900,"byte_end":8754971,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754972,"byte_end":8755048,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755049,"byte_end":8755097,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755098,"byte_end":8755101,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755102,"byte_end":8755181,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755182,"byte_end":8755257,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755258,"byte_end":8755336,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755337,"byte_end":8755417,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755418,"byte_end":8755447,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755448,"byte_end":8755451,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755452,"byte_end":8755530,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755531,"byte_end":8755605,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755606,"byte_end":8755681,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755682,"byte_end":8755757,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755758,"byte_end":8755833,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755834,"byte_end":8755892,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755893,"byte_end":8755896,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755897,"byte_end":8755970,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8755971,"byte_end":8756049,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756050,"byte_end":8756108,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756109,"byte_end":8756182,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756183,"byte_end":8756251,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756252,"byte_end":8756328,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756329,"byte_end":8756397,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756398,"byte_end":8756451,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756452,"byte_end":8756455,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756456,"byte_end":8756522,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756523,"byte_end":8756602,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756603,"byte_end":8756650,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756651,"byte_end":8756654,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756655,"byte_end":8756728,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756729,"byte_end":8756786,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8756787,"byte_end":8756835,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10176},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757369,"byte_end":8757372,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757149,"byte_end":8757193,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757198,"byte_end":8757201,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757206,"byte_end":8757281,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757286,"byte_end":8757357,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10177},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757894,"byte_end":8757897,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757621,"byte_end":8757678,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757683,"byte_end":8757686,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757691,"byte_end":8757754,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757759,"byte_end":8757823,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757828,"byte_end":8757882,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10178},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758055,"byte_end":8758063,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757992,"byte_end":8758043,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10179},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758487,"byte_end":8758491,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758168,"byte_end":8758201,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758206,"byte_end":8758209,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758214,"byte_end":8758290,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758295,"byte_end":8758369,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758374,"byte_end":8758447,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758452,"byte_end":8758475,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10204},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":10205},{"krate":0,"index":10206},{"krate":0,"index":10207},{"krate":0,"index":10208},{"krate":0,"index":10209},{"krate":0,"index":10210},{"krate":0,"index":10211},{"krate":0,"index":10212},{"krate":0,"index":10213},{"krate":0,"index":10214},{"krate":0,"index":10215},{"krate":0,"index":10216},{"krate":0,"index":10217},{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10220},{"krate":0,"index":10221},{"krate":0,"index":10222},{"krate":0,"index":13920},{"krate":0,"index":10223},{"krate":0,"index":10224},{"krate":0,"index":13924},{"krate":0,"index":10225},{"krate":0,"index":10226},{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":13932},{"krate":0,"index":10230},{"krate":0,"index":13934},{"krate":0,"index":10231},{"krate":0,"index":13936},{"krate":0,"index":10232},{"krate":0,"index":13938},{"krate":0,"index":10233},{"krate":0,"index":13940},{"krate":0,"index":10234},{"krate":0,"index":10235},{"krate":0,"index":10236},{"krate":0,"index":10237},{"krate":0,"index":10238},{"krate":0,"index":10239},{"krate":0,"index":10240},{"krate":0,"index":10246},{"krate":0,"index":10284},{"krate":0,"index":10285},{"krate":0,"index":13960},{"krate":0,"index":10286},{"krate":0,"index":13962},{"krate":0,"index":10287},{"krate":0,"index":10288},{"krate":0,"index":10289},{"krate":0,"index":10329},{"krate":0,"index":10330},{"krate":0,"index":10366},{"krate":0,"index":10367},{"krate":0,"index":10368},{"krate":0,"index":10369},{"krate":0,"index":10370},{"krate":0,"index":10375},{"krate":0,"index":10377},{"krate":0,"index":10379},{"krate":0,"index":10381},{"krate":0,"index":10383},{"krate":0,"index":10385},{"krate":0,"index":10388},{"krate":0,"index":10403},{"krate":0,"index":10416},{"krate":0,"index":10419},{"krate":0,"index":10422},{"krate":0,"index":10427},{"krate":0,"index":10430}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":160998,"byte_end":161023,"line_start":92,"line_end":92,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8760926,"byte_end":8760958,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8760959,"byte_end":8760962,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8760963,"byte_end":8761038,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8761039,"byte_end":8761096,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10486},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787345,"byte_end":8787355,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10491}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787274,"byte_end":8787333,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10496},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787591,"byte_end":8787598,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787520,"byte_end":8787579,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10505},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787740,"byte_end":8787750,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10508},{"krate":0,"index":10509},{"krate":0,"index":10510},{"krate":0,"index":10511}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787667,"byte_end":8787728,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10516},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8788037,"byte_end":8788041,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8787960,"byte_end":8788025,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10370},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763810,"byte_end":8763826,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10372},{"krate":0,"index":10373},{"krate":0,"index":10374}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762715,"byte_end":8762768,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762769,"byte_end":8762772,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762773,"byte_end":8762841,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762842,"byte_end":8762915,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762916,"byte_end":8762992,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8762993,"byte_end":8763037,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763038,"byte_end":8763041,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763042,"byte_end":8763120,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763121,"byte_end":8763179,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763180,"byte_end":8763244,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763245,"byte_end":8763298,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763299,"byte_end":8763378,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763379,"byte_end":8763408,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763409,"byte_end":8763412,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763413,"byte_end":8763483,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763484,"byte_end":8763561,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763562,"byte_end":8763613,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763614,"byte_end":8763617,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763618,"byte_end":8763691,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763692,"byte_end":8763749,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763750,"byte_end":8763798,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10390},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766496,"byte_end":8766499,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766225,"byte_end":8766274,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766279,"byte_end":8766282,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766287,"byte_end":8766354,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766359,"byte_end":8766433,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766438,"byte_end":8766484,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10391},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767523,"byte_end":8767526,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767385,"byte_end":8767440,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767445,"byte_end":8767448,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767453,"byte_end":8767511,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767690,"byte_end":8767698,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767628,"byte_end":8767678,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10393},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8768281,"byte_end":8768285,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767911,"byte_end":8767942,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767947,"byte_end":8767950,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8767955,"byte_end":8768025,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8768030,"byte_end":8768116,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8768121,"byte_end":8768197,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8768202,"byte_end":8768269,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10394},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8769560,"byte_end":8769564,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8769478,"byte_end":8769548,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10396},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8770108,"byte_end":8770116,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8770027,"byte_end":8770096,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10397},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8770306,"byte_end":8770318,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8770225,"byte_end":8770294,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10451},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799326,"byte_end":8799335,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10453}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798702,"byte_end":8798733,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798734,"byte_end":8798737,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798738,"byte_end":8798809,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798810,"byte_end":8798847,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798848,"byte_end":8798851,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798852,"byte_end":8798918,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798919,"byte_end":8798990,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8798991,"byte_end":8799071,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799072,"byte_end":8799075,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799076,"byte_end":8799137,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799138,"byte_end":8799212,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799213,"byte_end":8799265,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799266,"byte_end":8799314,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10459},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799792,"byte_end":8799795,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799592,"byte_end":8799631,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799636,"byte_end":8799639,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799644,"byte_end":8799714,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799719,"byte_end":8799780,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10460},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800019,"byte_end":8800022,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799881,"byte_end":8799936,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799941,"byte_end":8799944,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799949,"byte_end":8800007,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10461},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800138,"byte_end":8800146,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800077,"byte_end":8800126,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10462},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800508,"byte_end":8800512,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800205,"byte_end":8800236,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800241,"byte_end":8800244,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800249,"byte_end":8800321,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800326,"byte_end":8800400,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800405,"byte_end":8800473,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800478,"byte_end":8800496,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10473},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802288,"byte_end":8802298,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801667,"byte_end":8801741,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801742,"byte_end":8801745,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801746,"byte_end":8801825,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801826,"byte_end":8801877,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801878,"byte_end":8801952,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801953,"byte_end":8802012,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802013,"byte_end":8802016,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802017,"byte_end":8802089,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802090,"byte_end":8802140,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802141,"byte_end":8802144,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802145,"byte_end":8802222,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802223,"byte_end":8802280,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2754},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":10525},{"krate":0,"index":10526},{"krate":0,"index":10527},{"krate":0,"index":10528},{"krate":0,"index":10529},{"krate":0,"index":10530},{"krate":0,"index":2755},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"/ Task notification","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":364631,"byte_end":364652,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2769},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365842,"byte_end":365850,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":2770}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365799,"byte_end":365831,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366847,"byte_end":366852,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":2769},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365864,"byte_end":365929,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365934,"byte_end":365949,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365954,"byte_end":365957,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365962,"byte_end":366032,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366037,"byte_end":366056,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366061,"byte_end":366064,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366069,"byte_end":366138,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366143,"byte_end":366216,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366221,"byte_end":366260,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366265,"byte_end":366268,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366273,"byte_end":366339,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366344,"byte_end":366410,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366415,"byte_end":366486,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366491,"byte_end":366547,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366552,"byte_end":366555,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366560,"byte_end":366567,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366572,"byte_end":366610,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366615,"byte_end":366647,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366652,"byte_end":366655,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366660,"byte_end":366706,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366711,"byte_end":366714,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366719,"byte_end":366756,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366761,"byte_end":366797,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366802,"byte_end":366809,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":366814,"byte_end":366839,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2772},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368606,"byte_end":368619,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":2773}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368558,"byte_end":368595,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369662,"byte_end":369673,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":2772},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368638,"byte_end":368703,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368708,"byte_end":368723,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368728,"byte_end":368731,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368736,"byte_end":368806,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368811,"byte_end":368830,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368835,"byte_end":368838,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368843,"byte_end":368912,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368917,"byte_end":368990,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368995,"byte_end":369034,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369039,"byte_end":369042,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369047,"byte_end":369113,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369118,"byte_end":369184,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369189,"byte_end":369260,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369265,"byte_end":369321,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369326,"byte_end":369329,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369334,"byte_end":369341,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369346,"byte_end":369383,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369388,"byte_end":369425,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369430,"byte_end":369433,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369438,"byte_end":369474,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369479,"byte_end":369516,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369521,"byte_end":369524,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369529,"byte_end":369566,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369571,"byte_end":369612,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369617,"byte_end":369624,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":369629,"byte_end":369654,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2793},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","parent":null,"children":[{"krate":0,"index":2794}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"/ Definition of the `Never` type,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371078,"byte_end":371113,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371114,"byte_end":371170,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2794},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371807,"byte_end":371812,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371172,"byte_end":371207,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371208,"byte_end":371211,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371212,"byte_end":371287,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371288,"byte_end":371325,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371326,"byte_end":371329,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371330,"byte_end":371394,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371395,"byte_end":371398,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371399,"byte_end":371470,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371471,"byte_end":371522,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371523,"byte_end":371615,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371616,"byte_end":371619,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371620,"byte_end":371691,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":371692,"byte_end":371797,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":2795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":14584},{"krate":0,"index":3474},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3621}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12265,"byte_end":12287,"line_start":330,"line_end":330,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12334,"byte_end":12357,"line_start":332,"line_end":332,"column_start":1,"column_end":24}},{"value":"/ IO","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371843,"byte_end":371849,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371850,"byte_end":371853,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371854,"byte_end":371917,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371918,"byte_end":371997,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371998,"byte_end":372076,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372077,"byte_end":372152,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ and `AsyncBufRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372153,"byte_end":372182,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372183,"byte_end":372186,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372187,"byte_end":372261,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372262,"byte_end":372319,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10531},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398126,"byte_end":398136,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397477,"byte_end":397542,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397543,"byte_end":397592,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397593,"byte_end":397664,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397665,"byte_end":397668,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397669,"byte_end":397745,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397746,"byte_end":397817,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397818,"byte_end":397886,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397887,"byte_end":397955,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":397956,"byte_end":398031,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398032,"byte_end":398046,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398700,"byte_end":398703,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398630,"byte_end":398688,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398818,"byte_end":398825,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398755,"byte_end":398806,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398939,"byte_end":398946,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398868,"byte_end":398927,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399067,"byte_end":399077,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399001,"byte_end":399055,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":403995,"byte_end":404004,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10573},{"krate":0,"index":10570},{"krate":0,"index":10571},{"krate":0,"index":10572}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":403969,"byte_end":403983,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10597},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":403995,"byte_end":404004,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufReader","qualname":"::io::buf_reader::_::__BufReader","value":"__BufReader {  }","parent":null,"children":[{"krate":0,"index":10600},{"krate":0,"index":10601}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":403969,"byte_end":403983,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404273,"byte_end":404276,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404131,"byte_end":404223,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404228,"byte_end":404261,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404438,"byte_end":404451,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404361,"byte_end":404426,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":405034,"byte_end":405040,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404874,"byte_end":404930,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404935,"byte_end":404938,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404943,"byte_end":405022,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10624},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":411954,"byte_end":411963,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10628},{"krate":0,"index":10626},{"krate":0,"index":10627}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":411928,"byte_end":411942,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10650},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":411954,"byte_end":411963,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufWriter","qualname":"::io::buf_writer::_::__BufWriter","value":"__BufWriter {  }","parent":null,"children":[{"krate":0,"index":10653},{"krate":0,"index":10654}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":411928,"byte_end":411942,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412216,"byte_end":412219,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412074,"byte_end":412166,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412171,"byte_end":412204,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412381,"byte_end":412394,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412304,"byte_end":412369,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":413551,"byte_end":413557,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":413483,"byte_end":413539,"line_start":84,"line_end":84,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10677},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416395,"byte_end":416400,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10681},{"krate":0,"index":10682},{"krate":0,"index":10680}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416335,"byte_end":416383,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416320,"byte_end":416334,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10708},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416395,"byte_end":416400,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::io::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":10712},{"krate":0,"index":10713},{"krate":0,"index":10714}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416320,"byte_end":416334,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416785,"byte_end":416792,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416711,"byte_end":416773,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417124,"byte_end":417131,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416861,"byte_end":416931,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416936,"byte_end":416939,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416944,"byte_end":417017,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417022,"byte_end":417095,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417100,"byte_end":417112,"line_start":43,"line_end":43,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417490,"byte_end":417501,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417220,"byte_end":417297,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417302,"byte_end":417305,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417310,"byte_end":417383,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417388,"byte_end":417461,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417466,"byte_end":417478,"line_start":52,"line_end":52,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417704,"byte_end":417714,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417636,"byte_end":417692,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10733},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420528,"byte_end":420533,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10736}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420366,"byte_end":420431,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420449,"byte_end":420516,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3033},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422082,"byte_end":422086,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421233,"byte_end":421308,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421309,"byte_end":421312,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421313,"byte_end":421396,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421397,"byte_end":421477,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421478,"byte_end":421550,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421551,"byte_end":421564,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421565,"byte_end":421568,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421569,"byte_end":421616,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421617,"byte_end":421620,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421621,"byte_end":421635,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421636,"byte_end":421639,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421640,"byte_end":421647,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421648,"byte_end":421689,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421690,"byte_end":421741,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421742,"byte_end":421745,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421746,"byte_end":421789,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421790,"byte_end":421837,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421838,"byte_end":421841,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421842,"byte_end":421895,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421896,"byte_end":421922,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421923,"byte_end":421926,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421927,"byte_end":421952,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":421953,"byte_end":422006,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422007,"byte_end":422066,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422067,"byte_end":422074,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10741},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422428,"byte_end":422432,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":10745}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422349,"byte_end":422416,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422317,"byte_end":422331,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10771},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422428,"byte_end":422432,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"__Copy","qualname":"::io::copy::_::__Copy","value":"__Copy {  }","parent":null,"children":[{"krate":0,"index":10776},{"krate":0,"index":10777},{"krate":0,"index":10778}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422317,"byte_end":422331,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":3055},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423788,"byte_end":423796,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":422932,"byte_end":423007,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423008,"byte_end":423011,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423012,"byte_end":423098,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423099,"byte_end":423179,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423180,"byte_end":423252,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423253,"byte_end":423266,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423267,"byte_end":423270,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423271,"byte_end":423318,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423319,"byte_end":423322,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423323,"byte_end":423337,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423338,"byte_end":423341,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423342,"byte_end":423349,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423350,"byte_end":423391,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423392,"byte_end":423443,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423444,"byte_end":423447,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423448,"byte_end":423491,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423492,"byte_end":423539,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423540,"byte_end":423543,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423544,"byte_end":423601,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423602,"byte_end":423628,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423629,"byte_end":423632,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423633,"byte_end":423658,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423659,"byte_end":423712,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423713,"byte_end":423772,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":423773,"byte_end":423780,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10806},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424142,"byte_end":424149,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10812},{"krate":0,"index":10810},{"krate":0,"index":10811}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424063,"byte_end":424130,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424031,"byte_end":424045,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10842},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424142,"byte_end":424149,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"__CopyBuf","qualname":"::io::copy_buf::_::__CopyBuf","value":"__CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10847},{"krate":0,"index":10848},{"krate":0,"index":10849}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424031,"byte_end":424045,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10877},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426062,"byte_end":426068,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":10879}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425287,"byte_end":425350,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425351,"byte_end":425384,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425385,"byte_end":425388,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425389,"byte_end":425457,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425458,"byte_end":425540,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425541,"byte_end":425620,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425621,"byte_end":425646,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425647,"byte_end":425650,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425651,"byte_end":425725,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425726,"byte_end":425793,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425794,"byte_end":425827,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425828,"byte_end":425831,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425832,"byte_end":425871,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425872,"byte_end":425911,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425912,"byte_end":425953,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":425954,"byte_end":426017,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426648,"byte_end":426651,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426127,"byte_end":426202,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426207,"byte_end":426210,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426215,"byte_end":426289,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426294,"byte_end":426362,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426367,"byte_end":426405,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426410,"byte_end":426413,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426418,"byte_end":426432,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426437,"byte_end":426440,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426445,"byte_end":426452,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426457,"byte_end":426485,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426490,"byte_end":426493,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426498,"byte_end":426537,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426542,"byte_end":426590,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426595,"byte_end":426624,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426629,"byte_end":426636,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427103,"byte_end":427113,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426758,"byte_end":426815,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426820,"byte_end":426823,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426828,"byte_end":426842,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426847,"byte_end":426850,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426855,"byte_end":426862,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426867,"byte_end":426895,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426900,"byte_end":426903,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426908,"byte_end":426947,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426952,"byte_end":427000,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427005,"byte_end":427034,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427039,"byte_end":427042,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427047,"byte_end":427079,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427084,"byte_end":427091,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427521,"byte_end":427528,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427170,"byte_end":427230,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427235,"byte_end":427238,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427243,"byte_end":427257,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427262,"byte_end":427265,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427270,"byte_end":427277,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427282,"byte_end":427310,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427315,"byte_end":427318,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427323,"byte_end":427362,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427367,"byte_end":427415,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427420,"byte_end":427449,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427454,"byte_end":427457,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427462,"byte_end":427497,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427502,"byte_end":427509,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428100,"byte_end":428107,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427584,"byte_end":427652,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427657,"byte_end":427660,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427665,"byte_end":427738,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427743,"byte_end":427805,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427810,"byte_end":427813,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427818,"byte_end":427832,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427837,"byte_end":427840,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427845,"byte_end":427852,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427857,"byte_end":427885,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427890,"byte_end":427893,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427898,"byte_end":427941,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427946,"byte_end":427994,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":427999,"byte_end":428028,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428033,"byte_end":428036,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428041,"byte_end":428076,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428081,"byte_end":428088,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428765,"byte_end":428773,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428171,"byte_end":428219,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428224,"byte_end":428227,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428232,"byte_end":428246,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428251,"byte_end":428254,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428259,"byte_end":428266,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428271,"byte_end":428312,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428317,"byte_end":428371,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428376,"byte_end":428379,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428384,"byte_end":428436,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428441,"byte_end":428444,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428449,"byte_end":428484,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428489,"byte_end":428492,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428497,"byte_end":428540,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428545,"byte_end":428580,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428585,"byte_end":428588,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428593,"byte_end":428637,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428642,"byte_end":428677,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428682,"byte_end":428741,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428746,"byte_end":428753,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429241,"byte_end":429253,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428831,"byte_end":428868,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428873,"byte_end":428876,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428881,"byte_end":428895,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428900,"byte_end":428903,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428908,"byte_end":428915,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428920,"byte_end":428948,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428953,"byte_end":428956,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":428961,"byte_end":429013,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429018,"byte_end":429021,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429026,"byte_end":429061,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429066,"byte_end":429069,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429074,"byte_end":429099,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429104,"byte_end":429139,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429144,"byte_end":429147,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429152,"byte_end":429177,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429182,"byte_end":429217,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429222,"byte_end":429229,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3115},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432034,"byte_end":432039,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3116}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":431933,"byte_end":431973,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":431974,"byte_end":432022,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3117},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432599,"byte_end":432604,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432060,"byte_end":432107,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432108,"byte_end":432111,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432112,"byte_end":432184,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432185,"byte_end":432188,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432189,"byte_end":432203,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432204,"byte_end":432207,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432208,"byte_end":432273,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432274,"byte_end":432277,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432278,"byte_end":432285,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432286,"byte_end":432327,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432328,"byte_end":432370,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432371,"byte_end":432374,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432375,"byte_end":432410,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432411,"byte_end":432444,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432445,"byte_end":432491,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432492,"byte_end":432523,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432524,"byte_end":432583,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432584,"byte_end":432591,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10905},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433672,"byte_end":433679,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":10908}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433502,"byte_end":433575,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433593,"byte_end":433660,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10913},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435454,"byte_end":435459,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10916}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435292,"byte_end":435357,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435375,"byte_end":435442,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10921},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436335,"byte_end":436340,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10926},{"krate":0,"index":10923},{"krate":0,"index":10924},{"krate":0,"index":10925}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436275,"byte_end":436323,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436243,"byte_end":436257,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10950},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436335,"byte_end":436340,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"__Lines","qualname":"::io::lines::_::__Lines","value":"__Lines {  }","parent":null,"children":[{"krate":0,"index":10953},{"krate":0,"index":10954}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436243,"byte_end":436257,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10972},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437570,"byte_end":437574,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10975},{"krate":0,"index":10976}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437411,"byte_end":437473,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437491,"byte_end":437558,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438466,"byte_end":438478,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":10984},{"krate":0,"index":10985}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438289,"byte_end":438369,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438387,"byte_end":438454,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10990},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439419,"byte_end":439428,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10993},{"krate":0,"index":10994}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439248,"byte_end":439322,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439340,"byte_end":439407,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440747,"byte_end":440755,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":11002},{"krate":0,"index":11003},{"krate":0,"index":11004},{"krate":0,"index":11005}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440575,"byte_end":440650,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440668,"byte_end":440735,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11010},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442596,"byte_end":442605,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":11013},{"krate":0,"index":11014},{"krate":0,"index":11015}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442423,"byte_end":442499,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442517,"byte_end":442584,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11020},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445337,"byte_end":445349,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":11023},{"krate":0,"index":11024},{"krate":0,"index":11025},{"krate":0,"index":11026}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445158,"byte_end":445240,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445258,"byte_end":445325,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11031},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447267,"byte_end":447276,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":11034},{"krate":0,"index":11035},{"krate":0,"index":11036},{"krate":0,"index":11037}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447093,"byte_end":447170,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447188,"byte_end":447255,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3358},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449030,"byte_end":449036,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3359}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":448928,"byte_end":448969,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":448970,"byte_end":449018,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3360},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449593,"byte_end":449599,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449056,"byte_end":449125,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449126,"byte_end":449129,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449130,"byte_end":449210,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449211,"byte_end":449230,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449231,"byte_end":449234,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449235,"byte_end":449249,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449250,"byte_end":449253,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449254,"byte_end":449261,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449262,"byte_end":449303,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449304,"byte_end":449346,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449347,"byte_end":449350,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449351,"byte_end":449379,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449380,"byte_end":449419,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449420,"byte_end":449470,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449471,"byte_end":449517,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449518,"byte_end":449577,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449578,"byte_end":449585,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11042},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":450871,"byte_end":450875,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11045},{"krate":0,"index":11046}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":450708,"byte_end":450774,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":450792,"byte_end":450859,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451645,"byte_end":451649,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3401}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451545,"byte_end":451584,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451585,"byte_end":451633,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3402},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452257,"byte_end":452261,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451670,"byte_end":451747,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451748,"byte_end":451751,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451752,"byte_end":451847,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451848,"byte_end":451905,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451906,"byte_end":451909,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451910,"byte_end":451924,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451925,"byte_end":451928,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451929,"byte_end":451940,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451941,"byte_end":451982,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":451983,"byte_end":452026,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452027,"byte_end":452030,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452031,"byte_end":452068,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452069,"byte_end":452101,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452102,"byte_end":452151,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452152,"byte_end":452181,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452182,"byte_end":452241,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452242,"byte_end":452249,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11051},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":453423,"byte_end":453431,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":11053}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":453326,"byte_end":453394,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":11057},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":453560,"byte_end":453569,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":11059}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":453463,"byte_end":453531,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454315,"byte_end":454322,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454069,"byte_end":454146,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454151,"byte_end":454222,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454227,"byte_end":454303,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454822,"byte_end":454829,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454576,"byte_end":454653,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454658,"byte_end":454729,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454734,"byte_end":454810,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3457},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456341,"byte_end":456353,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456185,"byte_end":456260,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456261,"byte_end":456329,"line_start":93,"line_end":93,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456357,"byte_end":456372,"line_start":94,"line_end":94,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3461},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456374,"byte_end":456390,"line_start":94,"line_end":94,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":3457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11063},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457279,"byte_end":457283,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11066},{"krate":0,"index":11065}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457200,"byte_end":457267,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457168,"byte_end":457182,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11086},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457279,"byte_end":457283,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::io::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":11089},{"krate":0,"index":11090}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457168,"byte_end":457182,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458274,"byte_end":458279,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457521,"byte_end":457574,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457579,"byte_end":457625,"line_start":26,"line_end":26,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457630,"byte_end":457633,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457638,"byte_end":457648,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457653,"byte_end":457656,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457661,"byte_end":457738,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457743,"byte_end":457812,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457817,"byte_end":457820,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457825,"byte_end":457839,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457844,"byte_end":457847,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457852,"byte_end":457859,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457864,"byte_end":457905,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457910,"byte_end":457954,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457959,"byte_end":457962,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457967,"byte_end":458014,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458019,"byte_end":458047,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458052,"byte_end":458055,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458060,"byte_end":458094,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458099,"byte_end":458141,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458146,"byte_end":458149,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458154,"byte_end":458186,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458191,"byte_end":458250,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458255,"byte_end":458262,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459191,"byte_end":459200,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458327,"byte_end":458398,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458403,"byte_end":458477,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458482,"byte_end":458557,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458562,"byte_end":458586,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458591,"byte_end":458594,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458599,"byte_end":458613,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458618,"byte_end":458621,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458626,"byte_end":458633,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458638,"byte_end":458679,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458684,"byte_end":458728,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458733,"byte_end":458736,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458741,"byte_end":458788,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458793,"byte_end":458821,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458826,"byte_end":458829,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458834,"byte_end":458868,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458873,"byte_end":458915,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458920,"byte_end":458923,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458928,"byte_end":458949,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458954,"byte_end":458986,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458991,"byte_end":458994,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":458999,"byte_end":459022,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459027,"byte_end":459069,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459074,"byte_end":459095,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459100,"byte_end":459103,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459108,"byte_end":459167,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459172,"byte_end":459179,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11112},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461763,"byte_end":461769,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":11114},{"krate":0,"index":11115}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":460808,"byte_end":460855,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":460856,"byte_end":460859,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":460860,"byte_end":460936,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":460937,"byte_end":461015,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461016,"byte_end":461092,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461093,"byte_end":461168,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461169,"byte_end":461242,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461243,"byte_end":461274,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461275,"byte_end":461278,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461279,"byte_end":461350,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461351,"byte_end":461430,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461431,"byte_end":461458,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461459,"byte_end":461462,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461463,"byte_end":461537,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461538,"byte_end":461612,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461613,"byte_end":461692,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461693,"byte_end":461734,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462078,"byte_end":462081,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461854,"byte_end":461925,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461930,"byte_end":461940,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461945,"byte_end":461948,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461953,"byte_end":462027,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462032,"byte_end":462066,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462293,"byte_end":462300,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462196,"byte_end":462263,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462268,"byte_end":462281,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462445,"byte_end":462452,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462347,"byte_end":462415,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462420,"byte_end":462433,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462583,"byte_end":462593,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462511,"byte_end":462571,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462734,"byte_end":462739,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462637,"byte_end":462709,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462714,"byte_end":462722,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462886,"byte_end":462889,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462794,"byte_end":462861,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462866,"byte_end":462874,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463335,"byte_end":463338,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":462942,"byte_end":463002,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463007,"byte_end":463010,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463015,"byte_end":463027,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463032,"byte_end":463035,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463040,"byte_end":463113,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463118,"byte_end":463195,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463200,"byte_end":463203,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463208,"byte_end":463265,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463270,"byte_end":463323,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11119},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464525,"byte_end":464530,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":11122},{"krate":0,"index":11123}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464363,"byte_end":464428,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464446,"byte_end":464513,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11128},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465421,"byte_end":465434,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":11131},{"krate":0,"index":11132}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465241,"byte_end":465324,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465342,"byte_end":465409,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11137},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466368,"byte_end":466376,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":11140},{"krate":0,"index":11141}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466198,"byte_end":466271,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466289,"byte_end":466356,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3581},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375103,"byte_end":375115,"line_start":140,"line_end":140,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3595}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375021,"byte_end":375092,"line_start":139,"line_end":139,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375968,"byte_end":375973,"line_start":164,"line_end":164,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375133,"byte_end":375198,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375203,"byte_end":375206,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375211,"byte_end":375291,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375296,"byte_end":375368,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375373,"byte_end":375394,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375399,"byte_end":375402,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375407,"byte_end":375421,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375426,"byte_end":375429,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375434,"byte_end":375441,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375446,"byte_end":375487,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375492,"byte_end":375536,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375541,"byte_end":375544,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375549,"byte_end":375593,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375598,"byte_end":375642,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375647,"byte_end":375650,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375655,"byte_end":375699,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375704,"byte_end":375736,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375741,"byte_end":375744,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375749,"byte_end":375782,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375787,"byte_end":375830,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375835,"byte_end":375884,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375889,"byte_end":375948,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375953,"byte_end":375960,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377013,"byte_end":377017,"line_start":196,"line_end":196,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376111,"byte_end":376185,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376190,"byte_end":376226,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376231,"byte_end":376234,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376239,"byte_end":376317,"line_start":175,"line_end":175,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376322,"byte_end":376349,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376354,"byte_end":376357,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376362,"byte_end":376376,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376381,"byte_end":376384,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376389,"byte_end":376396,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376401,"byte_end":376442,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376447,"byte_end":376491,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376496,"byte_end":376499,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376504,"byte_end":376551,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376556,"byte_end":376586,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376591,"byte_end":376594,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376599,"byte_end":376651,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376656,"byte_end":376659,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376664,"byte_end":376735,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376740,"byte_end":376804,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376809,"byte_end":376854,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376859,"byte_end":376884,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376889,"byte_end":376929,"line_start":193,"line_end":193,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376934,"byte_end":376993,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":376998,"byte_end":377005,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377384,"byte_end":377397,"line_start":207,"line_end":207,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377146,"byte_end":377230,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377235,"byte_end":377253,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377258,"byte_end":377261,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377266,"byte_end":377344,"line_start":205,"line_end":205,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377349,"byte_end":377376,"line_start":206,"line_end":206,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378769,"byte_end":378779,"line_start":250,"line_end":250,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377556,"byte_end":377628,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377633,"byte_end":377691,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377696,"byte_end":377699,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377704,"byte_end":377778,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377783,"byte_end":377786,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377791,"byte_end":377868,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377873,"byte_end":377895,"line_start":219,"line_end":219,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377900,"byte_end":377903,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377908,"byte_end":377922,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377927,"byte_end":377930,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377935,"byte_end":377942,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377947,"byte_end":377988,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":377993,"byte_end":378037,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378042,"byte_end":378045,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378050,"byte_end":378097,"line_start":227,"line_end":227,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378102,"byte_end":378132,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378137,"byte_end":378140,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378145,"byte_end":378187,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378192,"byte_end":378195,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378200,"byte_end":378237,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378242,"byte_end":378301,"line_start":233,"line_end":233,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378306,"byte_end":378313,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378318,"byte_end":378321,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378326,"byte_end":378366,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378371,"byte_end":378374,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378379,"byte_end":378386,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378391,"byte_end":378432,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378437,"byte_end":378487,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378492,"byte_end":378495,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378500,"byte_end":378547,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378552,"byte_end":378582,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378587,"byte_end":378590,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378595,"byte_end":378649,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378654,"byte_end":378657,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378662,"byte_end":378735,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378740,"byte_end":378749,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378754,"byte_end":378761,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379571,"byte_end":379582,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":378941,"byte_end":379014,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379019,"byte_end":379022,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379027,"byte_end":379085,"line_start":261,"line_end":261,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379090,"byte_end":379093,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379098,"byte_end":379112,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379117,"byte_end":379120,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379125,"byte_end":379132,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379137,"byte_end":379178,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379183,"byte_end":379227,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379232,"byte_end":379235,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379240,"byte_end":379287,"line_start":269,"line_end":269,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379292,"byte_end":379335,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379340,"byte_end":379343,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379348,"byte_end":379403,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379408,"byte_end":379411,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379416,"byte_end":379441,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379446,"byte_end":379487,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379492,"byte_end":379551,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379556,"byte_end":379563,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380387,"byte_end":380401,"line_start":306,"line_end":306,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379747,"byte_end":379820,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379825,"byte_end":379828,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379833,"byte_end":379891,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379896,"byte_end":379899,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379904,"byte_end":379918,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379923,"byte_end":379926,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379931,"byte_end":379938,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379943,"byte_end":379984,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":379989,"byte_end":380033,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380038,"byte_end":380041,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380046,"byte_end":380093,"line_start":297,"line_end":297,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380098,"byte_end":380144,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380149,"byte_end":380152,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380157,"byte_end":380215,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380220,"byte_end":380223,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380228,"byte_end":380253,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380258,"byte_end":380303,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380308,"byte_end":380367,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380372,"byte_end":380379,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381728,"byte_end":381733,"line_start":344,"line_end":344,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380571,"byte_end":380642,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380647,"byte_end":380650,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380655,"byte_end":380725,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380730,"byte_end":380755,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380760,"byte_end":380763,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380768,"byte_end":380782,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380787,"byte_end":380790,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380795,"byte_end":380802,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380807,"byte_end":380848,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380853,"byte_end":380903,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380908,"byte_end":380911,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380916,"byte_end":380986,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":380991,"byte_end":381061,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381066,"byte_end":381117,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381122,"byte_end":381125,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381130,"byte_end":381173,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381178,"byte_end":381241,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381246,"byte_end":381293,"line_start":332,"line_end":332,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381298,"byte_end":381301,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381306,"byte_end":381311,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381316,"byte_end":381387,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381392,"byte_end":381444,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381449,"byte_end":381501,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381506,"byte_end":381511,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381516,"byte_end":381519,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381524,"byte_end":381586,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381591,"byte_end":381644,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381649,"byte_end":381708,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381713,"byte_end":381720,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382454,"byte_end":382458,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3581},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381861,"byte_end":381931,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381936,"byte_end":381967,"line_start":351,"line_end":351,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381972,"byte_end":381975,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381980,"byte_end":381994,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":381999,"byte_end":382002,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382007,"byte_end":382014,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382019,"byte_end":382060,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382065,"byte_end":382109,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382114,"byte_end":382117,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382122,"byte_end":382169,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382174,"byte_end":382202,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382207,"byte_end":382210,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382215,"byte_end":382249,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382254,"byte_end":382296,"line_start":363,"line_end":363,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382301,"byte_end":382304,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382309,"byte_end":382330,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382335,"byte_end":382370,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382375,"byte_end":382434,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":382439,"byte_end":382446,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3598},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383245,"byte_end":383258,"line_start":393,"line_end":393,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383162,"byte_end":383234,"line_start":392,"line_end":392,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383999,"byte_end":384004,"line_start":416,"line_end":416,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383277,"byte_end":383342,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383347,"byte_end":383350,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383355,"byte_end":383369,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383374,"byte_end":383377,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383382,"byte_end":383389,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383394,"byte_end":383435,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383440,"byte_end":383489,"line_start":400,"line_end":400,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383494,"byte_end":383531,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383536,"byte_end":383539,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383544,"byte_end":383578,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383583,"byte_end":383586,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383591,"byte_end":383596,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383601,"byte_end":383647,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383652,"byte_end":383719,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383724,"byte_end":383767,"line_start":408,"line_end":408,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383772,"byte_end":383815,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383820,"byte_end":383852,"line_start":410,"line_end":410,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383857,"byte_end":383862,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383867,"byte_end":383870,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383875,"byte_end":383915,"line_start":413,"line_end":413,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383920,"byte_end":383979,"line_start":414,"line_end":414,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383984,"byte_end":383991,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384177,"byte_end":384182,"line_start":423,"line_end":423,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384104,"byte_end":384169,"line_start":422,"line_end":422,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384488,"byte_end":384493,"line_start":433,"line_end":433,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384282,"byte_end":384353,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384358,"byte_end":384361,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384366,"byte_end":384448,"line_start":431,"line_end":431,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384453,"byte_end":384480,"line_start":432,"line_end":432,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384864,"byte_end":384878,"line_start":444,"line_end":444,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384620,"byte_end":384706,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384711,"byte_end":384729,"line_start":440,"line_end":440,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384734,"byte_end":384737,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384742,"byte_end":384824,"line_start":442,"line_end":442,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":384829,"byte_end":384856,"line_start":443,"line_end":443,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385685,"byte_end":385694,"line_start":470,"line_end":470,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385032,"byte_end":385064,"line_start":450,"line_end":450,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385069,"byte_end":385072,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385077,"byte_end":385158,"line_start":452,"line_end":452,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385163,"byte_end":385185,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385190,"byte_end":385193,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385198,"byte_end":385276,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385281,"byte_end":385284,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385289,"byte_end":385303,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385308,"byte_end":385311,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385316,"byte_end":385323,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385328,"byte_end":385369,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385374,"byte_end":385419,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385424,"byte_end":385427,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385432,"byte_end":385479,"line_start":463,"line_end":463,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385484,"byte_end":385487,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385492,"byte_end":385535,"line_start":465,"line_end":465,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385540,"byte_end":385543,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385548,"byte_end":385601,"line_start":467,"line_end":467,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385606,"byte_end":385665,"line_start":468,"line_end":468,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":385670,"byte_end":385677,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3609},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389430,"byte_end":389442,"line_start":580,"line_end":580,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3610}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389348,"byte_end":389419,"line_start":579,"line_end":579,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389712,"byte_end":389716,"line_start":586,"line_end":586,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389460,"byte_end":389529,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389534,"byte_end":389587,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389592,"byte_end":389595,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389600,"byte_end":389677,"line_start":584,"line_end":584,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389682,"byte_end":389704,"line_start":585,"line_end":585,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389968,"byte_end":389983,"line_start":596,"line_end":596,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389883,"byte_end":389957,"line_start":595,"line_end":595,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390937,"byte_end":390945,"line_start":620,"line_end":620,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390004,"byte_end":390093,"line_start":597,"line_end":597,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390098,"byte_end":390130,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390135,"byte_end":390138,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390143,"byte_end":390236,"line_start":600,"line_end":600,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390241,"byte_end":390244,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390249,"byte_end":390260,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390265,"byte_end":390306,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390311,"byte_end":390390,"line_start":604,"line_end":604,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390395,"byte_end":390398,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390403,"byte_end":390491,"line_start":606,"line_end":606,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390496,"byte_end":390499,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390504,"byte_end":390560,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390565,"byte_end":390593,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390598,"byte_end":390601,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390606,"byte_end":390656,"line_start":611,"line_end":611,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390661,"byte_end":390689,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390694,"byte_end":390697,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390702,"byte_end":390758,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390763,"byte_end":390791,"line_start":615,"line_end":615,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390796,"byte_end":390799,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390804,"byte_end":390853,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390858,"byte_end":390917,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":390922,"byte_end":390929,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391707,"byte_end":391720,"line_start":643,"line_end":643,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391049,"byte_end":391127,"line_start":626,"line_end":626,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391132,"byte_end":391135,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391140,"byte_end":391151,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391156,"byte_end":391197,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391202,"byte_end":391281,"line_start":630,"line_end":630,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391286,"byte_end":391289,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391294,"byte_end":391363,"line_start":632,"line_end":632,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391368,"byte_end":391371,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391376,"byte_end":391432,"line_start":634,"line_end":634,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391437,"byte_end":391465,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391470,"byte_end":391473,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391478,"byte_end":391528,"line_start":637,"line_end":637,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391533,"byte_end":391561,"line_start":638,"line_end":638,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391566,"byte_end":391569,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391574,"byte_end":391623,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391628,"byte_end":391687,"line_start":641,"line_end":641,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391692,"byte_end":391699,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393407,"byte_end":393417,"line_start":690,"line_end":690,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391824,"byte_end":391899,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391904,"byte_end":391971,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":391976,"byte_end":392073,"line_start":651,"line_end":651,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392078,"byte_end":392081,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392086,"byte_end":392156,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392161,"byte_end":392235,"line_start":654,"line_end":654,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392240,"byte_end":392295,"line_start":655,"line_end":655,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392300,"byte_end":392303,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392308,"byte_end":392386,"line_start":657,"line_end":657,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392391,"byte_end":392418,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392423,"byte_end":392426,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392431,"byte_end":392508,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392513,"byte_end":392535,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392540,"byte_end":392543,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392548,"byte_end":392562,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392567,"byte_end":392570,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392575,"byte_end":392582,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392587,"byte_end":392628,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392633,"byte_end":392680,"line_start":667,"line_end":667,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392685,"byte_end":392688,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392693,"byte_end":392742,"line_start":669,"line_end":669,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392747,"byte_end":392772,"line_start":670,"line_end":670,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392777,"byte_end":392780,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392785,"byte_end":392808,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392813,"byte_end":392874,"line_start":673,"line_end":673,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392879,"byte_end":392908,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392913,"byte_end":392944,"line_start":675,"line_end":675,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392949,"byte_end":392965,"line_start":676,"line_end":676,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392970,"byte_end":392973,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":392978,"byte_end":393001,"line_start":678,"line_end":678,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393006,"byte_end":393067,"line_start":679,"line_end":679,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393072,"byte_end":393101,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393106,"byte_end":393136,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393141,"byte_end":393157,"line_start":682,"line_end":682,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393162,"byte_end":393165,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393170,"byte_end":393193,"line_start":684,"line_end":684,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393198,"byte_end":393259,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393264,"byte_end":393293,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393298,"byte_end":393323,"line_start":687,"line_end":687,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393328,"byte_end":393387,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393392,"byte_end":393399,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395588,"byte_end":395597,"line_start":751,"line_end":751,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393606,"byte_end":393681,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393686,"byte_end":393757,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393762,"byte_end":393857,"line_start":702,"line_end":702,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393862,"byte_end":393865,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393870,"byte_end":393940,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":393945,"byte_end":394020,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394025,"byte_end":394095,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394100,"byte_end":394110,"line_start":707,"line_end":707,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394115,"byte_end":394118,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394123,"byte_end":394201,"line_start":709,"line_end":709,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394206,"byte_end":394233,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394238,"byte_end":394241,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394246,"byte_end":394323,"line_start":712,"line_end":712,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394328,"byte_end":394350,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394355,"byte_end":394358,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394363,"byte_end":394375,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394380,"byte_end":394383,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394388,"byte_end":394461,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394466,"byte_end":394539,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394544,"byte_end":394618,"line_start":719,"line_end":719,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394623,"byte_end":394679,"line_start":720,"line_end":720,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394684,"byte_end":394687,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394692,"byte_end":394739,"line_start":722,"line_end":722,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394744,"byte_end":394747,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394752,"byte_end":394766,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394771,"byte_end":394774,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394779,"byte_end":394786,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394791,"byte_end":394832,"line_start":727,"line_end":727,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394837,"byte_end":394884,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394889,"byte_end":394892,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394897,"byte_end":394943,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394948,"byte_end":394980,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394985,"byte_end":394988,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":394993,"byte_end":395016,"line_start":733,"line_end":733,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395021,"byte_end":395075,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395080,"byte_end":395109,"line_start":735,"line_end":735,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395114,"byte_end":395143,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395148,"byte_end":395164,"line_start":737,"line_end":737,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395169,"byte_end":395172,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395177,"byte_end":395200,"line_start":739,"line_end":739,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395205,"byte_end":395259,"line_start":740,"line_end":740,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395264,"byte_end":395293,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395298,"byte_end":395325,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395330,"byte_end":395346,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395351,"byte_end":395354,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395359,"byte_end":395382,"line_start":745,"line_end":745,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395387,"byte_end":395441,"line_start":746,"line_end":746,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395446,"byte_end":395475,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395480,"byte_end":395504,"line_start":748,"line_end":748,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395509,"byte_end":395568,"line_start":749,"line_end":749,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395573,"byte_end":395580,"line_start":750,"line_end":750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":397082,"byte_end":397087,"line_start":789,"line_end":789,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395736,"byte_end":395787,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395792,"byte_end":395879,"line_start":758,"line_end":758,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395884,"byte_end":395887,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395892,"byte_end":395958,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":395963,"byte_end":396045,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396050,"byte_end":396110,"line_start":762,"line_end":762,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396115,"byte_end":396118,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396123,"byte_end":396158,"line_start":764,"line_end":764,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396163,"byte_end":396185,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396190,"byte_end":396193,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396198,"byte_end":396210,"line_start":767,"line_end":767,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396215,"byte_end":396218,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396223,"byte_end":396314,"line_start":769,"line_end":769,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396319,"byte_end":396322,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396327,"byte_end":396389,"line_start":771,"line_end":771,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396394,"byte_end":396397,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396402,"byte_end":396416,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396421,"byte_end":396424,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396429,"byte_end":396436,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396441,"byte_end":396482,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396487,"byte_end":396534,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396539,"byte_end":396574,"line_start":778,"line_end":778,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396579,"byte_end":396582,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396587,"byte_end":396642,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396647,"byte_end":396650,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396655,"byte_end":396717,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396722,"byte_end":396793,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396798,"byte_end":396869,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396874,"byte_end":396945,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":396950,"byte_end":396998,"line_start":786,"line_end":786,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":397003,"byte_end":397062,"line_start":787,"line_end":787,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":397067,"byte_end":397074,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467368,"byte_end":467375,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3635},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467390,"byte_end":467396,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467405,"byte_end":467414,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3643},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467606,"byte_end":467612,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467637,"byte_end":467645,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":468949,"byte_end":468953,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11164},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469309,"byte_end":469316,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11185},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470050,"byte_end":470063,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11201},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470405,"byte_end":470414,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11216},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471363,"byte_end":471370,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11231},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472081,"byte_end":472089,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11246},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472809,"byte_end":472820,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11258},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473638,"byte_end":473650,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11270},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":474731,"byte_end":474745,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475504,"byte_end":475510,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11303},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":11304},{"krate":0,"index":11454},{"krate":0,"index":11455},{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11458},{"krate":0,"index":11459},{"krate":0,"index":11517}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12554,"byte_end":12579,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8811797,"byte_end":8811844,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8811845,"byte_end":8811848,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8811849,"byte_end":8811924,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8811925,"byte_end":8811982,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11326},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813230,"byte_end":8813235,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":11328},{"krate":0,"index":11329},{"krate":0,"index":11330}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8812903,"byte_end":8812929,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8812930,"byte_end":8812933,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8812934,"byte_end":8812948,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8812949,"byte_end":8812952,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8812953,"byte_end":8813032,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813033,"byte_end":8813115,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813116,"byte_end":8813200,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813201,"byte_end":8813218,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":11353},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814564,"byte_end":8814567,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814514,"byte_end":8814552,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11354},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814999,"byte_end":8815009,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814753,"byte_end":8814808,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814813,"byte_end":8814816,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814821,"byte_end":8814835,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814840,"byte_end":8814843,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814848,"byte_end":8814855,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814860,"byte_end":8814889,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814894,"byte_end":8814897,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814902,"byte_end":8814932,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814937,"byte_end":8814975,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814980,"byte_end":8814987,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11357},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815223,"byte_end":8815231,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815095,"byte_end":8815139,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815144,"byte_end":8815147,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815152,"byte_end":8815211,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11358},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815652,"byte_end":8815656,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815487,"byte_end":8815523,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815528,"byte_end":8815531,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815536,"byte_end":8815609,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815614,"byte_end":8815640,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":11359},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816317,"byte_end":8816324,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815807,"byte_end":8815862,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815867,"byte_end":8815870,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815875,"byte_end":8815950,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815955,"byte_end":8816029,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816034,"byte_end":8816037,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816042,"byte_end":8816056,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816061,"byte_end":8816064,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816069,"byte_end":8816076,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816081,"byte_end":8816122,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816127,"byte_end":8816156,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816161,"byte_end":8816164,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816169,"byte_end":8816203,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816208,"byte_end":8816234,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816239,"byte_end":8816279,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816284,"byte_end":8816293,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8816298,"byte_end":8816305,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11363},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818047,"byte_end":8818062,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8817954,"byte_end":8818035,"line_start":182,"line_end":182,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":11382},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820676,"byte_end":8820686,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":11385}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820512,"byte_end":8820576,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820577,"byte_end":8820650,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820651,"byte_end":8820664,"line_start":261,"line_end":261,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11389},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821255,"byte_end":8821258,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820776,"byte_end":8820836,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820841,"byte_end":8820844,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820849,"byte_end":8820862,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820867,"byte_end":8820870,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820875,"byte_end":8820882,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820887,"byte_end":8820928,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820933,"byte_end":8820976,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820981,"byte_end":8820984,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820989,"byte_end":8821042,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821047,"byte_end":8821052,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821057,"byte_end":8821146,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821151,"byte_end":8821193,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821198,"byte_end":8821203,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821208,"byte_end":8821217,"line_start":280,"line_end":280,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821222,"byte_end":8821229,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821234,"byte_end":8821243,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11405},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822589,"byte_end":8822605,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":11409},{"krate":0,"index":11410},{"krate":0,"index":11411}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822405,"byte_end":8822493,"line_start":324,"line_end":324,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822494,"byte_end":8822577,"line_start":325,"line_end":325,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11416},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823371,"byte_end":8823374,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822782,"byte_end":8822842,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822847,"byte_end":8822850,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822855,"byte_end":8822868,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822873,"byte_end":8822876,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822881,"byte_end":8822888,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822893,"byte_end":8822934,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822939,"byte_end":8823000,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823005,"byte_end":8823008,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823013,"byte_end":8823066,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823071,"byte_end":8823076,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823081,"byte_end":8823170,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823175,"byte_end":8823265,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823270,"byte_end":8823309,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823314,"byte_end":8823319,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823324,"byte_end":8823333,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823338,"byte_end":8823345,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823350,"byte_end":8823359,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","byte_start":14821,"byte_end":14829,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/pending.rs","byte_start":15996,"byte_end":16007,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58170,"byte_end":58177,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58304,"byte_end":58311,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58545,"byte_end":58552,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":59331,"byte_end":59338,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":59572,"byte_end":59579,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62549,"byte_end":62553,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62655,"byte_end":62659,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64383,"byte_end":64387,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64496,"byte_end":64500,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65379,"byte_end":65382,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65557,"byte_end":65560,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65824,"byte_end":65827,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66945,"byte_end":66956,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":67110,"byte_end":67121,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68301,"byte_end":68307,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68350,"byte_end":68356,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68614,"byte_end":68619,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68846,"byte_end":68851,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68948,"byte_end":68953,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69197,"byte_end":69203,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69669,"byte_end":69675,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":70367,"byte_end":70372,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":72069,"byte_end":72075,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":72227,"byte_end":72233,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":73771,"byte_end":73776,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":75563,"byte_end":75569,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":75763,"byte_end":75769,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":76197,"byte_end":76205,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41470,"byte_end":41471,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98462,"byte_end":98472,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98637,"byte_end":98647,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98753,"byte_end":98763,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99416,"byte_end":99426,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99556,"byte_end":99566,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99819,"byte_end":99829,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":100860,"byte_end":100870,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":101123,"byte_end":101133,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104563,"byte_end":104576,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104709,"byte_end":104722,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104978,"byte_end":104991,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":81184,"byte_end":81187,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106360,"byte_end":106364,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106937,"byte_end":106941,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":107073,"byte_end":107077,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107654,"byte_end":107661,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108212,"byte_end":108219,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108364,"byte_end":108371,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108398,"byte_end":108405,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109726,"byte_end":109735,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110750,"byte_end":110759,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110975,"byte_end":110984,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112405,"byte_end":112417,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113459,"byte_end":113471,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113699,"byte_end":113711,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115235,"byte_end":115247,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115580,"byte_end":115592,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115775,"byte_end":115787,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116197,"byte_end":116203,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116873,"byte_end":116879,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":117021,"byte_end":117027,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117504,"byte_end":117509,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117688,"byte_end":117693,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117725,"byte_end":117730,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117827,"byte_end":117832,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125124,"byte_end":125131,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126894,"byte_end":126901,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":127598,"byte_end":127605,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128075,"byte_end":128081,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130323,"byte_end":130329,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":131032,"byte_end":131038,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131575,"byte_end":131584,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132564,"byte_end":132573,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":133279,"byte_end":133288,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141505,"byte_end":141515,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":143277,"byte_end":143287,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":144460,"byte_end":144470,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144952,"byte_end":144961,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146667,"byte_end":146676,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148029,"byte_end":148037,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":149007,"byte_end":149015,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":150459,"byte_end":150467,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151125,"byte_end":151131,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151516,"byte_end":151522,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151903,"byte_end":151909,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152150,"byte_end":152156,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152503,"byte_end":152509,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152785,"byte_end":152791,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":153151,"byte_end":153157,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":154935,"byte_end":154941,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":156012,"byte_end":156018,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":157357,"byte_end":157363,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":157801,"byte_end":157807,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703359,"byte_end":8703368,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6775}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704670,"byte_end":8704681,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6777}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706557,"byte_end":8706564,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6781}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706747,"byte_end":8706754,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706780,"byte_end":8706789,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6785},{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707763,"byte_end":8707774,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209630,"byte_end":209635,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209904,"byte_end":209909,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":210114,"byte_end":210119,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211668,"byte_end":211675,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211986,"byte_end":211993,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":212169,"byte_end":212176,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":213068,"byte_end":213074,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":213349,"byte_end":213355,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":214130,"byte_end":214136,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214805,"byte_end":214814,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":215047,"byte_end":215056,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":215174,"byte_end":215183,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216567,"byte_end":216573,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217046,"byte_end":217052,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217446,"byte_end":217452,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217801,"byte_end":217807,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219956,"byte_end":219965,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220262,"byte_end":220271,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":7169},{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7172}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220572,"byte_end":220581,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220858,"byte_end":220867,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222944,"byte_end":222951,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":223120,"byte_end":223127,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":223319,"byte_end":223326,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224768,"byte_end":224772,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225128,"byte_end":225132,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225465,"byte_end":225469,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225716,"byte_end":225720,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227253,"byte_end":227260,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227553,"byte_end":227560,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227854,"byte_end":227861,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":228112,"byte_end":228119,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229168,"byte_end":229172,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7488}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229673,"byte_end":229677,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229775,"byte_end":229779,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":230979,"byte_end":230991,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233501,"byte_end":233513,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233633,"byte_end":233645,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234493,"byte_end":234496,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234711,"byte_end":234714,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":7624},{"krate":0,"index":7625},{"krate":0,"index":7626},{"krate":0,"index":7627}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234888,"byte_end":234891,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":235065,"byte_end":235068,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236215,"byte_end":236219,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236270,"byte_end":236274,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236425,"byte_end":236429,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236568,"byte_end":236572,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237221,"byte_end":237235,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237396,"byte_end":237410,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237554,"byte_end":237568,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238743,"byte_end":238751,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":7782},{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239940,"byte_end":239948,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":240090,"byte_end":240098,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241256,"byte_end":241260,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241531,"byte_end":241535,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241646,"byte_end":241650,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242496,"byte_end":242500,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7882},{"krate":0,"index":7883}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242728,"byte_end":242732,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242850,"byte_end":242854,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244481,"byte_end":244490,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244942,"byte_end":244951,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":245380,"byte_end":245389,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":245649,"byte_end":245658,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247941,"byte_end":247945,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":8005},{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8008}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":248155,"byte_end":248159,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":249153,"byte_end":249157,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250104,"byte_end":250113,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250561,"byte_end":250570,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":8081},{"krate":0,"index":8082},{"krate":0,"index":8083},{"krate":0,"index":8084}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250992,"byte_end":251001,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":252555,"byte_end":252564,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253876,"byte_end":253885,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254212,"byte_end":254221,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":8144},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256414,"byte_end":256423,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":257455,"byte_end":257464,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258338,"byte_end":258342,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258632,"byte_end":258636,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8217}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258945,"byte_end":258949,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":259187,"byte_end":259191,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261057,"byte_end":261060,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262711,"byte_end":262714,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262905,"byte_end":262908,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265552,"byte_end":265558,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":8329},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":266069,"byte_end":266075,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":267713,"byte_end":267719,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268648,"byte_end":268659,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":8381},{"krate":0,"index":8382},{"krate":0,"index":8383},{"krate":0,"index":8384}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":269024,"byte_end":269035,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":271143,"byte_end":271154,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272084,"byte_end":272088,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272574,"byte_end":272578,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272742,"byte_end":272746,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":273213,"byte_end":273217,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":274444,"byte_end":274448,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724448,"byte_end":8724463,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8482}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724795,"byte_end":8724810,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8485},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8561}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8725223,"byte_end":8725238,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8488},{"krate":0,"index":8489},{"krate":0,"index":8490}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8726715,"byte_end":8726730,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8493}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727760,"byte_end":8727768,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8728115,"byte_end":8728123,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8513},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8565}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8728460,"byte_end":8728468,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8516},{"krate":0,"index":8517},{"krate":0,"index":8518}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730780,"byte_end":8730797,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8539}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731143,"byte_end":8731160,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8544}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731631,"byte_end":8731648,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8549}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731890,"byte_end":8731907,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8554},{"krate":0,"index":8555}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275430,"byte_end":275441,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275651,"byte_end":275662,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":276570,"byte_end":276581,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167639,"byte_end":167640,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310193,"byte_end":310200,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310493,"byte_end":310500,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8683},{"krate":0,"index":8684}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310793,"byte_end":310800,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":311978,"byte_end":311985,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312880,"byte_end":312890,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":313089,"byte_end":313099,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":313220,"byte_end":313230,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314284,"byte_end":314290,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314582,"byte_end":314588,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9184},{"krate":0,"index":9185}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314878,"byte_end":314884,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":316197,"byte_end":316203,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317119,"byte_end":317126,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317180,"byte_end":317187,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317353,"byte_end":317360,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317502,"byte_end":317509,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318240,"byte_end":318250,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318546,"byte_end":318556,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318870,"byte_end":318880,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320207,"byte_end":320216,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320612,"byte_end":320621,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9331},{"krate":0,"index":9332}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320925,"byte_end":320934,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":321203,"byte_end":321212,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323318,"byte_end":323330,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323630,"byte_end":323642,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":9399},{"krate":0,"index":9400},{"krate":0,"index":9401},{"krate":0,"index":9402}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323847,"byte_end":323859,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":324149,"byte_end":324161,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326269,"byte_end":326279,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326544,"byte_end":326554,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326800,"byte_end":326810,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328355,"byte_end":328365,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328557,"byte_end":328567,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328755,"byte_end":328765,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329722,"byte_end":329731,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329997,"byte_end":330006,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331197,"byte_end":331204,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331563,"byte_end":331570,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331928,"byte_end":331935,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":332201,"byte_end":332208,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335976,"byte_end":335985,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":336286,"byte_end":336295,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337984,"byte_end":337996,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":338452,"byte_end":338464,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":9770},{"krate":0,"index":9771},{"krate":0,"index":9772},{"krate":0,"index":9773}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":338913,"byte_end":338925,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":340428,"byte_end":340440,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341588,"byte_end":341600,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":342052,"byte_end":342064,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":9846},{"krate":0,"index":9847},{"krate":0,"index":9848},{"krate":0,"index":9849}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":342499,"byte_end":342511,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":344087,"byte_end":344099,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745773,"byte_end":8745791,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9870},{"krate":0,"index":9915},{"krate":0,"index":9916},{"krate":0,"index":9917},{"krate":0,"index":9918}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8746150,"byte_end":8746168,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9873},{"krate":0,"index":9874}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748317,"byte_end":8748337,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9896}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748702,"byte_end":8748722,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9901}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748973,"byte_end":8748993,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9906}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8749485,"byte_end":8749505,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9911},{"krate":0,"index":9912}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345218,"byte_end":345231,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345447,"byte_end":345460,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345714,"byte_end":345727,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":347595,"byte_end":347608,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":348270,"byte_end":348283,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281399,"byte_end":281400,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350393,"byte_end":350397,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":351003,"byte_end":351007,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352141,"byte_end":352147,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352174,"byte_end":352180,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352487,"byte_end":352493,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353105,"byte_end":353110,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353142,"byte_end":353147,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353232,"byte_end":353237,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354227,"byte_end":354231,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354360,"byte_end":354364,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354969,"byte_end":354973,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355583,"byte_end":355590,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355622,"byte_end":355629,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355714,"byte_end":355721,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356246,"byte_end":356252,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356283,"byte_end":356289,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":357031,"byte_end":357037,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358392,"byte_end":358398,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359821,"byte_end":359827,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2699}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":360045,"byte_end":360051,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363324,"byte_end":363330,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363633,"byte_end":363639,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363865,"byte_end":363871,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8753966,"byte_end":8753978,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10152}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754083,"byte_end":8754095,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754126,"byte_end":8754138,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10157}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754261,"byte_end":8754273,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10160}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754454,"byte_end":8754466,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10163},{"krate":0,"index":10164}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757083,"byte_end":8757097,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757123,"byte_end":8757137,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10176},{"krate":0,"index":10177},{"krate":0,"index":10178},{"krate":0,"index":10179}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758761,"byte_end":8758775,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10182}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758893,"byte_end":8758907,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10186},{"krate":0,"index":10187}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760091,"byte_end":8760105,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10190}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760271,"byte_end":8760285,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10193}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760543,"byte_end":8760557,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10198}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760727,"byte_end":8760741,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10201}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/abort.rs","byte_start":8786937,"byte_end":8786948,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10245}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8788120,"byte_end":8788130,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10255},{"krate":0,"index":10256},{"krate":0,"index":10257}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8788987,"byte_end":8788997,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789045,"byte_end":8789052,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10263},{"krate":0,"index":10264},{"krate":0,"index":10265}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789316,"byte_end":8789323,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789364,"byte_end":8789374,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10271},{"krate":0,"index":10272},{"krate":0,"index":10273}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790291,"byte_end":8790301,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790349,"byte_end":8790353,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10279},{"krate":0,"index":10280},{"krate":0,"index":10281}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790609,"byte_end":8790613,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792102,"byte_end":8792106,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792141,"byte_end":8792145,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792177,"byte_end":8792181,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10321}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8793258,"byte_end":8793262,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10324},{"krate":0,"index":10325}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8794267,"byte_end":8794271,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10328}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8795721,"byte_end":8795736,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10360},{"krate":0,"index":10361},{"krate":0,"index":10362}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8797586,"byte_end":8797601,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10365}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763987,"byte_end":8764003,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764044,"byte_end":8764060,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764089,"byte_end":8764105,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764130,"byte_end":8764146,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10382}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764343,"byte_end":8764359,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10384}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766078,"byte_end":8766094,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10387}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766197,"byte_end":8766213,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10390},{"krate":0,"index":10391},{"krate":0,"index":10392},{"krate":0,"index":10393},{"krate":0,"index":10394},{"krate":0,"index":10395},{"krate":0,"index":10396},{"krate":0,"index":10397},{"krate":0,"index":10398},{"krate":0,"index":10399},{"krate":0,"index":10400},{"krate":0,"index":10401},{"krate":0,"index":10402}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8777873,"byte_end":8777889,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10405},{"krate":0,"index":10406},{"krate":0,"index":10415}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8782286,"byte_end":8782290,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10414}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8784628,"byte_end":8784644,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10418}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8784791,"byte_end":8784807,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10421}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786247,"byte_end":8786263,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10424}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786519,"byte_end":8786535,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10429}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786657,"byte_end":8786673,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10432}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799418,"byte_end":8799427,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10456}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799572,"byte_end":8799581,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10459},{"krate":0,"index":10460},{"krate":0,"index":10461},{"krate":0,"index":10462}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800631,"byte_end":8800640,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10465}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800753,"byte_end":8800762,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10468},{"krate":0,"index":10469}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801569,"byte_end":8801578,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10472}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802554,"byte_end":8802563,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10477}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802708,"byte_end":8802717,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10481}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365714,"byte_end":365716,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365771,"byte_end":365773,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398163,"byte_end":398173,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398610,"byte_end":398620,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399137,"byte_end":399147,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399687,"byte_end":399697,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":400446,"byte_end":400456,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401176,"byte_end":401186,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401774,"byte_end":401784,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401923,"byte_end":401933,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":402171,"byte_end":402181,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":402392,"byte_end":402402,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404112,"byte_end":404121,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":10616},{"krate":0,"index":10617},{"krate":0,"index":10618},{"krate":0,"index":10619},{"krate":0,"index":2901},{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":405343,"byte_end":405352,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":406964,"byte_end":406973,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":407826,"byte_end":407835,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10620},{"krate":0,"index":10621},{"krate":0,"index":10622},{"krate":0,"index":10623}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":407913,"byte_end":407922,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":408238,"byte_end":408247,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412055,"byte_end":412064,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":10669},{"krate":0,"index":10670},{"krate":0,"index":10671},{"krate":0,"index":10672},{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":413638,"byte_end":413647,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415070,"byte_end":415079,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10673},{"krate":0,"index":10674}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415160,"byte_end":415169,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10675},{"krate":0,"index":10676}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415250,"byte_end":415259,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415618,"byte_end":415627,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416496,"byte_end":416501,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417802,"byte_end":417807,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":418137,"byte_end":418142,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":419495,"byte_end":419500,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420611,"byte_end":420616,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420669,"byte_end":420674,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420817,"byte_end":420822,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422570,"byte_end":422574,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424258,"byte_end":424265,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426111,"byte_end":426117,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429345,"byte_end":429351,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429638,"byte_end":429644,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":430276,"byte_end":430282,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431431,"byte_end":431437,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10889},{"krate":0,"index":10890},{"krate":0,"index":10891},{"krate":0,"index":10892}],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431512,"byte_end":431518,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10893},{"krate":0,"index":10894},{"krate":0,"index":10895},{"krate":0,"index":10896}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431596,"byte_end":431602,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10897},{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10900}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431675,"byte_end":431681,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10901},{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10904}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432664,"byte_end":432669,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":433017,"byte_end":433022,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":433254,"byte_end":433259,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433757,"byte_end":433764,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433819,"byte_end":433826,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433960,"byte_end":433967,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435537,"byte_end":435542,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435595,"byte_end":435600,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435714,"byte_end":435719,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436451,"byte_end":436456,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436676,"byte_end":436681,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437675,"byte_end":437679,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437731,"byte_end":437735,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437900,"byte_end":437904,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438592,"byte_end":438604,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438656,"byte_end":438668,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438847,"byte_end":438859,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439529,"byte_end":439538,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439590,"byte_end":439599,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439769,"byte_end":439778,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440895,"byte_end":440903,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440958,"byte_end":440966,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":441993,"byte_end":442001,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442731,"byte_end":442740,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442792,"byte_end":442801,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":443082,"byte_end":443087,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":444637,"byte_end":444646,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445494,"byte_end":445506,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445558,"byte_end":445570,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":918,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":446604,"byte_end":446616,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3323},{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":919,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447411,"byte_end":447420,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447475,"byte_end":447484,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":448456,"byte_end":448465,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":922,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449664,"byte_end":449670,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":450450,"byte_end":450456,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":450970,"byte_end":450974,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":925,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":451026,"byte_end":451030,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":926,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":451187,"byte_end":451191,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452320,"byte_end":452324,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":453042,"byte_end":453046,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454051,"byte_end":454059,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454557,"byte_end":454566,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454958,"byte_end":454966,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":455431,"byte_end":455440,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456417,"byte_end":456429,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456619,"byte_end":456631,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":935,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456865,"byte_end":456877,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457408,"byte_end":457412,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":11108},{"krate":0,"index":11109},{"krate":0,"index":11110},{"krate":0,"index":11111}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459339,"byte_end":459343,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459987,"byte_end":459991,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461838,"byte_end":461844,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":945,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463947,"byte_end":463953,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":946,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":464100,"byte_end":464106,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":947,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464627,"byte_end":464632,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":948,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464685,"byte_end":464690,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":949,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464852,"byte_end":464857,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538}],"docs":"","sig":null,"attributes":[]},{"id":950,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465541,"byte_end":465554,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":951,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465607,"byte_end":465620,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":952,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465793,"byte_end":465806,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":953,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466473,"byte_end":466481,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466534,"byte_end":466542,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466708,"byte_end":466716,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383156,"byte_end":383157,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389342,"byte_end":389343,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389877,"byte_end":389878,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":397227,"byte_end":397228,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":960,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467478,"byte_end":467479,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":961,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467713,"byte_end":467714,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":962,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467983,"byte_end":467984,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":963,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":468999,"byte_end":469003,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":964,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469097,"byte_end":469101,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3670},{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":970,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469360,"byte_end":469367,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":971,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469590,"byte_end":469597,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":972,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469788,"byte_end":469795,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":973,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470100,"byte_end":470113,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3693},{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470530,"byte_end":470539,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":980,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470821,"byte_end":470830,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":981,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471090,"byte_end":471099,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":982,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471419,"byte_end":471426,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":983,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471645,"byte_end":471652,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471830,"byte_end":471837,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":985,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472138,"byte_end":472146,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":986,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472369,"byte_end":472377,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":987,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472559,"byte_end":472567,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":988,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472877,"byte_end":472888,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":989,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473125,"byte_end":473136,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":990,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473351,"byte_end":473362,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":991,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473707,"byte_end":473719,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473957,"byte_end":473969,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":474185,"byte_end":474197,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":474794,"byte_end":474808,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475029,"byte_end":475043,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475242,"byte_end":475256,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475560,"byte_end":475566,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":998,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475661,"byte_end":475667,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813370,"byte_end":8813375,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11333}],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813708,"byte_end":8813713,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11336}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813806,"byte_end":8813811,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11339}],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813949,"byte_end":8813955,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11347},{"krate":0,"index":11348}],"docs":"","sig":null,"attributes":[]},{"id":1008,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814499,"byte_end":8814504,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11353},{"krate":0,"index":11354}],"docs":"","sig":null,"attributes":[]},{"id":1009,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815080,"byte_end":8815085,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11357},{"krate":0,"index":11358},{"krate":0,"index":11359},{"krate":0,"index":11360},{"krate":0,"index":11361}],"docs":"","sig":null,"attributes":[]},{"id":1010,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818234,"byte_end":8818249,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11370}],"docs":"","sig":null,"attributes":[]},{"id":1011,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818759,"byte_end":8818774,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11373}],"docs":"","sig":null,"attributes":[]},{"id":1012,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818891,"byte_end":8818906,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11377},{"krate":0,"index":11378}],"docs":"","sig":null,"attributes":[]},{"id":1013,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820135,"byte_end":8820150,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11381}],"docs":"","sig":null,"attributes":[]},{"id":1014,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820752,"byte_end":8820762,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11389}],"docs":"","sig":null,"attributes":[]},{"id":1015,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821774,"byte_end":8821784,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11394}],"docs":"","sig":null,"attributes":[]},{"id":1016,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822029,"byte_end":8822039,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11397}],"docs":"","sig":null,"attributes":[]},{"id":1017,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822137,"byte_end":8822147,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11400},{"krate":0,"index":11401}],"docs":"","sig":null,"attributes":[]},{"id":1018,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822288,"byte_end":8822298,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11404}],"docs":"","sig":null,"attributes":[]},{"id":1019,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822749,"byte_end":8822765,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11416}],"docs":"","sig":null,"attributes":[]},{"id":1020,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823895,"byte_end":8823911,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11422}],"docs":"","sig":null,"attributes":[]},{"id":1021,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824176,"byte_end":8824192,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11426}],"docs":"","sig":null,"attributes":[]},{"id":1022,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824304,"byte_end":8824320,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11430},{"krate":0,"index":11431}],"docs":"","sig":null,"attributes":[]},{"id":1023,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824463,"byte_end":8824479,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":11435}],"docs":"","sig":null,"attributes":[]},{"id":1024,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824756,"byte_end":8824761,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1025,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824807,"byte_end":8824812,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1026,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824979,"byte_end":8824994,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1027,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825098,"byte_end":8825113,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1028,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825317,"byte_end":8825327,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1029,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825377,"byte_end":8825387,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1030,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825455,"byte_end":8825471,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1031,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825542,"byte_end":8825558,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1032,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827562,"byte_end":8827567,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1033,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827604,"byte_end":8827609,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1034,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827625,"byte_end":8827631,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11480},{"krate":0,"index":11481},{"krate":0,"index":11483},{"krate":0,"index":11484}],"docs":"","sig":null,"attributes":[]},{"id":1035,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833316,"byte_end":8833321,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11487}],"docs":"","sig":null,"attributes":[]},{"id":1036,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833443,"byte_end":8833448,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11490}],"docs":"","sig":null,"attributes":[]},{"id":1037,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833776,"byte_end":8833788,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11498}],"docs":"","sig":null,"attributes":[]},{"id":1038,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833978,"byte_end":8833990,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11501}],"docs":"","sig":null,"attributes":[]},{"id":1039,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834211,"byte_end":8834223,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1040,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834605,"byte_end":8834616,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11506},{"krate":0,"index":11507}],"docs":"","sig":null,"attributes":[]},{"id":1041,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834779,"byte_end":8834790,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11510}],"docs":"","sig":null,"attributes":[]},{"id":1042,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834928,"byte_end":8834939,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11513}],"docs":"","sig":null,"attributes":[]},{"id":1043,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8835291,"byte_end":8835302,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11516}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11826,"byte_end":11832,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":99}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11908,"byte_end":11914,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1063}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":161036,"byte_end":161053,"line_start":93,"line_end":93,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10204}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12148,"byte_end":12152,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2754}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12163,"byte_end":12168,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2793}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12366,"byte_end":12368,"line_start":333,"line_end":333,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2795}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12592,"byte_end":12596,"line_start":343,"line_end":343,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11303}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/poll.rs","byte_start":14821,"byte_end":14829,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/async_await/pending.rs","byte_start":15996,"byte_end":16007,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58170,"byte_end":58177,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58304,"byte_end":58311,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3872},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":58545,"byte_end":58552,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3872},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":59331,"byte_end":59338,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3872},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":59572,"byte_end":59579,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3872},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62549,"byte_end":62553,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":62655,"byte_end":62659,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64383,"byte_end":64387,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3930},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":64496,"byte_end":64500,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3930},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65379,"byte_end":65382,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65557,"byte_end":65560,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3975},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":65824,"byte_end":65827,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3975},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":66945,"byte_end":66956,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":67110,"byte_end":67121,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4598},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68301,"byte_end":68307,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68350,"byte_end":68356,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68614,"byte_end":68619,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68846,"byte_end":68851,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":68948,"byte_end":68953,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69197,"byte_end":69203,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":69669,"byte_end":69675,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":70367,"byte_end":70372,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":72069,"byte_end":72075,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":257},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":72227,"byte_end":72233,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":73771,"byte_end":73776,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":75563,"byte_end":75569,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":75763,"byte_end":75769,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":76197,"byte_end":76205,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":265},"to":{"krate":21,"index":260}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41470,"byte_end":41471,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":41602,"byte_end":41608,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8493},"to":{"krate":0,"index":329}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98462,"byte_end":98472,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98637,"byte_end":98647,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4643},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":98753,"byte_end":98763,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4643},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99416,"byte_end":99426,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99556,"byte_end":99566,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4688},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":99819,"byte_end":99829,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4688},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":100860,"byte_end":100870,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4688},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":101123,"byte_end":101133,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4688},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104563,"byte_end":104576,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104709,"byte_end":104722,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4746},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":104978,"byte_end":104991,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4746},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":81184,"byte_end":81187,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":476}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":81270,"byte_end":81279,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":32},"to":{"krate":0,"index":476}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106360,"byte_end":106364,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":106937,"byte_end":106941,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5732},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":107073,"byte_end":107077,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":107654,"byte_end":107661,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5738},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108212,"byte_end":108219,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5738},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108364,"byte_end":108371,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5738},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":108398,"byte_end":108405,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5738},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":109726,"byte_end":109735,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110750,"byte_end":110759,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5744},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":110975,"byte_end":110984,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":112405,"byte_end":112417,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113459,"byte_end":113471,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5803},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":113699,"byte_end":113711,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5803},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115235,"byte_end":115247,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5862},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115580,"byte_end":115592,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5862},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":115775,"byte_end":115787,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5862},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116197,"byte_end":116203,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":116873,"byte_end":116879,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":117021,"byte_end":117027,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117504,"byte_end":117509,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117688,"byte_end":117693,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5910},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117725,"byte_end":117730,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5910},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":117827,"byte_end":117832,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5910},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":125124,"byte_end":125131,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":126894,"byte_end":126901,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":127598,"byte_end":127605,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":128075,"byte_end":128081,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6308},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":130323,"byte_end":130329,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6308},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":131032,"byte_end":131038,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6308},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":131575,"byte_end":131584,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":132564,"byte_end":132573,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":133279,"byte_end":133288,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":141505,"byte_end":141515,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":143277,"byte_end":143287,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":144460,"byte_end":144470,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":144952,"byte_end":144961,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":146667,"byte_end":146676,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":148029,"byte_end":148037,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":149007,"byte_end":149015,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":150459,"byte_end":150467,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151125,"byte_end":151131,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151516,"byte_end":151522,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":151903,"byte_end":151909,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152150,"byte_end":152156,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6702},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152503,"byte_end":152509,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6702},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":152785,"byte_end":152791,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6702},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":153151,"byte_end":153157,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6702},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":154935,"byte_end":154941,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6702},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":156012,"byte_end":156018,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6702},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":157357,"byte_end":157363,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6702},"to":{"krate":26,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":157801,"byte_end":157807,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6702},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8703359,"byte_end":8703368,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":11858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8704670,"byte_end":8704681,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706557,"byte_end":8706564,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706747,"byte_end":8706754,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6810},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8706780,"byte_end":8706789,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":11858},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8707763,"byte_end":8707774,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209630,"byte_end":209635,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":209904,"byte_end":209909,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6823},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":210114,"byte_end":210119,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6823},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211668,"byte_end":211675,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":211986,"byte_end":211993,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6880},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":212169,"byte_end":212176,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6880},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":213068,"byte_end":213074,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":213349,"byte_end":213355,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6936},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":214130,"byte_end":214136,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6936},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":214805,"byte_end":214814,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":215047,"byte_end":215056,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6981},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":215174,"byte_end":215183,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6981},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":216567,"byte_end":216573,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217046,"byte_end":217052,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217446,"byte_end":217452,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7030},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":217801,"byte_end":217807,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7030},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":219956,"byte_end":219965,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7103},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220262,"byte_end":220271,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220572,"byte_end":220581,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7103},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":220858,"byte_end":220867,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7103},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":222944,"byte_end":222951,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":223120,"byte_end":223127,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7173},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":223319,"byte_end":223326,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7173},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":224768,"byte_end":224772,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7295},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225128,"byte_end":225132,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225465,"byte_end":225469,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7295},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":225716,"byte_end":225720,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7295},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227253,"byte_end":227260,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7374},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227553,"byte_end":227560,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":227854,"byte_end":227861,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7374},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":228112,"byte_end":228119,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7374},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229168,"byte_end":229172,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229673,"byte_end":229677,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7440},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":229775,"byte_end":229779,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7440},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":230979,"byte_end":230991,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233501,"byte_end":233513,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7489},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":233633,"byte_end":233645,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7489},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234493,"byte_end":234496,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7572},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234711,"byte_end":234714,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":234888,"byte_end":234891,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7572},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":235065,"byte_end":235068,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7572},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236215,"byte_end":236219,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7721},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236270,"byte_end":236274,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236425,"byte_end":236429,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7721},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":236568,"byte_end":236572,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7721},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237221,"byte_end":237235,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237396,"byte_end":237410,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7729},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":237554,"byte_end":237568,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7729},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":238743,"byte_end":238751,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":239940,"byte_end":239948,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7737},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":240090,"byte_end":240098,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7737},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241256,"byte_end":241260,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241531,"byte_end":241535,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7786},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":241646,"byte_end":241650,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7786},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242496,"byte_end":242500,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242728,"byte_end":242732,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7835},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":242850,"byte_end":242854,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7835},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244481,"byte_end":244490,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7884},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":244942,"byte_end":244951,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":245380,"byte_end":245389,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7884},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":245649,"byte_end":245658,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":7884},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":247941,"byte_end":247945,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":248155,"byte_end":248159,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7960},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":249153,"byte_end":249157,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7960},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250104,"byte_end":250113,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8009},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250561,"byte_end":250570,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":250992,"byte_end":251001,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8009},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":252555,"byte_end":252564,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8009},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":253876,"byte_end":253885,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8085},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":254212,"byte_end":254221,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":256414,"byte_end":256423,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":8085},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":257455,"byte_end":257464,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8085},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258338,"byte_end":258342,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8148},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258632,"byte_end":258636,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":258945,"byte_end":258949,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8148},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":259187,"byte_end":259191,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8148},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":261057,"byte_end":261060,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262711,"byte_end":262714,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8218},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":262905,"byte_end":262908,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8218},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":265552,"byte_end":265558,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":266069,"byte_end":266075,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":8281},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":267713,"byte_end":267719,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":8281},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":268648,"byte_end":268659,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":269024,"byte_end":269035,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8333},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":271143,"byte_end":271154,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8333},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272084,"byte_end":272088,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8385},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272574,"byte_end":272578,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":272742,"byte_end":272746,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":273213,"byte_end":273217,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8385},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":274444,"byte_end":274448,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8385},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724448,"byte_end":8724463,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":11813},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8724795,"byte_end":8724810,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":11813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8725223,"byte_end":8725238,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":11813},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8726715,"byte_end":8726730,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":11813},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8727760,"byte_end":8727768,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":11768},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8728115,"byte_end":8728123,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":11768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8728460,"byte_end":8728468,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":11768},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8730780,"byte_end":8730797,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":11700},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731143,"byte_end":8731160,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":11700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731631,"byte_end":8731648,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":11700},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8731890,"byte_end":8731907,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":11700},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275430,"byte_end":275441,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":275651,"byte_end":275662,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8566},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":276570,"byte_end":276581,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8566},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167639,"byte_end":167640,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":1864},"to":{"krate":0,"index":1865}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167783,"byte_end":167789,"line_start":202,"line_end":202,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":1865}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310193,"byte_end":310200,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8615},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310493,"byte_end":310500,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":310793,"byte_end":310800,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8615},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":311978,"byte_end":311985,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":8615},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":312880,"byte_end":312890,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":313089,"byte_end":313099,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8916},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":313220,"byte_end":313230,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8916},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314284,"byte_end":314290,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9116},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314582,"byte_end":314588,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":9116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":314878,"byte_end":314884,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":9116},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":316197,"byte_end":316203,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9116},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317119,"byte_end":317126,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9186},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317180,"byte_end":317187,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317353,"byte_end":317360,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":9186},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":317502,"byte_end":317509,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":9186},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318240,"byte_end":318250,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":9194},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318546,"byte_end":318556,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":9194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":318870,"byte_end":318880,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":9194},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320207,"byte_end":320216,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9260},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320612,"byte_end":320621,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":320925,"byte_end":320934,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":9260},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":321203,"byte_end":321212,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":9260},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323318,"byte_end":323330,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":9333},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323630,"byte_end":323642,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":323847,"byte_end":323859,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":9333},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":324149,"byte_end":324161,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":9333},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326269,"byte_end":326279,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":9403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326544,"byte_end":326554,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":9403},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":326800,"byte_end":326810,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":9403},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328355,"byte_end":328365,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":9453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328557,"byte_end":328567,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":9453},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":328755,"byte_end":328765,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":9453},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329722,"byte_end":329731,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":9509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":329997,"byte_end":330006,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":9509},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331197,"byte_end":331204,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9554},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331563,"byte_end":331570,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":331928,"byte_end":331935,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":9554},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":332201,"byte_end":332208,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":9554},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":335976,"byte_end":335985,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":9633},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":336286,"byte_end":336295,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":9633},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":337984,"byte_end":337996,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":9698},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":338452,"byte_end":338464,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":9698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":338913,"byte_end":338925,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":9698},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":340428,"byte_end":340440,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":9698},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":341588,"byte_end":341600,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":9774},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":342052,"byte_end":342064,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":9774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":342499,"byte_end":342511,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":9774},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":344087,"byte_end":344099,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":9774},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8745773,"byte_end":8745791,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":11652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8746150,"byte_end":8746168,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":11652},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748317,"byte_end":8748337,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":11584},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748702,"byte_end":8748722,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":11584},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8748973,"byte_end":8748993,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":11584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8749485,"byte_end":8749505,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":11584},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345218,"byte_end":345231,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":9919},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345447,"byte_end":345460,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":9919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":345714,"byte_end":345727,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9919},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":347595,"byte_end":347608,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":9919},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":348270,"byte_end":348283,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":9919},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281399,"byte_end":281400,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":2454},"to":{"krate":0,"index":2455}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281481,"byte_end":281490,"line_start":138,"line_end":138,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":97},"to":{"krate":0,"index":2455}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":350393,"byte_end":350397,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":9938},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":351003,"byte_end":351007,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":9938},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352141,"byte_end":352147,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9944},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352174,"byte_end":352180,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":9944},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":352487,"byte_end":352493,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":9944},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353105,"byte_end":353110,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":9950},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353142,"byte_end":353147,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":9950},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":353232,"byte_end":353237,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":9950},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354227,"byte_end":354231,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":9956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354360,"byte_end":354364,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":9956},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":354969,"byte_end":354973,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":9956},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355583,"byte_end":355590,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":9998},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355622,"byte_end":355629,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9998},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":355714,"byte_end":355721,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9998},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356246,"byte_end":356252,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":356283,"byte_end":356289,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":357031,"byte_end":357037,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":2655},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":358392,"byte_end":358398,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":10004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":359821,"byte_end":359827,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":10004},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":360045,"byte_end":360051,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":10004},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363324,"byte_end":363330,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":10064},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363633,"byte_end":363639,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":10064},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":363865,"byte_end":363871,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":10064},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8753966,"byte_end":8753978,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":11539},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754083,"byte_end":8754095,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":11539},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754126,"byte_end":8754138,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":11539},"to":{"krate":2,"index":1734}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754261,"byte_end":8754273,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":11539},"to":{"krate":2,"index":1723}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8754454,"byte_end":8754466,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":11539},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757083,"byte_end":8757097,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8757123,"byte_end":8757137,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":10166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758761,"byte_end":8758775,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8758893,"byte_end":8758907,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":10166},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760091,"byte_end":8760105,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760271,"byte_end":8760285,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760543,"byte_end":8760557,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":10166},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8760727,"byte_end":8760741,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/abort.rs","byte_start":8786937,"byte_end":8786948,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":10242},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8788120,"byte_end":8788130,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":10486},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8788987,"byte_end":8788997,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":10486},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789045,"byte_end":8789052,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":10496},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789316,"byte_end":8789323,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":10496},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8789364,"byte_end":8789374,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":10505},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790291,"byte_end":8790301,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":10505},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790349,"byte_end":8790353,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":10516},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8790609,"byte_end":8790613,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":10516},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792102,"byte_end":8792106,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":10306},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792141,"byte_end":8792145,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":10306},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8792177,"byte_end":8792181,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":10306},"to":{"krate":21,"index":260}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8793258,"byte_end":8793262,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":10306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8794267,"byte_end":8794271,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":10306},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8795721,"byte_end":8795736,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":10352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8797586,"byte_end":8797601,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":10352},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8763987,"byte_end":8764003,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764044,"byte_end":8764060,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764089,"byte_end":8764105,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764130,"byte_end":8764146,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":10370},"to":{"krate":21,"index":10}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8764343,"byte_end":8764359,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":10370},"to":{"krate":21,"index":13}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766078,"byte_end":8766094,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8766197,"byte_end":8766213,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":10370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8777873,"byte_end":8777889,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":10370},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8782286,"byte_end":8782290,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":10407},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8784628,"byte_end":8784644,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8784791,"byte_end":8784807,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786247,"byte_end":8786263,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786519,"byte_end":8786535,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":10370},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8786657,"byte_end":8786673,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":10370},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799418,"byte_end":8799427,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":10451},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8799572,"byte_end":8799581,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":10451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800631,"byte_end":8800640,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":10451},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8800753,"byte_end":8800762,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":10451},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8801569,"byte_end":8801578,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":10451},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802554,"byte_end":8802563,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":10451},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8802708,"byte_end":8802717,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":10451},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365714,"byte_end":365716,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":2766},"to":{"krate":0,"index":2769}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365771,"byte_end":365773,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":2768},"to":{"krate":0,"index":2772}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":365852,"byte_end":365857,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":21,"index":10},"to":{"krate":0,"index":2769}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":368621,"byte_end":368631,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":13},"to":{"krate":0,"index":2772}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398163,"byte_end":398173,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":10531},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":398610,"byte_end":398620,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":10531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399137,"byte_end":399147,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":10531},"to":{"krate":1,"index":3052}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":399687,"byte_end":399697,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":10531},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":400446,"byte_end":400456,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":10531},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401176,"byte_end":401186,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":10531},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401774,"byte_end":401784,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":10531},"to":{"krate":1,"index":3070}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":401923,"byte_end":401933,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":10531},"to":{"krate":26,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":402171,"byte_end":402181,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":10531},"to":{"krate":1,"index":3076}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":402392,"byte_end":402402,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":10531},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":404112,"byte_end":404121,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":10568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":405343,"byte_end":405352,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":10568},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":406964,"byte_end":406973,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":10568},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":407826,"byte_end":407835,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":10568},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":407913,"byte_end":407922,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":10568},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":408238,"byte_end":408247,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":10568},"to":{"krate":26,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":412055,"byte_end":412064,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":10624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":413638,"byte_end":413647,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":10624},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415070,"byte_end":415079,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":10624},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415160,"byte_end":415169,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":10624},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415250,"byte_end":415259,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":10624},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":415618,"byte_end":415627,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":10624},"to":{"krate":26,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":416496,"byte_end":416501,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":10677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":417802,"byte_end":417807,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":10677},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":418137,"byte_end":418142,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":10677},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":419495,"byte_end":419500,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":10677},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420611,"byte_end":420616,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":10733},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420669,"byte_end":420674,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":10733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":420817,"byte_end":420822,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":10733},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":422570,"byte_end":422574,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":10741},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":424258,"byte_end":424265,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":10806},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":426111,"byte_end":426117,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":10877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429345,"byte_end":429351,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":429638,"byte_end":429644,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":430276,"byte_end":430282,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431431,"byte_end":431437,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431512,"byte_end":431518,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431596,"byte_end":431602,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":431675,"byte_end":431681,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":10877},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":432664,"byte_end":432669,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":3115},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":433017,"byte_end":433022,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":3115},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":433254,"byte_end":433259,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433757,"byte_end":433764,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":10905},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433819,"byte_end":433826,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":10905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":433960,"byte_end":433967,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":10905},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435537,"byte_end":435542,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":10913},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435595,"byte_end":435600,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":10913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":435714,"byte_end":435719,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":10913},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436451,"byte_end":436456,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":10921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":436676,"byte_end":436681,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":10921},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437675,"byte_end":437679,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":10972},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437731,"byte_end":437735,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":10972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":437900,"byte_end":437904,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":10972},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438592,"byte_end":438604,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438656,"byte_end":438668,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":10981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":438847,"byte_end":438859,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":10981},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439529,"byte_end":439538,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":10990},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439590,"byte_end":439599,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":10990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":439769,"byte_end":439778,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":10990},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440895,"byte_end":440903,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":909}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":440958,"byte_end":440966,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":10999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":441993,"byte_end":442001,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442731,"byte_end":442740,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":11010},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":442792,"byte_end":442801,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":11010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":443082,"byte_end":443087,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":3286},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":444637,"byte_end":444646,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":11010},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445494,"byte_end":445506,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":11020},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":445558,"byte_end":445570,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":11020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":446604,"byte_end":446616,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":918}},"from":{"krate":0,"index":11020},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447411,"byte_end":447420,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":919}},"from":{"krate":0,"index":11031},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":447475,"byte_end":447484,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":11031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":448456,"byte_end":448465,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":11031},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":449664,"byte_end":449670,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":922}},"from":{"krate":0,"index":3358},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":450450,"byte_end":450456,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":3358},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":450970,"byte_end":450974,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":11042},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":451026,"byte_end":451030,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":925}},"from":{"krate":0,"index":11042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":451187,"byte_end":451191,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":926}},"from":{"krate":0,"index":11042},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":452320,"byte_end":452324,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":3400},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":453042,"byte_end":453046,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454051,"byte_end":454059,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":11051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454557,"byte_end":454566,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":11057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":454958,"byte_end":454966,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":11051},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":455431,"byte_end":455440,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":11057},"to":{"krate":26,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456417,"byte_end":456429,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":3457},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456619,"byte_end":456631,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":3457},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":456865,"byte_end":456877,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"kind":{"Impl":{"id":935}},"from":{"krate":0,"index":3457},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":457408,"byte_end":457412,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":11063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459339,"byte_end":459343,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":11063},"to":{"krate":26,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":459987,"byte_end":459991,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":11063},"to":{"krate":26,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":461838,"byte_end":461844,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":11112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":463947,"byte_end":463953,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":945}},"from":{"krate":0,"index":11112},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":464100,"byte_end":464106,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":946}},"from":{"krate":0,"index":11112},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464627,"byte_end":464632,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":947}},"from":{"krate":0,"index":11119},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464685,"byte_end":464690,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":948}},"from":{"krate":0,"index":11119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":464852,"byte_end":464857,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":949}},"from":{"krate":0,"index":11119},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465541,"byte_end":465554,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":950}},"from":{"krate":0,"index":11128},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465607,"byte_end":465620,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":951}},"from":{"krate":0,"index":11128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":465793,"byte_end":465806,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":952}},"from":{"krate":0,"index":11128},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466473,"byte_end":466481,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":953}},"from":{"krate":0,"index":11137},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466534,"byte_end":466542,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":11137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":466708,"byte_end":466716,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":11137},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":375117,"byte_end":375126,"line_start":140,"line_end":140,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":17},"to":{"krate":0,"index":3581}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383156,"byte_end":383157,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3581}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":383260,"byte_end":383270,"line_start":393,"line_end":393,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":26,"index":20},"to":{"krate":0,"index":3598}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389342,"byte_end":389343,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":3608},"to":{"krate":0,"index":3598}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389444,"byte_end":389453,"line_start":580,"line_end":580,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":25},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389877,"byte_end":389878,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":3612},"to":{"krate":0,"index":3609}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":389985,"byte_end":389997,"line_start":596,"line_end":596,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":26,"index":27},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":397227,"byte_end":397228,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":3622},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467478,"byte_end":467479,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":960}},"from":{"krate":0,"index":3638},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467617,"byte_end":467624,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3633},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467713,"byte_end":467714,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":961}},"from":{"krate":0,"index":3647},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467899,"byte_end":467905,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3643},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":467983,"byte_end":467984,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":962}},"from":{"krate":0,"index":3655},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":468999,"byte_end":469003,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":963}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469097,"byte_end":469101,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":964}},"from":{"krate":0,"index":3660},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469360,"byte_end":469367,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":970}},"from":{"krate":0,"index":11164},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469590,"byte_end":469597,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":971}},"from":{"krate":0,"index":11164},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":469788,"byte_end":469795,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":972}},"from":{"krate":0,"index":11164},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470100,"byte_end":470113,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":973}},"from":{"krate":0,"index":11185},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470530,"byte_end":470539,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":11201},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":470821,"byte_end":470830,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":980}},"from":{"krate":0,"index":11201},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471090,"byte_end":471099,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":981}},"from":{"krate":0,"index":11201},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471419,"byte_end":471426,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":982}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471645,"byte_end":471652,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":983}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":471830,"byte_end":471837,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472138,"byte_end":472146,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":985}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472369,"byte_end":472377,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":986}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472559,"byte_end":472567,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":987}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":472877,"byte_end":472888,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":988}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473125,"byte_end":473136,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":989}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473351,"byte_end":473362,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":990}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473707,"byte_end":473719,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":991}},"from":{"krate":0,"index":11258},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":473957,"byte_end":473969,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":992}},"from":{"krate":0,"index":11258},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":474185,"byte_end":474197,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":993}},"from":{"krate":0,"index":11258},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":474794,"byte_end":474808,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":11270},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475029,"byte_end":475043,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":11270},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475242,"byte_end":475256,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":11270},"to":{"krate":0,"index":3651}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475560,"byte_end":475566,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":475661,"byte_end":475667,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":998}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":3633}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813370,"byte_end":8813375,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":1004}},"from":{"krate":0,"index":11326},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813708,"byte_end":8813713,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":11326},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813806,"byte_end":8813811,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":11326},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8813949,"byte_end":8813955,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":11340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8814499,"byte_end":8814504,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1008}},"from":{"krate":0,"index":11326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8815080,"byte_end":8815085,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":1009}},"from":{"krate":0,"index":11326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818234,"byte_end":8818249,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1010}},"from":{"krate":0,"index":11363},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818759,"byte_end":8818774,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1011}},"from":{"krate":0,"index":11363},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8818891,"byte_end":8818906,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1012}},"from":{"krate":0,"index":11363},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820135,"byte_end":8820150,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"kind":{"Impl":{"id":1013}},"from":{"krate":0,"index":11363},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8820752,"byte_end":8820762,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1014}},"from":{"krate":0,"index":11382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8821774,"byte_end":8821784,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":1015}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822029,"byte_end":8822039,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"kind":{"Impl":{"id":1016}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822137,"byte_end":8822147,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1017}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822288,"byte_end":8822298,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1018}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8822749,"byte_end":8822765,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"kind":{"Impl":{"id":1019}},"from":{"krate":0,"index":11405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8823895,"byte_end":8823911,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"kind":{"Impl":{"id":1020}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824176,"byte_end":8824192,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1021}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824304,"byte_end":8824320,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"kind":{"Impl":{"id":1022}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824463,"byte_end":8824479,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"kind":{"Impl":{"id":1023}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824756,"byte_end":8824761,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1024}},"from":{"krate":0,"index":11326},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824807,"byte_end":8824812,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1025}},"from":{"krate":0,"index":11326},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8824979,"byte_end":8824994,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"kind":{"Impl":{"id":1026}},"from":{"krate":0,"index":11363},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825098,"byte_end":8825113,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1027}},"from":{"krate":0,"index":11363},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825317,"byte_end":8825327,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1028}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825377,"byte_end":8825387,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1029}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825455,"byte_end":8825471,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"kind":{"Impl":{"id":1030}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8825542,"byte_end":8825558,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"kind":{"Impl":{"id":1031}},"from":{"krate":0,"index":11405},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827562,"byte_end":8827567,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1032}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827604,"byte_end":8827609,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1033}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8827625,"byte_end":8827631,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1034}},"from":{"krate":0,"index":11518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833316,"byte_end":8833321,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1035}},"from":{"krate":0,"index":11524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833443,"byte_end":8833448,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1036}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833776,"byte_end":8833788,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1037}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8833978,"byte_end":8833990,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1038}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834211,"byte_end":8834223,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1039}},"from":{"krate":0,"index":11491},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834605,"byte_end":8834616,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1040}},"from":{"krate":0,"index":11531},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834779,"byte_end":8834790,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"kind":{"Impl":{"id":1041}},"from":{"krate":0,"index":11531},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8834928,"byte_end":8834939,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1042}},"from":{"krate":0,"index":11531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8835291,"byte_end":8835302,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1043}},"from":{"krate":0,"index":11531},"to":{"krate":2,"index":2166}}]}